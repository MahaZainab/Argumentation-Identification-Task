Text,Label
"complicated 3D character models are widely used in fields of entertainment, virtual reality, medicine etc",background_claim
The range of breathtaking realistic 3D models is only limited by the creativity of artists and resolution of devices,background_claim
a production cannot afford major revisions,background_claim
providing a flexible and efficient solution to animation remains an open problem,own_claim
Skeleton Subspace Deformation (SSD) is the predominant approach to character skinning at present,background_claim
Driving 3D models in a natural and believable manner is not trivial,background_claim
its ease of implementation,data
low cost of computing,data
"SSD is widely used in games, virtual reality and other realtime applications",background_claim
artists will edit the geometry of characters in the rest pose to fine-tune animations,background_claim
This approach is not commonly applied,background_claim
editing in the rest pose will influence most other poses,background_claim
SSD is also notorious for artifacts at rotating elbows and extreme poses,background_claim
Example based skinning methods such as Pose Space Deformation (PSD) are candidates for correcting SSD limitations,background_claim
PSD may be used as a compensation to the underlying SSD,background_claim
the animator specifies the PSD examples after the SSD has been performed,background_claim
"the examples are best interpolated in the rest pose, before the SSD has been applied",background_claim
the action of the SSD and any other deformations must be “inverted” in order to push the example compensation before these operations,background_claim
SSD is the most representative in the family of basic skinning,background_claim
this inverse strategy has a better performance than the same framework without it,own_claim
this approach will improve the quality of deformation,own_claim
they are seldom applied to interactive applications,background_claim
the high cost of computing,data
complicated algorithms,data
this category can generate more believable animation effects compared to its geometric counterpart,background_claim
Pose Space Deformation,background_claim
combines shape blending and Skeleton Subspace Deformation by formulating a scattered data interpolation problem over sculpted (or otherwise obtained) example poses,background_claim
[ 1 ],data
Related research efforts have improved the speed and power of example-based skinning,background_claim
incorporate linear elements into RBF to produce constant changes between examples,background_claim
[ 2 ],data
precompute principal components of the deformation influences for individual kinematic joints instead of storing displacements for key poses,background_claim
enabling realtime rendering large nonlinear finite element models of human hands,background_claim
[ 3 ],data
introduce weighted pose space deformation for deforming realistic models of human hand,background_claim
[ 4 ],data
these example-based approaches can be considered as non-parametric skin deformation methods,background_claim
identifies statistically relevant bones and approximates bone transforms from example mesh animations,background_claim
[ 5 ],data
these have also seen some development in recent years,background_claim
[ 6 ],data
[ 7 ],data
are also common practices in the entertainment production,background_claim
Skinning using free form lattices,background_claim
NURBS curves,background_claim
[ 10 ],data
[ 8 ],data
[ 9 ],data
the inverse operation can improve the results,own_claim
inverse operation is required,own_claim
SSD is widely applied to interactive applications such as games and virtual reality,background_claim
it is implemented in most commercial animation packages,background_claim
its simplicity,data
efficiency,data
SSD is very popular in circumstances that require animating a number of characters in real time,background_claim
vertex transformations can be easily implemented in the graphic card,data
the domain of adjusting one vertex in this way is strictly limited to the linear subspace formed by the vertex as transformed by joints influencing this vertex,background_claim
"When a character goes wrong in some pose, animators can adjust joint influence weights",background_claim
SSD cannot synthesize many parts of a character skin involving complicated joint structures,background_claim
deforming is limited to a linear subspace,background_claim
[ 1 ],data
a combination of SSD and shape blending providing nice solution to above mentioned problems,background_claim
[ 1 ],data
PSD and improved example-based schemes have been discussed in many publications,background_claim
[ 2 ],data
[ 3 ],data
[ 4 ],data
the reason why the inverse should be performed is still ambiguous,own_claim
inverting the SSD (and other deformations) in order to interpolate the examples in the rest pose is a the right choice,own_claim
it is an improvement,own_claim
the superiority of the inverse method,own_claim
SSD −1 simply is the inverse transformation matrix generated by SSD,own_claim
SSD is a 3D transformation,data
the inverse method is superior,own_claim
Taking the model in rest pose as an example is a common practice when applying shape interpolation,background_claim
interpolating effects from other examples should not change the original model in rest pose,background_claim
"we have: ω 1x = φ 11 −1 d 1x + φ 12 −1 d 2x = φ 12 −1 d 2x ω 2x = φ 21 −1 d 1x + φ 22 −1 d 2x = φ 22 −1 d 2x = d 2x ω 1y = φ 11 −1 d 1y + φ 12 −1 d 2y = φ 12 −1 d 2y ω 2y = φ 21 −1 d 1y + φ 22 −1 d 2y = φ 22 −1 d 2y = d 2y where φ i −1 j is the (i, j)th element of Φ −1",own_claim
we simplify SSD as a rotation transformation ignoring other issues such as accumulating effects from the first joint,own_claim
only the second joint is rotating,own_claim
"in forward case, the direction of deformed vertex always keeps the same with the example cylinder",own_claim
( figure 4 ),data
"For inverse PSD however, that direction is changed along with the rotation of the joint",own_claim
PSD is supposed to be a method as “local” correction,own_claim
pose space should not be extended to a whole space that has to incorporate all influenced objects,own_claim
a matter of experience,data
large amount of unnecessary works of building examples will be required,own_claim
the distance between different poses is also meaningless,own_claim
most of which have been implemented in most animation packages,background_claim
"in many circumstances, other deformation schemes will be adopted",background_claim
[ 10 ],data
[ 9 ],data
we can deform the original character model from rest pose to another specific pose,own_claim
One advantage of Powell’s classic method is that it does not need explicit computation of the function’s gradient,background_claim
[ 12 ],data
Powell’s method is suitable,own_claim
"we are treating the skinning operations as a “black box”, their gradient is not available",data
"after repeated cycles of M line minimizations on conjugate directions, the optimization will in due course converge to the minimum",background_claim
[ 12 ],data
"If the SSD transformation in equation 1 is singular, some types of inverse PSD deformation will not be possible",own_claim
any component of the desired deformation that lies in the null space of the SSD matrix will be ignored,data
singular cases are rare,own_claim
it is possible to handle these cases with a small rearrangement of the inverse PSD approach,own_claim
"one example is a joint with 180 o rotation and equal 2 1 , 2 1 weights on the two joint frames, which is an unrealistic case of selfintersection",data
it will be generally be zero,own_claim
w i is being minimized,data
will be non-zero only if it is not possible to obtain the desired deformation v i using SKINNING i (v r + d i ),own_claim
Inverse skinning integrates SSD and shape interpolation more firmly than its forward rival.,own_claim
the inverse approach presents better performance and more consistent interpolation,own_claim
Figure 7 to Figure 10,data
"the direction of deformed vertex in inverse skinning is linearly proportional to joint rotations in a simplified example, while the forward PSD does not incorporate the direction information",own_claim
the minimizing process will introduce more cost,own_claim
The cost of the inverse operation is not critical,own_claim
it is a one time “setup” cost,own_claim
the compute time is insignificant compared to the human time required to sculpt the desired deformations,own_claim
a frame goes wrong,data
physical principles,data
the model is very detailed,data
playback of animation becomes quite heavy and time consuming,data
For those applications that require visual fidelity,background_claim
SSD serves only as a basic framework,background_claim
PSD smoothly interpolates these meshes in pose space and produces visually attractive animations,background_claim
"Besides SSD, other skinning approaches",background_claim
can also be applied,background_claim
rigid skinning,data
Free Form Deformation,data
physical modelling and animation is another field providing realistic character simulations,background_claim
Simpler parametric skinning approaches (of which SSD is the prototype) have a fixed number of parameters,background_claim
the direction of deformed vertices from inverse skinning is a linear function of joint rotation,own_claim
"in the forward approach, that direction is kept as a constant",own_claim
propose a unified framework which can be implemented on high-end commercial packages while allowing any proprietary skinning operators to be incorporated,own_claim
Skeleton Subspace Deformation (SSD) is a basic algorithm that is used to define how the character surface deforms following movements of its underlying skeletons,background_claim
[ 11 ],data
SSD is adopted to define this relation,data
"each vertex or control point of the character surface is provided with a list of joints, that will influence it, along with the weight indicating the amount of influence",background_claim
the position of a vertex in the animated pose is the result of weighted linear blending of its transformation by each associated joint,background_claim
the character is animated,data
The famous SSD problem of “collapsed elbow”,background_claim
sculpted in N example poses,data
a vertex v,data
"there are N delta d i , i = 0, . . . , N − 1 corresponding to each pose x i , i = 0, . . . , N − 1",own_claim
SSD as the underlying skinning,own_claim
an explicit form of basic skinning can help to simplify our task of explanation,own_claim
"in the rest pose, we didn’t generate any movement for v",data
"d 1 = [d 1x , d 1y ] = [0, 0]",own_claim
by solving above equation,data
i = j,data
φ i −1 j = 1,own_claim
"this angle α p is a constant and depends only on the value of delta in the second pose d 2 = [d 2x , d 2y ]",own_claim
tan α p = d d x y = ω ω 1x 1y φ φ (x (x − − x x 1 1 ) ) + + ω ω 2y 2x φ φ (x (x − − x x 2 2 ) ) = φ φ 12 12 −1 −1 d d 2x 2y φ φ (x (x − − x x 1 1 ) ) + + d d 2x 2y φ φ (x (x − − x x 2 2 ) ) = d 2y d 2x,own_claim
tan α p = d d x y,own_claim
The case described above is quite common in practice,own_claim
"animating shoulder, elbow, knee, hip-bone, neck",data
All these parts would rotate from the rest pose with some angle to other poses,own_claim
a unified framework in which no explicit inverse operation is necessitated,own_claim
a basic skinning method supported by animation packages,data
v i t = v i + d i = SKINNING i (v r ) + d i,own_claim
we need to replace SSD with SKINNING in the inverse skinning algorithm as such for equation 4,own_claim
the more general case,data
To find delta d i in the rest pose: v i = SKINNING i (v r ) + d i = SKINNING i (v r + d i ) we can setup a minimization problem to minimize the function,own_claim
This function can be given to Powell’s method to find d i at the minimum of f (d ),own_claim
"For each example pose P i , we have a d i",data
we can apply radial basis function to d i (i = 0 . . . n − 1) in pose space to obtain ω i (i = 0 . . . n − 1),own_claim
Minimizing the function f (d ) in a particular direction is actually minimization problem of one variable,own_claim
Powell’s idea is trying to find each minimum of function f (d ) in different direction until f (d ) stops decreasing,background_claim
How to choose the next direction is the main concern of Powell’s method,background_claim
"In Maya, “tweaking” is a procedure adding delta values to original surface vertices before any deformations",background_claim
It is actu- ally Maya’s form of rest-pose editing for their built-in deformation operators,background_claim
the whole system is divided into two phases,own_claim
Figure 6,data
The first phase is to find each delta in the rest pose corresponding to each example pose,own_claim
the second phase that is a linear system performing RBF interpolation to obtain the PSD weights,own_claim
only minimal code changed are required,own_claim
The final synthesis is then v x = SKINNING(v r + d x ) + w x where w x is interpolated after SKINNING by applying the same RBF scheme as used for d x,own_claim
the SSD transform is nearsingular,data
"the solved d i can be much large than other d k , which can result in poorly posed interpolation",own_claim
the synthesis is potentially realtime,own_claim
no extra computing is involved in this process,own_claim
the linear system is solved,data
only one joint rotation and two example poses are considered,data
A nice review of SSD is given,background_claim
1,data
resculpting models,data
re-rigging skeletons,data
Real-time animation of deformable objects is always a compromise between visual fidelity and computation complexity,background_claim
Other aspects are quite important as well,background_claim
the amount of artists work necessary to design the model,data
there exist many algorithms for modeling deformable objects in the literature,background_claim
They differ by the intended area of application and generality of allowed models,background_claim
"Its most popular representative, known generally as the skeletal animation, is based on simple but versatile structure",background_claim
It consists of joints,data
The segments connecting the joints are conveniently interpreted as bones,background_claim
The skeleton is,background_claim
a tree whose nodes are identified with the joints and edges with the bones,background_claim
"The only displayed element is a skin, a 3D polygonal mesh, usually equipped with normal and texture data",background_claim
the terminology is adopted from the virtual humanoid modeling,background_claim
the skeletal animation is not limited to character animation,background_claim
it can be applied to a wide range of soft objects,background_claim
imaginary (cartoon) creatures,data
plants,data
furniture,data
This is an apparent advantage over complex systems which rely on explicit anatomy,background_claim
The skeleton simplifies the animation task considerably,background_claim
"instead of animating each vertex individually, it is sufficient to manipulate the skeleton, and the skin deforms automatically",background_claim
The skeletal animation in general does not specify how exactly the skeleton posture should be propagated to the skin,background_claim
there is an established standard used in majority of real-time 3D applications,background_claim
"It comes by many names, all relating to the same algorithm: linear blend skinning (LBS), skeleton subspace deformation, vertex blending, enveloping, or simply skinning",background_claim
LBS is very fast and advantageous to graphics hardware,background_claim
"it suffers from inherent artifacts, known as ”collapsing joints”, ”twisting elbow problem” or a ”candy-wrapper artifact",background_claim
the mesh deformed by LBS loses volume as the joint rotation increases,background_claim
An early contribution concerning the animation of deformable objects is,background_claim
which considers the movement of a human hand,background_claim
Magnenat-Thalmann et al. 1988,data
"First 3D characters used in numerous computer games were animated by simple, often unpublished algorithms",background_claim
the basic principles of LBS were described by the game development community,background_claim
Lander 1998,data
Lander 1999,data
The artifacts of LBS were discovered soon,background_claim
Weber 2000,data
An improvement based on addition of auxiliary joints has been also proposed in,background_claim
Weber 2000,data
this reduces the artifacts,background_claim
the skin to joints relationship must be re-designed after joint addition,background_claim
The number and location of the additional joints remains questionable,background_claim
Another problem is how the movement of the original skeleton should be propagated into the augmented one,background_claim
More formal articles consider skin deformation as an interpolation problem,background_claim
Lewis et al. 2000,data
Similar method is presented in,background_claim
Sloan et al. 2001,data
Kry et al. 2002,data
"The latter de-correlates the deformation displacements using principal component analysis, which reduces the memory requirements considerably",background_claim
The advantage of example based methods is that they capture the designed shape,background_claim
The drawback is the necessity of acquiring the example skins,background_claim
including effects like muscle bulging,background_claim
An interesting generalization of LBS is called multi-weight enveloping,background_claim
Wang and Phillips 2002,data
greater flexibility to the deformation algorithm,background_claim
It introduces more parameters,background_claim
The disadvantage is obvious,background_claim
the LBS models can be weighted manually by artists,background_claim
this is questionable with multiweight enveloping,background_claim
Steed 2002,data
Tools that help animators to design the vertex weights are described in,background_claim
Mohr et al. 2003,data
This article is interesting also from the theoretical point of view,background_claim
it describes how to explore the space of all possible LBS deformations,background_claim
Another deformation algorithm,background_claim
uses a complex auxiliary structure – a medial,background_claim
Bloomenthal 2002,data
An idea similar to spherical blend skinning (SBS) is bones blending proposed by,background_claim
Kavan and Zára ˇ 2003,data
bones blending is limited to vertices attached to only two joints,background_claim
it requires hand-tuning of special parameters,background_claim
"Another algorithm removes the LBS artifacts by adding additional joints, and computes the vertex weights automatically using examples",background_claim
Mohr and Gleicher 2003,data
A recent skin deformation algorithm presented in,background_claim
seems to give results competitive to SBS,background_claim
it is based on a different mathematical fundament,background_claim
Magnenat-Thalmann et al. 2004,data
Alexa 2002,data
this method is considerably slower than LBS,background_claim
recommends to use rather the standard LBS,background_claim
the joint rotations are small,data
Magnenat-Thalmann et al. 2004,data
"the linear blend skinning is still widely used in many applications, in spite of the artifacts",background_claim
there are many methods correcting the problems of LBS,background_claim
none of them is superior to LBS in all aspects,background_claim
"the artifacts of LBS are caused by the straightforward, linear interpolation of vertex positions",own_claim
a linear blending is not suitable to capture deformations induced by skeleton,own_claim
their nature is rather spherical,own_claim
we suggest to use a quaternion representation,own_claim
we consider transformations consisting of a translation and rotation,data
the choice of the center of rotation influences the result of interpolation considerably,own_claim
we cope with two main problems,own_claim
determination of the center of rotation,own_claim
interpolation of multiple quaternions,own_claim
The second problem is simple in the case of two quaternions,background_claim
gets considerably harder for more than two rotations,background_claim
Shoemake 1985,data
Buss and Fillmore 2001,data
Park et al. 2002,data
Alexa 2002,data
we use a simple linear quaternion averaging,own_claim
the previous methods are not efficient enough for our purpose,background_claim
this solution is appropriate for our task (and probably for many others),own_claim
we obtain a skin animation algorithm that deforms the mesh in much more plausible way then LBS,own_claim
Resolving those problems,own_claim
we change only the interpolation domain and not the input data,own_claim
our program works with exactly the same models as LBS,own_claim
The proposed algorithm improves a deformed shape even of models that have been designed and carefully tuned for LBS,own_claim
it provides an attractive alternative to classic LBS,own_claim
Considering the high speed and low memory demands of SBS,background_claim
We compare the shape of the deformed skin on the model of woman,own_claim
human eye is most sensitive to the deformations of human body,own_claim
both algorithms produce similar results,own_claim
For small deformations,data
second row of Figure 6,data
the results of SBS are better,own_claim
the models have been optimised to work with the LBS algorithm,own_claim
this number is surprisingly small in practice,own_claim
the joint influences tend to be local,own_claim
it is unlikely to find vertices influenced by both left and right wrist,own_claim
"this amount of memory is negligible, considering the number of different non-trivial joint sets",own_claim
The additional memory needed for SBS is dominated by caching the computed centers of rotation,own_claim
the difference in the deformed skin was barely observable,own_claim
results from section 4.1,data
the increase in the execution time was quite substantial,own_claim
"For the woman model, the time increased from original 4.54ms to 22.74ms",data
This only confirmed our choice of QLERP,own_claim
The algorithm proposed in,own_claim
behaves like SLERP for the case of two rotations,own_claim
Buss and Fillmore 2001,data
"in contrast to QLERP, which only approximates SLERP results",own_claim
it is exactly the number of singular-value decompositions performed by the SBS algorithm,own_claim
Table 2,data
"Theoretically, the number of different non-trivial joint sets could be very high",own_claim
This number participates considerably on the difference between times for LBS and SBS,own_claim
The proposed skin deformation system is by no means perfect,own_claim
"it cannot compete with complex, layered models",own_claim
the SBS algorithm offers reasonable price for elimination of the notorious LBS artifacts,own_claim
The overhead of replacing an existing LBS implementation by SBS is minima,own_claim
"the input data, as well as the internal data structures, are the same",data
SBS does not need any additional information,own_claim
It would be interesting to find out how much can be the SBS results improved by a set of weights especially designed for SBS,own_claim
a tool to explore the space of SBS deformations would help considerably,own_claim
the situation of SBS is somewhat more complex,own_claim
our interpolation method is non-linear,data
This tool has been presented for LBS,background_claim
Mohr et al. 2003,data
it would be possible to estimate the SBS vertex weights from examples,own_claim
as was done for LBS,background_claim
Mohr and Gleicher 2003,data
This could also cover additional effects like muscle bulging,own_claim
The polygonal mesh and the skeleton are designed in a reference position,background_claim
virtual characters are often posed in the da Vinci posture,background_claim
Steed 2002,data
"To compute the shape of the deformed skin, we need yet another set of matrices, describing the position and orientation of joints in the actual, animated posture",own_claim
The most simple skin deformation algorithm computes v = F j A −1 j v,own_claim
the first matrix A −1 j transforms v to the position with joint j’s coordinate system aligned to the world coordinate system,own_claim
The following transformation F j returns the vertex to its current position induced by the animated skeleton,own_claim
these transformations usually occur together,own_claim
we define the ”complete” matrix C j = F j A −1 j,own_claim
Some older computer games animated characters in this way,background_claim
"it does not produce nice, smooth deformations",own_claim
The linear blend skinning allows assignment of one vertex to multiple bone,background_claim
n = 2,data
vertex v lies on the line segment connecting C j 1 v and C j 2 v,own_claim
the SBS works on a circular arc instead of segment,own_claim
Figure 1,data
the joint rotations are large,data
the LBS produces non-natural deformations,own_claim
"In the extremal case of rotation by 180 degrees, the skin can collapse to a single point",own_claim
It is the notorious ”candy-wrapper” artifact,own_claim
Figure 2,data
"To understand why this undesirable effect occurs, it is sufficient to re-arrange the equation",own_claim
This formula is less efficient,own_claim
it blends matrices instead of vectors,data
gives us a valuable insight,own_claim
It is well known that the component-wise interpolation of matrices produces odd results,background_claim
it does not preserve the orthogonality of the rotational part of the matrix,own_claim
"In some situations, it does not preserve even the rank of the interpolated matrices",own_claim
This is exactly what happens in the ”candywrapper” problem: the single point the skin collapses to is a result of transformation by a singular matrix,own_claim
A similar defect is visible also in the proximity of the singular configuration,own_claim
the matrix is regular,data
"it involves a non-uniform scaling and skewing, which is responsible for the loss of volume of the deformed skin even for small rotations",own_claim
we propose to change the interpolation method in (2),own_claim
An established interpolation of two rotations is spherical linear interpolation (SLERP),background_claim
Shoemake 1985,data
the linear interpolation of the translation part of C j i matrices is all right,own_claim
Its key of success is the use of quaternions to represent rotations,background_claim
The more important problem is to compute a convenient center of the interpolated rotations,own_claim
this is really an important problem,own_claim
it is obvious that the center of rotation choice in the left column is much more advantageous,own_claim
it is not possible to simply replace matrices C j i in (2) with corresponding pairs quaternion-translation,own_claim
One of the problems is that the linear interpolation of quaternions is not equivalent to SLERP,own_claim
this is not the most serious difficulty,own_claim
the transformed rotation center is constant during the interpolation,own_claim
C j 1 r c = C j 2 r c,data
C j 1 r c = C j 2 r c,data
the transformed rotation center is linearly interpolated from C j 1 r c to C j 2 r c,own_claim
the interpolation of every single point is a circular arc,own_claim
Figure 1,data
a disturbing drift is inherent to any other choice of rotation cente,own_claim
r c,data
the condition of zero translation cannot be always satisfied,own_claim
for more than two influencing joints,data
the vertex is attached to only two joints k and l that are not neighbours of each other,data
some translation may be inevitable,own_claim
"there is no relative rotation between C k and C l , but there is a relative translation induced by the joints in the chain between k and l",data
no choice of the center of rotation can avoid this translation,own_claim
the rotation is identity,data
it is possible to define the rotation center as the point whose transformations by associated matrices are as close as possible,own_claim
"This minimizes the drift and works even if the vertex is assigned to n joints j 1 , . . . , j n",own_claim
We find the center of rotation r c as the,own_claim
"least-squares solution of the system of n 2 linear vector equations C a r c = C b r c , a &lt; b, a, b ∈ { j 1 , . . . , j n }",own_claim
"we cannot make any assumptions about the rank of matrix D, which can vary from 0 to 3",own_claim
for example n = 2 and C j 1 = C j 2,data
there are multiple solutions giving the minimal Dr c − e,data
the r c with the minimal norm is chosen,own_claim
LAPACK routines are efficient,background_claim
computation of the center of rotation per each vertex would not result in a real-time algorithm,own_claim
Anderson et al. 1999,data
we can re-use the center of rotation computed formerly (cached,own_claim
"we encounter another vertex assigned to the same set of joints j 1 , . . . , j n",data
"the center of rotation depends only on the transformations of the joints j 1 , . . . , j n and not the vertex itself",data
"there is only one, or two neighboring joints that influence the vertex",data
we can determine the center of rotation precisely (as indicated in the beginning of this section) and omit the SVD computation at all,own_claim
This enables the real-time performance,own_claim
"the number of different non-trivial joint sets, and therefore the number of running the SVD, is surprisingly small for common models",own_claim
about several tens,data
the interpolation of multiple rotations has already received some attention,background_claim
as well as interpolation of multiple general transformations,background_claim
Buss and Fillmore 2001,data
Park et al. 2002,data
Alexa 2002,data
all these methods are substantially slower then the simple linear interpolation used in LBS,background_claim
we propose an approximate but fast linear quaternion blending,own_claim
our goal is an algorithm with comparable time complexity as LBS,own_claim
this correspondence is not unique,own_claim
both quaternions q and −q represent the same rotation,data
"The SLERP of two unit quaternions p, q assumes that their dot product (p, q) ≥ 0",background_claim
"the dot product (p, q) &lt; 0",data
we use −p instead of p,own_claim
both p and −p represent the same rotation,data
The difference to SLERP is obvious,own_claim
"QLERP interpolates along the shortest segment, and then projects to arc, which does not result in the uniform interpolation of the arc",own_claim
QLERP is sufficient for our task,own_claim
t = 0,data
both QLERP and SLERP return of course p,own_claim
"t &gt; 0,",data
both QLERP and SLERP work by concatenating p with some rotation (multiplying p with some quaternion),own_claim
"It can be expressed as p ∗ s(t; p, q)",own_claim
"pr s (t) = pp ∗ s(t; p, q) = s(t; p, q)",data
"the SLERP can be written as pr s (t) and QLERP as pr l (t), where the rotations r s (t) and r l (t) have the same axis",own_claim
"this axis is constant, i.e. independent on the interpolation parameter t",own_claim
the only difference between QLERP and SLERP is in the angle of rotations r s (t) and r l (t),own_claim
"both SLERP and QLERP interpolate by multiplying the first quaternion with a rotation with the same, fixed axis",own_claim
"The difference between SLERP and QLERP is only in the angle of this rotation, and is strictly less then 0.143 radians (8.15 degrees) for any interpolation parameter t ∈ 0, 1",own_claim
This is an upper bound; practical results are much smaller and could hardly cause an observable defect in the deformed skin,own_claim
The big advantage of QLERP is that it can be easily generalized to interpolate multiple rotations,own_claim
"SLERP assumes cos θ = (p, q) ≥ 0",data
the angle θ cannot exceed π /2,own_claim
both r s (t) and r l (t) have a form of linear combination of quaternions 1 and p ∗ q,data
the results of both r s (t) and r l (t) always end up in certain 2D subspace of R 4,own_claim
we can express it as p ∗ q = cos θ + u sin θ for some axis of rotation u,own_claim
p ∗ q is a unit quaternion,data
we substitute this into equation (5),data
we obtain sin((1 − t) θ ) + sin(t θ ) cos θ r s (t) = sin θ + u sin(t θ ),own_claim
the direction of the axis u is independent on t,own_claim
"(q j 1 , q j i ) &lt; 0 for any i = 2, . . . , n",data
we replace q j i with −q j i (by analogy to SLERP),own_claim
"Then the QLERP computes s = w 1 q j 1 + . . . + w n q j n , which is subsequently normalized to s n = s/ s",own_claim
the shift of the center of rotation does not influence the interpolated rotation – it manifests only in the translation part.,own_claim
should be as efficient as possible,own_claim
The equation (9) has to be evaluated once per each vertex,own_claim
"they do not depend on the actual vertex – only on the joint’s transformation, similarly as the rotation centers r c",own_claim
The basic optimization is to pre-compute the quaternions q j i,own_claim
QLERP has to be executed for each vertex,own_claim
"weights w 1 , . . . , w n can vary",data
The vertex v can be represented by a quaternion with zero real part,own_claim
"its rotation by quaternion q can be expressed as q vq ∗ , which is a quaternion with zero real part as well",own_claim
Eberly 2001,data
this expression is not efficient for computation,own_claim
because of slow quaternion multiplication,own_claim
"it enables us to write out the rotation of v by quaternion s n as s n vs n ∗ = s 1 2 svs ∗ = (s, 1 s) svs ∗",own_claim
"This suggests to convert already the quaternion s to matrix Q and normalize subsequently by dividing (s, s)",own_claim
"we can compute the Q matrix from (9) as Q = (s,s) Q and save the sqrt operation",own_claim
we substitute r c in place of v,data
no rotation occurs,own_claim
r c is indeed a center of rotation,own_claim
n = 2 and C j 1 r c = C j 2 r c,data
the translation part becomes w 1 C j 1 r c + w 2 C j 2 r c = (w 1 + w 2 )C j 1 r c = C j 1 r c which is independent of interpolation parameters (weights),own_claim
the translation during interpolation is constant indeed,own_claim
the equation (9) is nothing but a generalization of LBS to an arbitrary method of rotation interpolation,own_claim
The choice of QLERP is not important for (9),own_claim
the matrix Q can be replaced by matrix resulting from any other interpolation scheme,own_claim
Buss and Fillmore 2001,data
we substitute Q = ∑ w i C rot j i,data
we obtain v = Q(v − r c ) + ∑ w i C j i r c = ∑ w i C rot j i v − ∑ w i C rot j i r c + ∑ w i C rot j i r c + ∑ w i C tr j i = ∑ w i C rot j i v + ∑ w i C tr j i = ∑ w i C j i v which is exactly the LBS,own_claim
equation (1),data
"LBS is a special case, which is independent of the center of rotation",own_claim
next section,data
Modeling in 3D is becoming much easier than before,background_claim
User-friendly systems,background_claim
have made the creation of 3D characters accessible to novices and children,background_claim
Teddy,data
Cosmic Blobs,data
http://www.cosmicblobs.com/,data
Igarashi et al. 1999,data
Bringing these static shapes to life,background_claim
is still not easy,background_claim
the user must rig the character manually,background_claim
In a conventional skeletal animation package,data
This requires placing the skeleton joints inside the character and specifying which parts of the surface are attached to which bone,background_claim
The tedium of this process makes simple character animation more difficult than it could be,own_claim
"We envision a system that eliminates this tedium to make animation more accessible for children, educators, researchers, and other non-expert animators",own_claim
"a child should be able to model a unicorn, click the “Quadruped Gallop” button, and watch the unicorn start galloping",data
we need a method,own_claim
"that takes a character, a skeleton, and a motion of that skeleton as input, and outputs the moving character",own_claim
Figure 1,data
The missing portion is the rigging,own_claim
motion transfer has been addressed in prior work,background_claim
Gleicher 2001,data
Our algorithm consists of two main steps,own_claim
skeleton embedding,own_claim
skin attachment,own_claim
"our method can use a generic biped skeleton to rig an anatomically correct human model, an anthropomorphic robot, and even something that has very little resemblance to a human",own_claim
A key design challenge is constructing a penalty function that penalizes undesirable embeddings and generalizes well to new characters,own_claim
we designed a maximum-margin supervised learning method to combine a set of hand-constructed penalty functions,own_claim
we tested our algorithm on 16 characters that we did not see or use during development,own_claim
Our algorithm computed a good rig for all but 3 of these characters,own_claim
each of the remaining cases,data
one joint placement hint corrected the problem,own_claim
We simplify the problem by making the following assumptions,own_claim
The character mesh must be the boundary of a connected volume,data
The character must be given in approximately the same orientation and pose as the skeleton,data
the character must be proportioned roughly like the given skeleton,data
We introduce several new techniques to solve the automatic rigging problem,own_claim
"A maximum-margin method for learning the weights of a linear combination of penalty functions based on examples, as an alternative to hand-tuning",own_claim
Section 3.3,data
An A ∗ -like heuristic to accelerate the search for an optimal skeleton embedding over an exponential search space,own_claim
Use of Laplace’s diffusion equation to generate weights for attaching mesh vertices to the skeleton using linear blend skinning,own_claim
This method could also be useful in existing 3D packages,own_claim
Section 3.4,data
Our prototype system,own_claim
rigs the given character using our algorithm,own_claim
It then transfers a motion to the character using online motion retargetting,own_claim
to eliminate footskate by constraining the feet trajectories of the character to the feet trajectories of the given motion,own_claim
Choi and Ko 2000,data
Most prior research in character animation,background_claim
has focused on professional animators,background_claim
very little work is targeted at novice users,background_claim
Recent exceptions include Motion Doodles,background_claim
Thorne et al. 2004,data
as well as the work of,background_claim
on spatial keyframing,background_claim
Igarashi et al,data
2005b,data
2005a,data
as-rigid-as-possible shape manipulation,background_claim
"These approaches focus on simplifying animation control, rather than simplifying the definition of the articulation of the characte",background_claim
their approach relies on very strong assumptions about how the character is presented,background_claim
The Motion Doodles system has the ability to infer the articulation of a 2D character,background_claim
"a spatial keyframing system expects an articulated character as input, and as-rigid-as-possible shape manipulation",background_claim
relies on the constraints to provide articulation information,background_claim
Although most skeleton-based prior work on automatic rigging focused on skeleton extraction,background_claim
we advocate skeleton embedding,own_claim
our problem,data
skeleton embedding is much more suitable than extraction,own_claim
A few approaches to the skeleton extraction problem are representative,background_claim
extract a skeleton by simplifying the Voronoi skeleton with a small amount of user assistance,background_claim
Teichmann and Teller [1998],data
use repulsive force fields to find a skeleton,background_claim
Liu et al. [2003],data
Katz and Tal [2003],data
describe a surface partitioning algorithm and suggest skeleton extraction as an application,background_claim
Wade [2000],data
The technique,background_claim
is most similar to our own,background_claim
they approximate the medial surface by finding discontinuities in the distance field,background_claim
they use it to construct a skeleton tree,background_claim
the purpose of automatically animating a character,data
the user may have motion data for a quadruped skeleton,own_claim
a complicated quadruped character,data
the extracted skeleton is likely to have a different topology,own_claim
The anatomically appropriate skeleton generation,background_claim
ameliorates this problem by techniques such as identifying appendages and fitting appendage templates,background_claim
Wade [2000],data
the overall topology of the resulting skeleton may still vary,background_claim
ears may be mistaken for arms,background_claim
the character in Figure 1,data
Another advantage of embedding over extraction is that the given skeleton provides information about the expected structure of the character,own_claim
may be difficult to obtain from just the geometry,own_claim
we could use an existing skeleton extraction algorithm and embed our skeleton into the extracted one,own_claim
the results would likely be undesirable,own_claim
Figure 1,data
the legs of the character,background_claim
would be too short if a skeleton extraction algorithm were used,background_claim
the model is fairly similar to the template,data
Animating user-provided data by fitting a template has been successful,background_claim
"Most of the work has been focused on human models, making use of human anatomy specifics",background_claim
Moccozet et al. 2004,data
segmenting and animating simple 3D models of characters and inanimate objects,data
fit voxel-based volumetric templates to the data,background_claim
Anderson et al. [2000],data
Almost any system for mesh deformation,background_claim
can be adapted for skeleton-based deformation,background_claim
surface based,background_claim
volume based,background_claim
Lipman et al. 2005,data
Yu et al. 2004,data
Zhou et al. 2005,data
propose a spring-based method,background_claim
Teichmann and Teller [1998],data
these methods are unsuitable for real-time animation of even moderate size meshes,background_claim
linear blend skinning (LBS),background_claim
its quality shortcomings,background_claim
its simplicity,background_claim
remains the most popular method used in practice,background_claim
efficiency,background_claim
simple GPU implementation,background_claim
Most real-time skinning work,background_claim
has focused on improving on LBS by inferring the character articulation from multiple example meshes,background_claim
Kry et al. 2002,data
Wang et al. 2007,data
such techniques are unsuitable for our problem,own_claim
"we must infer articulation by using the given skeleton as an encoding of the likely modes of deformation, not just as an animation control structure",own_claim
we only have a single mesh,data
the problem of finding bone weights for LBS from a single mesh and a skeleton has not been sufficiently addressed in the literature,background_claim
Previous methods are either mesh resolution dependent,background_claim
or the weights do not vary smoothly along the surface,background_claim
Katz and Tal 2003,data
Wade 2000,data
causing artifacts on highresolution meshes,background_claim
Some commercial packages use proprietary methods to assign default weights,background_claim
Autodesk Maya 7 assigns weights based solely on the vertex proximity to the bone,data
results in serious artifacts when the mesh intersects the Voronoi diagram faces between logically distant bones,background_claim
Other problems occur at difficult areas,own_claim
hand-tuned weights could be made superior to those found by our algorithm,own_claim
hips,data
the shoulder/neck region,data
Skeleton embedding resizes and positions the given skeleton to fit inside the character,background_claim
This can be formulated as an optimization problem,own_claim
compute the joint positions such that the resulting skeleton fits inside the character as nicely as possible and looks like the given skeleton as much as possible.,data
a skeleton with s joints,data
this is a 3s-dimensional problem with a complicated objective function,own_claim
Solving such a problem directly using continuous optimization is infeasible,own_claim
Pinocchio,own_claim
discretizes the problem by constructing a graph whose vertices represent potential joint positions and whose edges are potential bone segments,own_claim
the graph must have few vertices and edges,own_claim
capture all potential bone paths within the character,own_claim
This is challenging,own_claim
Pinocchio then finds the optimal embedding of the skeleton into this graph with respect to a discrete penalty function,own_claim
These attributes are specific to the skeleton,own_claim
are independent of the character shape and do not reduce the generality of the skeletons,own_claim
Pinocchio rescales the character to fit inside an axis-aligned unit cube,own_claim
Before any other computation,data
all of the tolerances are relative to the size of the character,own_claim
Pinocchio computes a trilinearly interpolated adaptively sampled signed distance field on an octree,own_claim
Frisken et al. 2000,data
It constructs a kd-tree to evaluate the exact signed distance to the surface from an arbitrary point,own_claim
τ = 0.003 provides a good compromise between accuracy and efficiency for our purposes,own_claim
only negative distances (i.e. from points inside the character) are important,own_claim
Pinocchio does not split cells that are guaranteed not to intersect the character’s interior,own_claim
Pinocchio uses the adaptive distance field to compute a sample of points approximately on the medial surface,own_claim
Figure 2,data
The medial surface is the set of C 1 discontinuities of the distance field,own_claim
the interpolated distance field is guaranteed to be C 1,own_claim
Within a single cell of our octree,data
it is necessary to look at only the cell boundaries,own_claim
Pinocchio,own_claim
"traverses the octree and for each cell, looks at a grid",own_claim
of points on each face of the cell,own_claim
We impose the 120 ◦ condition,own_claim
we do not want the “noisy” parts of the medial surface,data
we want the points where skeleton joints are likely to lie,data
Pinocchio filters out the sampled points that are too close to the character surface,own_claim
discusses a similar condition,background_claim
2000,data
Chapter 4,data
Wade,data
Pinocchio packs spheres into the character,own_claim
it sorts the medial surface points by their distance to the surface,own_claim
a point is outside all previously added spheres,data
adds the sphere centered at that point whose radius is the distance to the surface,own_claim
it processes these points in order,own_claim
no sphere contains the center of another sphere,own_claim
Figure 3,data
the largest spheres are added first,own_claim
the procedure described above takes O(nb) time in the worst case,own_claim
worst case behavior is rarely seen,own_claim
most points are processed while there is a small number of large,own_claim
spheres,own_claim
this step typically takes less than 1% of the time of the entire algorithm,own_claim
The final discretization step constructs the edges of the graph by connecting some pairs of sphere centers,own_claim
Figure 4,data
Pinocchio adds an edge between two sphere centers,own_claim
the spheres intersect,data
We would also like to add edges between spheres that do not intersect,own_claim
that edge is well inside the surface,data
that edge is “essential.”,data
the neck and left shoulder spheres of the character,own_claim
are disjoint,own_claim
there should still be an edge between them,own_claim
Figure 3,data
We describe the attributes Pinocchio uses in a supplemental document,own_claim
Baran and Popović 2007a,data
The latter condition is equivalent to the requirement that additional edges must be in the Gabriel graph of the sphere centers,own_claim
Jaromczyk and Toussaint 1992,data
the Gabriel graph provides a good balance between sparsity and connectedness,own_claim
other conditions can be formulated,own_claim
Pinocchio works with a reduced skeleton,own_claim
all bone chains have been merged,own_claim
Figure 5,data
The reduced skeleton,own_claim
has only r joints,own_claim
it can compute the intermediate joints by taking the shortest path between the endpoints and splitting it in accordance with the proportions of the unreduced skeleton,own_claim
This works,own_claim
Pinocchio knows where the endpoints of a bone chain are in V,data
"without a reduced skeleton, the optimization problem would typically be intractable",own_claim
the humanoid skeleton we use,data
"the discrete skeleton embedding problem is to find the embedding of the reduced skeleton into G, represented by an rtuple v = (v 1 , . . . , v r ) of vertices in V , which minimizes a penalty function f (v) that is designed to penalize differences in the embedded skeleton from the given skeleton",own_claim
The discrete penalty function has great impact on the generality and quality of the results,own_claim
"A good embedding should have the proportions, bone orientations, and size similar to the given skeleton",own_claim
The paths representing the bone chains should be disjoint,own_claim
possible,data
they should be close to the bottom of the character,own_claim
"Joints of the skeleton may be marked as “feet,”",data
Designing a penalty function that satisfies all of these requirements simultaneously is difficult,own_claim
we found it easier to design penalties independently and then rely on learning a proper weighting for a global penalty that combines each term,own_claim
"They penalize short bones, improper orientation between joints, length differences in bones marked symmetric, bone chains sharing vertices, feet away from the bottom, zero-length bone chains, improper orientation of bones, degree-one joints not embedded at extreme vertices, and joints far along bone-chains but close in the graph",own_claim
Baran and Popović 2007a,data
a much more complete tutorial,background_claim
Burges [1998],data
we could use a support vector machine to learn a maximum margin linear classifier,own_claim
our goal were to automatically classify new embeddings into “good” and “bad” ones,data
we can think of the maximum margin Γ as the one that best distinguishes between the best “bad” embedding and the worst “good” embedding in the training set,own_claim
the total penalty of an embedding v is Γ T b(v),data
we do not need to classify embeddings,own_claim
rather find a Γ such that the embedding with the lowest penalty f (v) = Γ T b(v) is likely to be good,own_claim
our case,data
we want Γ to distinguish between the best “bad” embedding and the best “good” embedding,own_claim
Figure 6,data
We,own_claim
wish to maximize the optimization margin,own_claim
we have different characters in our training set,data
the embedding quality is not necessarily comparable between different characters,own_claim
we find the Γ that maximizes the minimum margin over all of the characters,own_claim
Our approach is similar to margin-based linear structured classification,own_claim
Taskar et al. 2003,data
The key difference is that structured classification requires an explicit loss function,own_claim
our approach only makes use of the loss function on the training labels and allows for the possibility of multiple correct labels,own_claim
multiple correct skeleton embeddings are necessary for our problem,own_claim
the hand joint being embedded into different fingers,data
This possibility of multiple correct skeleton embeddings prevented us from formulating our margin maximization problem as a convex optimization problem,own_claim
The problem of finding the optimal Γ does not appear to be convex,own_claim
an approximately optimal Γ is acceptable,own_claim
the search space dimension is sufficiently low,own_claim
9,data
it is feasible to use a continuous optimization method,own_claim
It is also possible that a positive margin Γ cannot be found,own_claim
the chosen basis functions are probably inadequate for finding good embeddings for all characters in the training set,own_claim
The weights we learned resulted in good embeddings for all of the characters in our training set,own_claim
we could not accomplish this by manually tuning the weights,own_claim
Examining the optimization results and the extremal embeddings also helped us design better basis penalty functions,own_claim
this process of finding the weights is labor-intensive,own_claim
it only needs to be done once,own_claim
the overall penalty function generalizes well to both new characters and new skeletons,own_claim
the basis functions are carefully chosen,data
our tests,data
a novice user will be able to use the system,own_claim
more advanced users will be able to design new skeletons without having to learn new weights,own_claim
Computing a discrete embedding that minimizes a general penalty function is intractable,own_claim
there are exponentially many embeddings,data
it is possible to use a branch-and-bound method,own_claim
it is easy to estimate a good lower bound on f from a partial embedding,data
Pinocchio uses this idea,own_claim
it maintains a priority queue of partial embeddings ordered by their lower bound estimates,own_claim
The first full embedding extracted is guaranteed to be the optimal one,own_claim
This is essentially the A* algorithm on the tree of possible embeddings,own_claim
it is rejected immediately and not inserted into the queue,own_claim
a partial embedding has a very high lower bound,data
this algorithm is still worst-case exponential,own_claim
it is fast on most real problems with the skeletons we tested,own_claim
an approximate graph matching algorithm,own_claim
which would work much faster and enable more complicated reduced skeletons,own_claim
Gold and Rangarajan 1996,data
computing the exact optimum simplified penalty function design and debugging,own_claim
p R (i) (for 1 &lt; i ≤ r) is the index of the parent of joint i,own_claim
we define the parent function p R on the reduced skeleton,data
"f can be written as: r r f (v 1 , . . . , v r ) = X f i (v i , v p R (i) ) + X f D (v 1 , . . . , v i )",own_claim
"A lower bound when the first k joints are embedded is then: k k X f i (v i , v p R (i) ) + X f D (v 1 , . . . , v i ) + i=2 i=2 + X min f i (v i , v p R (i) ) v i ∈V {i&gt;k|p R (i)≤k}",own_claim
the lower bound is close to the true value of f,own_claim
If f D is small compared to the f i ’s,data
the order in which joints are embedded is very important to the performance of the optimization algorithm,own_claim
this lower bound estimate,data
High degree joints should be embedded first,own_claim
they result in more terms in the rightmost sum of the lower bound,own_claim
leading to a more accurate lower bound,own_claim
our biped skeleton has only two joints of degree greater than two,data
after Pinocchio has embedded them,data
the lower bound estimate includes f i terms for all of the bone chains,own_claim
there is no perfect penalty function,own_claim
discrete embedding will occasionally produce undesirable results,own_claim
Model 13 in Figure 9,data
it is possible for the user to provide manual hints in the form of constraints for reduced skeleton joints,own_claim
such a hint might be that the left hand of the skeleton should be embedded at a particular vertex in G,data
Embeddings that do not satisfy the constraints are simply not considered by the algorithm,own_claim
The resulting skeleton embedding should have the general shape we are looking for,own_claim
it will not fit nicely inside the character,own_claim
smaller bones are likely to be incorrectly oriented,own_claim
they were not important enough to influence the discrete optimization,own_claim
Embedding refinement corrects these problems by minimizing a new continuous penalty function,own_claim
Figure 7,data
we are dealing with an unreduced skeleton,data
discrete optimization has already found the correct general shape,data
the penalty function can be much simpler than the discrete penalty function,own_claim
we choose the α’s by hand,own_claim
there are only four of them,own_claim
Baran and Popović 2007a,data
Any continuous optimization technique,own_claim
should produce good results,own_claim
Gill et al. 1989,data
Repeating the process 10 times is usually sufficient for convergence,own_claim
we could make use of one of the various mesh editing techniques for the actual mesh deformation,own_claim
we choose to focus on the standard linear blend skinning (LBS) method,own_claim
its widespread use,background_claim
LBS gives the position of the transformed vertex j as P i w j i T i (v j ),own_claim
v j is the position of vertex j,data
T i is the transformation of the i th bone,data
w j i is the weight of the i th bone for vertex j,data
The attachment problem is finding bone weights w i for the vertices,own_claim
they should not depend on the mesh resolution,own_claim
There are several properties we desire of the weights,own_claim
the weights need to vary smoothly along the surface,own_claim
the width of a transition between two bones meeting at a joint should be roughly proportional to the distance from the joint to the surface,own_claim
to avoid folding artifacts,data
for the results to look good,data
a scheme that assigns bone weights purely based on proximity to bones can be made to satisfy these properties,own_claim
such schemes will often fail because they ignore the character’s geometry,own_claim
part of the torso may become attached to an arm,own_claim
we use the analogy to heat equilibrium to find the weights,own_claim
we can take the equilibrium temperature at each vertex on the surface as the weight of bone i at that vertex,own_claim
we treat the character volume as an insulated heat-conducting body,data
force the temperature of bone i to be 1 while keeping the temperature of all of the other bones at 0,data
Figure 8,data
Solving for heat equilibrium over a volume would require tessellating the volume and would be slow,own_claim
Pinocchio solves for equilibrium over the surface only,own_claim
it adds the heat transferred from the nearest bone,own_claim
at some vertices,data
The equilibrium over the surface for bone i is given by ∂w = ∂t ∆w i + H(p i − w i ) = 0,own_claim
can be written as,own_claim
−∆w i + Hw i = Hp i,own_claim
"∆ is the discrete surface Laplacian, calculated with the cotangent formula",own_claim
Meyer et al. 2003,data
p i is a vector with p i j = 1,own_claim
the nearest bone to vertex j is i,data
p i j = 0,own_claim
otherwise,data
∆ has units of length −2,data
so must H,own_claim
Pinocchio uses H jj = c/d(j) 2,own_claim
the shortest line segment from the vertex to the bone is contained in the character volume,data
H jj = 0,own_claim
it is not,data
this method gives weights with similar transitions to those computed by finding the equilibrium over the volume,own_claim
c ≈ 0.22,data
the results look more natural,own_claim
Pinocchio uses c = 1,own_claim
heat contributions from all of them are used,own_claim
p j is 1/k for all of them,own_claim
H jj = kc/d(j) 2,own_claim
k bones are equidistant from vertex j,data
we can factor the system once and back-substitute to find the weights for each bone,own_claim
is a sparse linear system,own_claim
the left hand side matrix −∆ + H does not depend on i,own_claim
Equation (1),data
show how to use a sparse Cholesky solver to compute the factorization for this kind of system,background_claim
Botsch et al. [2005],data
Pinocchio uses the TAUCS,own_claim
library for this computation,own_claim
Toledo 2003,data
the weights w i sum to 1 for each vertex,own_claim
we get (−∆ + H) P i w i = H · 1,own_claim
yields P i w i = 1,own_claim
we sum (1) over i,data
It is possible to speed up this method slightly by finding vertices that are unambiguously attached to a single bone and forcing their weight to 1,own_claim
An earlier variant of our algorithm did this,own_claim
the improvement was negligible,own_claim
this introduced occasional artifacts,own_claim
The skeleton was correctly embedded into 13 of these models,own_claim
Figure 9,data
a hint for a single joint was sufficient to produce a good embedding,own_claim
"Models 7, 10 and 13",data
These tests demonstrate the range of proportions that our method can tolerate,own_claim
we have a well-proportioned human,own_claim
"Models 1–4, 8",data
large arms and tiny legs,own_claim
large legs and small arms,own_claim
the small arms cause problems,own_claim
13,data
15,data
6,data
this causes problems,own_claim
10,data
skeletons were almost always correctly embedded into well-proportioned characters whose pose matched the given skeleton,own_claim
other characters we tested,data
"Pinocchio was even able to transfer a biped walk onto a human hand, a cat on its hind legs, and a donut",own_claim
The thinnest limb into which we may hope to embed a bone has a radius of 2τ,own_claim
Characters with extremely thin limbs often fail,own_claim
the graph we extract is disconnected,own_claim
Reducing τ,own_claim
hurts performance,own_claim
Degree 2 joints,own_claim
are often positioned incorrectly within a limb,own_claim
knees,data
elbows,data
most of our tests were done with the biped skeleton,own_claim
we have also used other skeletons for other characters,own_claim
Figure 10,data
Our video,own_claim
demonstrates the quality of the animation produced by Pinocchio,own_claim
Baran and Popović 2007b,data
The quality problems of our attachment are a combination of the deficiencies of our automated weights generation as well as those inherent in LBS,own_claim
A common class of problems is caused by Pinocchio being oblivious to the material out of which the character is made,own_claim
"the animation of both a dress and a knight’s armor has an unrealistic, rubbery quality",own_claim
only one core was used,own_claim
Pinocchio is single-threaded,own_claim
someone wishing to create real-time animation is likely to keep the triangle count low,background_claim
We did not run timing tests on denser models,own_claim
subsequent discretization and embedding steps do not depend on the given mesh size,own_claim
the distance field has been computed,data
volume-based approach,data
the running time is dominated by the discretization stage,own_claim
that is dominated by computing the distance field,own_claim
majority of models,data
Embedding refinement takes about 1.2 seconds for all of these models,own_claim
the discrete optimization consumes the rest of the embedding time,own_claim
We have presented the first method for automatically rigging an unfamiliar character for skeletal animation,own_claim
it allows a user to go from a static mesh to an animated character quickly and effortlessly,own_claim
"using this method, Pinocchio can animate a wide range of characters",own_claim
some of our techniques,own_claim
can be useful in other contexts,own_claim
finding LBS weights,data
using examples to learn the weights of a linear combination of penalty functions,data
We have several ideas for improving Pinocchio that we have not yet tried,own_claim
Discretization could be improved by packing ellipsoids instead of spheres,own_claim
this is more difficult,own_claim
it would greatly reduce the size of the graph,own_claim
resulting in faster and higher quality discrete embeddings,own_claim
Animation quality can be improved with a better skinning model,own_claim
Kavan and Zára ˇ 2005,data
possibly at the cost of performance,own_claim
One approach would be to use a technique,own_claim
Wang et al. 2007,data
"that corrects LBS errors by using example meshes, which we could synthesize using slower, but more accurate deformation techniques",own_claim
A more involved approach would be automatically building a tetrahedral mesh around the embedded skeleton and applying the dynamic deformation method,own_claim
Capell et al. [2002],data
Combining retargetting with joint limits should eliminate some artifacts in the motion,own_claim
A better retargetting scheme could be used to make animations more physically plausible and prevent global self-intersections,own_claim
it would be nice to eliminate the assumption that the character must have a well-defined interior,own_claim
"an interesting problem is dealing with hand animation to give animated characters the ability to grasp objects, type, or speak sign language",own_claim
The variety of types of hands makes this challenging,own_claim
Models 13,data
5,data
14,data
11 in Figure 9,data
Automatically rigging characters for facial animation is even more difficult,own_claim
a solution requiring a small amount of user assistance may succeed,own_claim
this would allow users to begin interacting with their creations,own_claim
Combined with a system for motion synthesis,own_claim
Arikan et al. 2003,data
Skin deformation resulting from the movement of characters,background_claim
is one of the most interesting and challenging topics in computer animation,background_claim
humans,data
animals,data
their structural complexity,data
The modelling and deformation of such characters are inevitably complicated and timeconsuming,background_claim
realism is important,background_claim
other factors,background_claim
are also of great importance in animation production,background_claim
intuitiveness,data
ease of interaction,data
computational cost,data
mesh may take various forms,background_claim
The high-resolution,background_claim
Nurbs,data
subdivision surfaces,data
polygon meshes,data
t is inefficient to animate directly on this layer,background_claim
the mesh is very dense involving fine detail,background_claim
works as an efficient intermediate layer for the modelling and deformation of the fine skin layer,background_claim
The low-resolution,background_claim
mesh,background_claim
Our technique adopts this two-layered strategy,own_claim
The animator creates almost all skin deformation effects on the low-res layer,background_claim
The detailed skin shapes,background_claim
are created on this layer,background_claim
skin deformations,data
wrinkle,data
squama,data
feather,data
These properties allow the behaviours of skin and anatomic tissues,own_claim
to be mimicked intuitively in computer animation and to be computed rapidly,own_claim
muscle groups,data
there is a similarity between a bar-net and a mass–spring model,own_claim
they have substantially different behaviours,own_claim
A mass–spring model will not be able to satisfy the properties we define here,own_claim
Most of the techniques on character deformation can be roughly categorized into two groups,background_claim
Anatomy based multi-layered models have significantly improved the realism of the modelling of complex living creatures,background_claim
Character animation based on the deformation of underlying anatomical structures,background_claim
is a very complicated process,background_claim
muscles,data
fat,data
all need to be properly addressed,background_claim
Issues,background_claim
mechanical forces,data
material properties,data
collision among anatomic structures,data
The computational cost is inevitably excessive,background_claim
Such computational costs place severe restrictions on many applications,background_claim
"Our bar-net driven skinning method endeavours to take advantage of the anatomy-based approach, the smooth skinning approach and the physically based approach",own_claim
Figure 1,data
It follows the current animation workflow,own_claim
a bar-net is coupled with the low-res skin layer,own_claim
Bar-nets deform according to both the external forces it is subject to and the stiffness properties of the network,own_claim
"By controlling these two factors, the animator can easily create the various skin deformation effects",own_claim
muscle bulge,data
The skeleton layer controls the movement of the character and determines the basic shape of its body,own_claim
The control mesh is bound to the character skeleton in the same way as the traditional smooth skinning method,own_claim
The bar-nets work like a deformer,own_claim
to change the shape of the skin surface,own_claim
It is compatible with all the other deformation tools incorporated in current animation software,own_claim
"A bar-net connects n s points, P i , in three-dimensional space with straight-line segments",own_claim
The nodes can be either fixed or free,own_claim
Fixed nodes will not have their positions changed regardless of whether they are subjected to external forces,own_claim
Free nodes can be moved to balance the acting forces on the net,own_claim
they cannot be ben,own_claim
These bars can be stretched and squashed resulting from the positioning of the end nodes,own_claim
a graph with links connecting pairs of nodes,own_claim
The network described above is,own_claim
"can be formed, which represents in a tabular form the graph of the network",own_claim
A matrix C s,own_claim
there are n free nodes and n f fixed nodes,data
the branch–node matrix can be further subdivided into two sub-matrices,own_claim
by grouping the free-node columns and fixed-node columns of the original matrix,own_claim
A deformable part of the low-res mesh of a character can be considered as a bar-net,own_claim
This analogy establishes a natural link between a mechanical bar-net and a surface patch,own_claim
Often a compromise among these factors has to be reached,background_claim
There are two general categories of methods in animation practice,background_claim
simulation,background_claim
authoring,background_claim
1–3,data
Simulation,background_claim
refers to the use of a mathematical model to automatically recreate the physical reality on computers,background_claim
A simulation method lets the animator easily create certain effect which could be otherwise almost an impossible mission with manual manipulations,background_claim
the disadvantage is also obvious,background_claim
the simulation techniques provide some parameters for the animator to control the animation,background_claim
the connection between these parameters and the result is often implicit,background_claim
It is usually difficult for an artist to understand the exact physical meaning of these parameters and connect them to the final outcome,background_claim
such methods are often computationally expensive,background_claim
The authoring methods refer to those that the animator can use to manipulate the modelling or deformation directly,background_claim
The animator is able to see the result immediately,background_claim
has a full control over the deformed shape of the character in question,background_claim
Both types of methods were around for a long time,background_claim
animators turn to favour those tools that they feel they have a control and can evaluate the results directly,background_claim
A key advantage is that it combines the strengths of both prevalent categories discussed above,own_claim
This technique is based on a physically inspired deformation model from structural engineering,own_claim
can,own_claim
deform realistically based on the physical properties leading to physically plausible outcomes,own_claim
the animator is able to operate it as a physically based authoring tool in the same way as other conventional deformation tools,own_claim
In animation practice,background_claim
it is quite often for each character model to have two layers of mesh,background_claim
the film industry,data
games design,data
a rough mesh,data
a fine mesh,data
authoring,background_claim
simulation methods,background_claim
the boundary between them does not always seem clear,background_claim
The technique of Free Form Deformations,background_claim
remains popular and has been adopted by many animation software packages,background_claim
its simplicity,data
modelling speed,data
FFDs were later extended by several other researchers,background_claim
4,data
we present a new skinning technique for the deformation of computer-animated characters,own_claim
5–8,data
All these techniques are purely geometric in nature,background_claim
make no attempt to simulate the physical properties or behaviours of a character,background_claim
"Based on the FFDs, two very popular deformation tools were developed in Maya",background_claim
the Lattice,data
Wrap deformers,data
An intuitive attempt to deform a character was involving a skeleton into skin deformation,background_claim
This approach has a long history,background_claim
it treats the skin as a shell that moves by an explicit function of the skeleton,background_claim
Vertices of the skin are deformed by a weighted combination of the joint transformations of the character’s skeleton,background_claim
9–13,data
They are easy to understand and intuitive to use,background_claim
A tedious part is the proper assignment of the weights,background_claim
"In production, the weights are painted by the animator",background_claim
the animator has full control over the outcomes,background_claim
The smooth skinning approach suffers from some notorious drawbacks,background_claim
the candy wrapper effect,data
collapsing elbow effect,data
its lack of consideration of volume preservation for the soft tissues,data
The example-based methods were developed as an alternative in order to overcome this kind of problems,background_claim
have had some success,background_claim
14–17,data
the animator can control the exact appearance of the character,background_claim
With this method,background_claim
In facial animation,background_claim
the animator often needs to dictate how a facial model deforms to achieve different expressions,background_claim
a large number of models have to be made in the pose space and stored for shape interpolation,background_claim
This is an expensive process,background_claim
The drive for realism in computer graphics has lead to some new modelling and deformation techniques,background_claim
A group of techniques that have gained increasing popularity in the computer animation of characters are those based on characters anatomy,background_claim
These models attempt to mimic their real life counterparts by reproducing their anatomical structures,background_claim
These anatomy-based skinning methods differ on the complexity of the models and their behaviours of the underlying anatomical structures,background_claim
Some use simple muscle shapes,background_claim
abstract muscle operators,data
18,data
meatballs,data
19,data
some employ detailed models,background_claim
20–23,data
The obvious advantage of this group of methods is its ability in achieving detailed visual quality during animation,background_claim
One of the difficulties of these techniques,background_claim
is that they are indirect to use,background_claim
24–28,data
one has to model the anatomical structures before its appearance arrives,data
"Achieving a particular look of the skin requires the determination of the shape, number and the layout of the muscles underneath",background_claim
"Until the skin mesh envelops the underlying structure, it is very hard to anticipate how the character looks like from the outside",background_claim
recent research has looked into the issue of estimating the muscles from the skin shape,background_claim
29–30,data
This new technique has had a degree of success,background_claim
The current limitations are that they could only use simple muscle shapes,background_claim
which are sufficient in obtaining detailed deformations,background_claim
a bar-net is coupled with a surface,data
the surface can be made to behave like a piece of elastic material,own_claim
many numerical methods developed in structural and mechanical engineering for the manipulation of structures and networks can be applied to control the deformation of the surfaces,own_claim
Deforming the bar-net deforms the coupled surface,own_claim
Bar-nets can have any arbitrary topology,own_claim
unlike most curved surface patches,background_claim
They are not restricted to a quadrilateral topology,own_claim
Quadrilateral patches are the easiest to control,background_claim
there have been many algorithms developed to implement them,background_claim
methods for controlling the deformation of a non-quadrilateral surface patch analytically remain an interesting research topic,background_claim
Such a problem could be resolved by coupling a general mechanical bar-net with the control points of a surface patch of the same topology,background_claim
"The principle idea of the proposed bar-net driven deformation technique is to regard the deformable area of an animated creature as a network, which deforms under an acting force",own_claim
One does not need to worry about the shape of the network itself,own_claim
we use a bar-net only as a control mechanism,data
Changing the stiffness with other parameters unchanged has an influence on the whole network,own_claim
This is in line with the physical property of human tissues,own_claim
makes physical sense,own_claim
"the animator wishes to finetune the effects on the x, y or z direction separately",data
the surface will deform as expected,own_claim
The deformation of the free nodes satisfies the superposition principle,own_claim
one free node is subject to the influence of a number of forces simultaneously,data
the general deformation applied to the node is the same as the sum of all the deformations generated by applying these loads independently,own_claim
"The benefit from this property is that several muscles, bones, fat tissues can affect the skin deformation simultaneously through summing up of their individual forces",own_claim
Network form finding is always a numerically complicated problem in mechanical and structural engineering,background_claim
Various numerical methods exist,background_claim
most mechanical networks are concerned,data
the relationship between the equilibrium state and the acting forces is non-linear,background_claim
Shape change cannot be trivially related to the magnitude and direction of the external forces,background_claim
Often numerical algorithms are deployed to determine the rest form of a network,background_claim
is inevitably time-consuming,background_claim
not very useful for animation production,background_claim
the effect of stiffness of a network can be approximated by the quantity of force-length ratios of all the bars,own_claim
In our case,data
31,data
satisfies the above-defined properties,own_claim
"Using this stiffness parameter, we found the force density method",own_claim
form finding problem with a set of linear equations,own_claim
An added advantage is that it is also able to solve the,own_claim
such bar-nets can be used to assist the deformation of skin surfaces of deformable characters,own_claim
the prevailing advantages of this technique are its speed of computation and intuitiveness in shape control,own_claim
Coupling bar-nets with a skin surface makes it ‘mechanically deformable,own_claim
"Using above defined bar-net properties, deformations are achieved by applying virtual forces to the appropriate free nodes of the control mesh",own_claim
The gradually changed forces on the control mesh are bound to the elbow rotation angle,data
which produce both the bulge effect and compensate for the volume loss that the traditional smooth skinning method suffers,own_claim
using a bar-net to solve the collapsing elbow problem and obtain a fat bulge effect when the forearm bends towards the upper arm,own_claim
Figure 2,data
Deformed muscles always change the shape of the skin surface,background_claim
The deformation of the forearm is complex but relatively unnoticeable,own_claim
only the deformations caused by biceps brachii and triceps brachii are generated,own_claim
These loads deform the surface to form a natural muscle bulge,own_claim
Figure 3(c),data
the animator can easily shape the characters using the virtual forces as user-handles,own_claim
it involves little computation cost,own_claim
there are 12 free nodes which are the only necessary resources involved in the form finding,own_claim
in the bar-net,data
Local deformations can be similarly achieved by changing the force densities,own_claim
reducing the force density of the network increases the size of the bulge effect,own_claim
Figure 3(d),data
The human shoulder is a typical area where notorious skin deformities occur using a traditional skinning method,background_claim
Most computer-animated characters are complex both geometrically and topologically,background_claim
The use of quadrilateral meshes to model the geometry of such characters is frequently inadequate,background_claim
the network is capable of handling any connectivity,own_claim
The fine skin surface can be represented in various surface forms,own_claim
Our implementation includes three major surface modelling forms,own_claim
Nurbs,data
subdivision surfaces,data
polygons,data
the control mesh is deformed,data
it can deform the fine surface model using the Wrap deformer available in many animation packages,own_claim
Bar-net driven skinning is applicable also to the modelling of wrinkle,own_claim
Figure 6,data
Character deformation in computer animation has attracted a great deal of research effort over the last two decades,background_claim
had difficulties in creating realistic character deformations,background_claim
The earlier models,background_claim
more physically based and CPU intensive computation models have emerged,background_claim
the multi-layered anatomy-based approach,data
it is undesirable to require the animator to model many muscles before the skin shape is developed,background_claim
we propose a physically motivated deformation authoring technique,own_claim
"Its main strength lies in the combination of speed, intuitiveness and good realism",own_claim
Our technique can achieve similar results to those of the anatomy-based techniques,own_claim
in an interactive manner,own_claim
"we have devised a set of properties that an ‘ideal’ bar-net should satisfy, which make intuitive shape control and fast computation possible",own_claim
can take advantage of the physical behaviour inherent to the network,own_claim
Coupling a part of surface mesh with bar-nets allows the surface deformation to be controlled by manipulating the networks,own_claim
achieves realistic deformation outcomes,own_claim
This makes the skin mechanically deformable,own_claim
They can be used individually as an interactive modelling tool or collectively to mimic the muscle forces from a muscle group,own_claim
It provides the animator with a new deformer which can be used both as a modelling and an animation tool,own_claim
the tools developed so far are still relatively primitive,own_claim
The user needs to understand the basic principles of the bar-net properties before the technique can be used efficiently,own_claim
we are currently designing higher-level tools with an interactive user interface,own_claim
It is possible to accomplish this by having an artist sculpt an entire character mesh by hand for every frame of an animation sequence,background_claim
this is impractical,background_claim
animators typi- cally manipulate an underlying hierarchical skeleton,background_claim
The character mesh geometry must then be attached to the underlying skeleton,background_claim
There are two fundamental aspects of skin creation,background_claim
authoring,background_claim
computation,background_claim
the authoring methods drive skin creation,background_claim
high-end applications,data
interactive systems,data
computation methods dominate,background_claim
high-end applications such as film,data
the visual fidelity of characters is paramount,background_claim
artists require flexibility and control in skin authoring,background_claim
there are many different ways to create characters using commercial tools,background_claim
One technique involves modeling skin substructure,background_claim
muscles,data
tendons,data
to drive the skin geometry,background_claim
Wilhelms and Gelder 1997,data
Scheepers et al. 1997,data
Many deformers which drive skins by linking their control points to the skeletal parameters with custom expressions or scripts are also available,background_claim
Some examples include FFD lattices,background_claim
Sederberg and Parry 1986,data
Wires,background_claim
Singh and Fiume 1998,data
High-end characters often use a combination of these techniques,background_claim
different tools are appropriate for different parts of the character,background_claim
"high-end tools allow authors to continually develop new skin computation models through custom scripts, expressions and complex deformers",background_claim
interactive systems require fast computation and small memory size for characters,background_claim
This generality and control means that the computation aspect of high-end characters is highly customizable,background_claim
tightly coupled to authoring,background_claim
potentially unbounded,background_claim
the character computation model is fixed,background_claim
artists must restrict their tool set to author characters in direct support of it,background_claim
The most common skin computation model in games and interactive systems goes by many names,background_claim
SSD,data
enveloping,data
smooth skinning,data
linear blend skinning,data
This technique assigns a set of influencing joints and blending weights to each vertex in the character,background_claim
The skin is computed by transforming each vertex by a weighted combination of the joints’ local coordinate frames,background_claim
this method is notorious not only for its authoring difficulty,background_claim
fast to evaluate and compact in memory,background_claim
also for its undesirable deformation artifacts,background_claim
this method is widely used,background_claim
these characters can be used with arbitrary amounts of animation data,background_claim
can be posed at runtime,background_claim
Mesh animation works by storing a large number of deformed models as static meshes,background_claim
A different character computation mechanism previously used in interactive systems is called mesh animation,background_claim
These static models are then either displayed directly or are linearly interpolated at runtime,background_claim
Mesh animation is interesting,background_claim
it decouples skin authoring from runtime skin computation,background_claim
allowing artists to use any tools they want to author characters,background_claim
the required animation sequences are short,data
are known a priori,data
mesh animation is only appropriate,background_claim
games and interactive applications use larger amounts of animation,background_claim
storing every frame becomes prohibitive,background_claim
This technique is also incapable of generating new poses at runtime,background_claim
to place the character’s hand exactly on a door knob,data
to make footfalls land precisely on stairs,data
mesh animation is losing popularity,background_claim
we present an automated method to build character skins that are fast to compute and compactly represented from a set of examples,own_claim
This technique allows artists to use any skin authoring tools they like while producing characters that meet the performance demands and work with the computation models used in interactive systems,own_claim
We present a framework for extending linear blend skinning that allows us to capture these detailed skin deformations,own_claim
This step does not require a trained animator,own_claim
these poses are only intended to exercise the degrees of freedom of the character and need not correspond to a realistic motion,own_claim
This sampling can be very simple to obtain from the user’s perspective,own_claim
users must simply invoke a script we have implemented in Maya,own_claim
in our case,data
These new joints are designed in such a way to capture richer deformations than the standard linear blend skinning model,own_claim
Our system is configured to add these extra joints automatically to characters,own_claim
we allow users to fine tune the specific set of extra joints,own_claim
Character skin deformations are fundamental to character animation and have been addressed for some time in the literature,background_claim
Catmull [1972],data
introduced one of the first skeleton-driven techniques,background_claim
A 2D skeletal bilinear deformation method was presented,background_claim
Burtnyk and Wein [1976],data
An early 3D skeleton-driven technique that went beyond rigid skinning was presented,background_claim
"MagnenatThalmann, et al. [1988]",data
Their technique used custom programmed algorithms to deform character meshes based on the nature of particular joints,background_claim
novel skinning methods that start with a simple skin and use sparse data interpolation to correct errors between it and a set of examples have been introduced,background_claim
use radial basis interpolation of corrections to linear blend skins,background_claim
Lewis et al. 2000,data
Sloan et al. 2001,data
Kry et al. 2002,data
"Pose Space Deformation, Shape by Example, and EigenSkin",background_claim
Another recent work applies these techniques to range scan data,background_claim
Allen et al. 2002,data
These techniques are similar to ours,own_claim
they take examples as input,background_claim
The results of these approaches are quite good,background_claim
they can handle skin deformations that depend on abstract parameters rather than only skeleton configurations,background_claim
these methods are not appropriate for interactive characters,background_claim
they require storing potentially large amounts of example data for runtime interpolation,background_claim
our method discards all example data after the fitting process,own_claim
the size of our runtime structures does not scale with the number of inputs,own_claim
Other authors have used physical simulation for interactive deformations,background_claim
James and Pai 2002,data
Capell et al. 2002,data
Our method cannot capture these secondary deformations directly,own_claim
a technique such as DyRT,own_claim
James and Pai 2002,data
can be applied to the characters we generate to add secondary animation,own_claim
There has been some recent work on fitting skinning models,background_claim
One method solves for joint centers and vertex weights for a scanned arm,background_claim
Nebel and Sibiryakov 2002,data
the Multi-Weight Enveloping technique,own_claim
is most similar to our approach,own_claim
Wang and Phillips 2002,data
MWE extends linear blend skinning by giving each vertex one weight to each coefficient of each influencing joint’s transformation matrix instead of one weight per influencing joint,background_claim
They then find these weights by solving a linear leastsquares problem using a set of examples as input,background_claim
on the surface Multi-Weight Enveloping and our technique seem very similar,own_claim
they are,own_claim
different in a fundamental way,own_claim
Both MWE and our technique use an extension of linear blend skinning as an underlying deformation model,own_claim
MWE extends linear blend skinning by adding more vertex weights to the model,background_claim
our method adds more joints,own_claim
MWE uses a large number of weights per vertex,background_claim
12 per influencing joint,data
This introduces the possibility of rank deficient matrices in the least-squares solutions,background_claim
Wang and Phillips 2002,data
the matrix coefficients are usually highly correlated,background_claim
This can lead to overfitting,background_claim
MWE must take measures to avoid,background_claim
the number of weights per vertex in one of our skins remains relatively small,own_claim
1 per influencing joint,data
our extra joints are explicitly designed to be very different from existing joints,own_claim
our technique requires no special provisions to avoid overfitting,own_claim
our method can detect and handle small amounts of overfitting,own_claim
Section 5.2,data
MWE skins are not as easily accelerated by graphics hardware as skins created using our method,own_claim
having one weight per entry in the joint transformation matrices,data
our skins are computed in the same manner as linear blend skins,own_claim
existing software infrastructure can make use of them with little or no changes,own_claim
This technique is widely used for interactive applications,background_claim
An excellent description of this method is found,background_claim
Lewis et al. [2000],data
a deformed vertex position in the dress pose configuration c = d is the same as the provided dress pose vertex ( v d = v d ),background_claim
the weights are affine,data
This skinning algorithm is notorious for its failings,background_claim
It cannot represent complex deformations,background_claim
suffers from characteristic artifacts,background_claim
the “candy-wrapper” collapse effect on wrists,data
collapsing around bending joints,data
Figure 2,data
The artifacts occur,background_claim
vertices are transformed by linearly interpolated matrices,background_claim
the interpolated matrices are dissimilar as in a rotation of nearly 180 degrees,data
the interpolated transformation is degenerate,background_claim
the geometry must collapse,background_claim
linear blend skins are very difficult to author,background_claim
[Lewis et al. 2000],data
this skinning algorithm is very fast,background_claim
widely supported by commercial applications,background_claim
it remains popular especially in games and virtual environments,background_claim
The linear blend skinning model is not sufficient to capture deformations well,background_claim
Figure 3,data
the linearly blended matrix becomes degenerate and collapses the skin geometry,background_claim
the twist approaches 180 degrees,data
The problem,background_claim
is that,background_claim
Linearly blended transformations tend to collapse the more different they are,background_claim
The resulting loss of volume can also be observed around hinge joints,background_claim
the knee,data
elbow,data
Figure 2,data
we can help avoid the collapse problem by avoiding blending transformations that are so dissimilar,own_claim
We can accomplish this by adding extra transformations that properly interpolates without collapsing,own_claim
we can add an extra joint that interpolates the rotation angle correctly and does not collapse,own_claim
the twisting wrists,data
artists sometimes do this by hand to help avoid wrist collapses,background_claim
any deformation effect could be obtained by adding joints that deform appropriately to capture that deformation effect,own_claim
"we can add joints that scale up when the muscle should bulge, and scale down when the muscle relaxes",own_claim
we could add several joints that move and scale in concert to capture the wrinkles,own_claim
we could add as many transformations as vertices and capture all deformations exactly,own_claim
adding so many extra joints is impractical,own_claim
adding such a large number of joints would severely impact the performance of our resulting skins,own_claim
we could find these transformations for the input examples,data
it is unclear how to determine the general relationships of these transformations to the skeletal parameters in all poses,own_claim
our scheme would only be able to reproduce the input frames and would not work well in new poses,own_claim
Without knowledge of this relationship,data
we extend the traditional linear blend skinning model by adding a relatively small number of joints that are simply related to the original skeletal parameters and fit using them,own_claim
We choose these extra joints by both examining the places where the standard linear blend model fails and by examining extra character deformations that we would like to capture,own_claim
We then add joints that we believe will help resolve these artifacts,own_claim
vertices choose weighted sums of transformations,own_claim
any linear scaling of an added joint is beneficial,data
it may be used,own_claim
Thus the additional joints need not be exact,own_claim
we fit the parameters of our skinning model using this extended skeleton,own_claim
this is a framework for obtaining better deformations,own_claim
the joints we choose to add are based on our observations of characters,own_claim
Different characters with different deformations may require a different set of additional joints,own_claim
the skin may be solved using our fitting algorithm without change,own_claim
some set of these joints is determined,data
our system can automatically add joints that properly interpolate rotations without collapsing,own_claim
More joints with evenly distributed interpolation parameters could be added to sample this rotation space even better,own_claim
just a single interpolated rotation is sufficient,own_claim
This is done by examining the rotation of a joint relative to the dress pose and computing the new joint as the halfway spherical linear interpolation,own_claim
"of this rotation, located at the same position in space",own_claim
Shoemake 1985,data
improvements gained by simply adding a single interpolated rotation joint in the twisting case,own_claim
Figure 4,data
improvements for the bent elbow case,own_claim
Figure 5,data
"Another type of effect not easily captured by the simple linear blend model is bulging and denting of skins caused by muscles, tendons, or other substructure",background_claim
These particular effects cannot be captured,background_claim
the joints employed in animating a character do not typically scale up and down as would be necessary to approximate these effects,background_claim
the substructure deformation effects from muscles and tendons are often simply related to the angles between joints,own_claim
many characters,data
the elbow is near full extension,data
a bicep bulge is small,own_claim
the bugle is large,own_claim
the elbow is near full flexion,data
The effect is similar for other muscles in the body,own_claim
our system can add several joints that scale up and down based on the angle between particular joints,own_claim
"All upstream joints are oriented in the same way, with one axis aligned with the bone",own_claim
Figure 6,data
the driver has multiple children,data
a vector that is the sum of the bones connecting the driver to its children is used to measure the angle,own_claim
Downstream joints are similar,own_claim
We use four downstream joints on each bone connecting the driver to its children that scale just as the upstream joints do,own_claim
the scale parameter s is s = 1 + k b 1 · b 2 + 1 2 b 1 b 2 where b 1 and b 2 are the bone vectors used to measure the angle at the driver joint,own_claim
k is the maximum scale factor,own_claim
the angle between b 1 and b 2 is zero,data
joints that scale up,data
joints that scale down,data
the scale parameter is simply s −1,own_claim
The value for k may be chosen by the user,own_claim
8 works well for our examples,own_claim
vertices may take any scaling of these new joints,own_claim
a conservative large value is fine,own_claim
a vertex,data
needed a joint that scaled by 2 instead of 8,data
it could be assigned a weight of 4 1,own_claim
we use a fitting procedure to set the parameters of the underlying skinning model to match the example data well,own_claim
our system has augmented the input skeleton,data
the input to the fitting process is a set of examples,own_claim
This static mesh is deformed according to the skeleton configuration,own_claim
it is not attached to the skeleton in any way,own_claim
our examples were generated by exporting rigged objects from Maya,own_claim
they could have been sculpted by hand or come from another program,own_claim
"for each vertex, we are able to choose the set of influencing joints, influence weights (w i ) and the dress pose vertex position (v d )",own_claim
only the M i are predetermined,own_claim
"We would like to choose the influence sets, weights and dress pose vertex positions that best approximate the examples and generalize well to new poses",own_claim
We determine influence sets first,own_claim
"Ideally, the influence sets would fall out naturally from the weight solving procedure",own_claim
this does not happen in practice,own_claim
our samplings are necessarily not exhaustive,own_claim
"the more joints that a vertex depends on, the slower the skin can be to compute",own_claim
current hardware only supports a limited number of influences per vertex,own_claim
we would like to select a small set of good influences,own_claim
choosing the influence sets appropriately lets us bound the size of the problems we must solve to determine the weights,own_claim
Section 5.2,data
This makes the solving process faster,own_claim
"In most recent research, influence set determination has been left to users",background_claim
Lewis et al. 2000,data
Wang and Phillips 2002,data
Sloan et al. 2001,data
The task is typically accomplished by “painting” the regions of influence for each joint over the mesh,background_claim
less difficult than painting the weights themselves,background_claim
it is a tedious process,background_claim
Lewis et al. 2000,data
our system automatically determines the influence sets for each vertex using a heuristic algorithm,own_claim
vertices in a character skin typically transform nearly rigidly with respect to some joint,own_claim
vertices on the forearm roughly follow the forearm,own_claim
their skin is most heavily influenced by those joints that they are bound to,own_claim
most characters,data
a point on the bicep is not truly rigid as an arm moves,own_claim
muscle bulge,data
these points remain mostly rigidly attached to the upper arm,own_claim
should be influenced by it,own_claim
we measure how rigidly a vertex transforms with every joint over all examples and use the most rigidly transforming joints for the influence set,own_claim
The collection of these local coordinate positions over all examples forms a point cloud,own_claim
Figure 7,data
"The more compact this point cloud, the more rigid we believe the vertex-joint relationship to be",own_claim
the simple O(n 2 ) algorithm that compares each point to every other to be fast enough for our purposes,own_claim
this diameter may be computed more quickly,own_claim
An O(n log n) time algorithm is possible,own_claim
faster methods,background_claim
Malandain and Boissonnat 2002,data
It may be tempting to use a threshold scheme to choose influence sets,own_claim
we have found this problematic,own_claim
It is unclear how to pick a good threshold,own_claim
the rigidity scores get larger,data
they become less meaningful,own_claim
it may happen as an artifact of the particular input examples that points on the left shoulder move much more rigidly relative to the right leg rather than the left leg,own_claim
both choices make no sense for influences,own_claim
larger rigidity scores are not particularly meaningful,own_claim
it is nearly impossible to pick a meaningful threshold value,own_claim
"As in other linear blend skinning systems, influence sets need only be determined conservatively",own_claim
Wang and Phillips 2002,data
we allow users to choose k if desired,own_claim
between three and eight influences works well,own_claim
We would like to find the best vertices and weights that minimize the least-squares difference between the skin and the examples at all the example skeleton configurations,own_claim
That is         n 2 min ∑ v e i − v e i i=1,own_claim
v e i is the input vertex position from the ith example,data
v e i is the deformed vertex computed by the skinning model at the ith example configuration,data
This problem is bilinear in the weights and vertices,own_claim
We use an alternation technique to solve the optimization,own_claim
"This works by first fixing the first variable and solving a linear least-squares problem to find the second, then fixing the second and solving a linear leastsquares problem for the first",own_claim
This technique is commonly used and is described,own_claim
This process is then repeated until it converges,own_claim
Freeman and Tenenbaum 1997,data
We start by solving for weights,own_claim
we have no good guess for them,own_claim
we know that the initial dress pose vertices are ideal,own_claim
This process typically converges after one or two iterations,own_claim
we are solving for a small numbers of weights using large numbers of examples,own_claim
our systems are often well conditioned and do not suffer from overfitting,own_claim
the input data is well sampled,data
Section 2,data
we do not have to take special precautions to avoid overfitting,own_claim
we include tests for robustness,own_claim
there are any singular values below some fraction of this ratio,data
We detect this by comparing the ratio of the largest singular value to the smallest,own_claim
issuing a warning,own_claim
"This lets us detect when our matrices are rank deficient, leading to overfitting",own_claim
overfitting is a problem,data
provisions such as those taken,own_claim
could also be used,own_claim
Wang and Phillips 2002,data
"in all the examples in this paper, no singular values were zeroed",own_claim
It is not only important for the geometry in a skin approximation to be accurate,own_claim
important for normals to be well approximated,own_claim
they are not,data
lighting calculations will not produce good results,own_claim
It may seem that just transforming a dress pose normal by the inverse transpose of the corresponding vertex’s transformation matrix would be correct,own_claim
this is technically valid for local neighborhoods of smooth surfaces,own_claim
Turkowski 1990,data
we do not have a smooth surface,own_claim
Computing the normals in this manner can give undesirable results,own_claim
Instead we have single points that are computed independently,own_claim
the blended transformations are not pure rotations,data
Interactive systems typically approximate normal calculations as,background_claim
"n  ̄ c = ∑ w i M i,c −T M i,d T n d ∑ w i M i,c −T M i,d T n d",background_claim
it is often faster to calculate the joint matrices and their inverses incrementally by composition,background_claim
"at each step, rotations and scales have special inverse forms",background_claim
This alleviates the need for a general inversion operation,background_claim
In EigenSkin,background_claim
Kry et al. 2002,data
normals are treated as second skinning problem and are computed independently,background_claim
we take the model used in existing systems as in Equation 2 and include normals in our optimization process,own_claim
we simply add more terms to the objective function to include the differences between normal vectors,own_claim
We allow users to scale normals,own_claim
they wish to change their relative influence on the least-squares solution,data
The simple linear blend skinning model commonly used in video games and other interactive applications is very fast and compact,background_claim
cannot capture the high quality deformations that make convincing characters,background_claim
Our framework for extending the linear blend model allows us to capture much more interesting deformations while retaining its efficiency,own_claim
The most egregious deformation problems of linear blend skinning are solved by our approach,own_claim
our system can fix collapsing twists by adding just a single extra joint,own_claim
Figures 3 and 4,data
Collapsing and interpenetrations around hinge joints are also fixed using our method,own_claim
Figure 5,data
our extension framework can capture other more subtle and detailed deformations required for convincing characters,own_claim
our method can capture the bulges in the biceps and triceps of a character’s arm,own_claim
Figure 8,data
the particular extra joints we have chosen to add to our characters may not be capable of capturing the full deformation for any character,own_claim
different extra joints that do capture the desired deformations may be added and solved using our technique,own_claim
our technique can be used on more than just simple arms and legs,own_claim
Figure 9,data
our resulting skins generalize well to new poses,own_claim
Our solution procedure is generally very fast,own_claim
None of the examples shown here took more than five minutes to solve on a modern personal computer,own_claim
The computation time for each vertex depends on the number of influences and the number of examples,own_claim
each vertex is solved independently,own_claim
our algorithm is trivial to parallelize,own_claim
"The ability to generate compactly represented, fast to evaluate, high quality skin approximations from a set of examples is very useful",background_claim
Applications range from building characters for video games and virtual environments to high-end animation previewing,background_claim
Many current interactive systems,background_claim
only support linear blend skinned characters,background_claim
video games,data
authoring these skins is notoriously difficult,background_claim
deformation problems associated with using this model,background_claim
Determining the blending weights and influence sets is left to the skin author to set directly,background_claim
None of the more intuitive or useful deformer primitives provided by animation systems may be used,background_claim
"Using our method, character authors may use any tools they like to author characters",own_claim
All our system requires is a set of examples which is used to compute the appropriate influence sets and blending weights automatically,own_claim
This frees the author from setting them manually,own_claim
our characters are a straightforward extension to linear blend skinning,own_claim
many existing interactive systems already have the software infrastructure to sup- port them,own_claim
our skins are computed in the same manner as existing linear blend skins,own_claim
they are already accelerated by current graphics hardware,own_claim
Another application of our system is to map a character originally attached to one skeleton onto a different underlying skeleton,own_claim
Skin retargeting is useful,own_claim
a particular interactive system requires characters to have a specific skeleton,data
a video game may have an optimized engine for characters with a particular skeleton topology,background_claim
a character was created for a different skeleton,data
the character would have to be re-rigged manually to work on the new skeleton topology,background_claim
this can be accomplished much more easily with our system,own_claim
Our system sees this as any other set of data and solves for the proper influence sets and blending weights,own_claim
Another application of our technique is targeted at high-end animation,own_claim
High-end characters often have such complex deformations that they cannot be computed interactively,background_claim
animators typically work with low fidelity versions that only roughly suggest the actual shape of the character,background_claim
"Using our method, interactive characters could be built that allow animators to interact with much better approximations of the deformed characters",own_claim
"we have presented a method for building fast to evaluate, compact representations that produce accurate approximations of deforming characters",own_claim
The characters may be rigged using any available tool,own_claim
our system only requires static deformed meshes paired with skeletal configurations as input,own_claim
our technique works well for a wide variety of character skins,own_claim
it has limitations,own_claim
character deformations in our model are only driven by the skeleton’s joint parameters,own_claim
Our method cannot capture deformations that are driven by abstract parameters,own_claim
“happiness”,data
Lewis et al. 2000,data
Sloan et al. 2001,data
Our system also cannot accurately reproduce deformations that are not representable as linear combinations of the transformations expressed in our skeletons,own_claim
the scaling joints presented in this paper can only fully capture deformations that are well approximated by a scaling that is linearly related to the cosine of the angle between two bones,own_claim
This assumption may be violated by a character whose muscle bulges only when its arm is fully bent,own_claim
The scaling joints also assume that only the angle between joints is important,own_claim
bending the shoulder forward is treated the same as bending it up,own_claim
not all deformations can be captured using the extra joints presented here,own_claim
new joints may be added to capture any important deformation,own_claim
our influence set and vertex weight solving framework may be applied without change,own_claim
"our method produces high-quality yet fast and compact skinned characters that work with existing game engines, graphics hardware and other runtime systems",own_claim
Animation of skin and muscular deformations of human characters and other living creatures has long been one of the most important applications of deformable modeling in computer graphics,background_claim
Realistic deformation is a complex and subtle phenomenon due to the tightly coupled interplay of bones and musculature governing the deformations,background_claim
there are three common approaches for modeling surface deformation,background_claim
purely kinematic,background_claim
example-based,background_claim
physically based,background_claim
Purely algorithmic approaches for skeleton-driven,background_claim
and facial deformations,background_claim
are very fast,background_claim
Kavan and Zara 2005,data
Pighin and Lewis 2006,data
have difficulty in capturing realistic skin deformation in areas with multiple influences,background_claim
Example-based approaches capture more realism by pose-space interpolation of desired skin shapes at different poses,background_claim
Magnenat-Thalmann et al. 1988,data
Mohr and Gleicher 2003,data
Kry et al. 2002,data
Lewis et al. 2000,data
Physically based deformation algorithms,background_claim
provide automatic means to achieve dynamic deformations under influence of external forces and inertial effects,background_claim
are computationally more expensive,background_claim
Chadwick et al. 1989,data
Gourret et al. 1989,data
Chen and Zeltzer 1992,data
Scheepers et al. 1997,data
Wilhelms and Gelder 1997,data
Sifakis et al. 2005,data
Our approach seeks to bridge the gap between geometric examplebased methods and physically based approaches,own_claim
We introduce dynamic morph targets,own_claim
Dynamic morph targets rely on three key contributions,own_claim
A pose-space method for interpolation of simple elastic deformation models that allows the artist to author complex nonlinear deformation behavior,own_claim
"A compact way of interpolating skin geometry, elastic forces, and their derivatives, all in a unified manner",own_claim
very efficient implementation that is linear in the number of coefficients of the force polynomial,own_claim
The extension of the method to support modal reduction,own_claim
The main advantages of our method over previous approaches are three-fold,own_claim
quality of deformations,own_claim
dynamic behavior,own_claim
computational efficiency,own_claim
our method is physically based,own_claim
we avoid expensive modeling of musculature or tendon influences,own_claim
rely on physical constitutive models of deformable material to minimize skin pinching artifacts and bypass complex rigging requirements that are common to purely geometric approaches,own_claim
The use of such constitutive material models also enables response to external forces and inertial effects in dynamic simulations,own_claim
one is commonly restricted to linear or quasi-linear models that cannot model pose-dependent effects such as bulging and wrinkling,background_claim
performance requirements,data
we guide dynamic simulations by dynamic morph targets,own_claim
there has been an extensive collection of work in the area of surface deformation in the last few decades,background_claim
its immense importance in character animation,background_claim
we will primarily focus on significant work related to control of surface deformation of kinematic and dynamic characters,background_claim
extensive surveys for other important work,background_claim
Gibson and Mirtich 1997,data
Nealen et al. 2006,data
Purely data-driven methods are an attractive choice for control purposes,background_claim
the input shapes provide guide examples of desired deformations,background_claim
one simply interpolates between character poses in a large database,background_claim
Maestri 2006,data
providing ample control of skin deformation to animators,background_claim
many poses are required in the database to achieve good results,background_claim
Purely data-driven methods lack a kinematic model,background_claim
making them of limited use for animation and dynamic simulation,background_claim
Purely kinematic approaches,background_claim
model the deformation of the skin surface by linear blending of the animated bone transformations,background_claim
skeletal-subspace deformation,data
Magnenat-Thalmann et al. 1988,data
This technique,background_claim
cannot capture complex deformations,background_claim
typically has problems deforming skin near joints due to collapsing geometry,background_claim
the deformation is restricted to the subspace of the affine transformation of the joints,background_claim
Different methods have been proposed to address the problems of linear blend skinning by inserting additional joints tuned from examples,background_claim
Mohr and Gleicher 2003,data
employing blending of transformations instead of weights,background_claim
Kavan and Zara 2005,data
Recent techniques have extended skinning to mesh deformations,background_claim
James and Twigg 2005,data
motion capture data without a predefined skeleton,background_claim
Park and Hodgins 2006,data
interactive models,background_claim
Der et al. 2006,data
SSD does not permit direct sculpting or control,background_claim
artists have to tweak vertex weights,background_claim
giving SSD algorithms the reputation of being tedious to control,background_claim
The first work to add control in a kinematic approach is that of pose-space deformations,background_claim
Lewis et al. 2000,data
PSD is a hybrid method that combines SSD with morphing and employs scattered data interpolation to compute non-linear skin corrections in posespace,background_claim
resulting in a kinematic model that also has artist-sculpted poses,background_claim
PSD becomes memory inefficient,background_claim
dealing with large pose-spaces that have many example poses,data
the large database of surface displacements,background_claim
PSD can be extended to support per-vertex pose-space deformation,background_claim
Kurihara and Miyata 2004,data
Rhee et al. 2006,data
largely reducing the number of required example poses,background_claim
The EigenSkin method,background_claim
Kry et al. 2002,data
also provides a way to reduce per-vertex displacement memory footprint by computing an error-optimal set of eigenbases for approximating the original deformation model,background_claim
Other recent methods,background_claim
learn example-based corrections on sparse points and assume that these corrections can be smoothly interpolated,background_claim
Weber et al. 2007,data
Wang et al. 2007,data
Pose space deformation and related example-based methods allow for direct sculpting of geometric morph targets,background_claim
"are purely kinematic approaches to (quasi-)static deformation, without reference to underlying forces or mass",background_claim
"Our method builds on the concept of pose-space deformation and applies it to pose-space interpolation of dynamic morph targets to achieve not only (quasi-)static deformations, but a fully dynamic model in time-pose-space",own_claim
physically based methods in graphics are based on biomechanical models of skin tissue and musculature,background_claim
"In terms of efficiency versus accuracy, these methods fall into two broad categories",background_claim
The first category of algorithms aim for accuracy,background_claim
"by simulating the actions of the individual muscles, bones and tendons in the skin",background_claim
Chen and Zeltzer 1992,data
Scheepers et al. 1997,data
Wilhelms and Gelder 1997,data
Koch et al. 1996,data
Zordan et al. 2004,data
Sifakis et al. 2005,data
Sueda et al. 2008,data
Interactive physically based approaches trade accuracy for performance,background_claim
Terzopoulos et al. 1987,data
Terzopoulos and Witkin 1988,data
Metaxas and Terzopoulos 1992,data
Picinbono et al. 2001,data
Capell et al. 2002,data
Müller and Gross 2004,data
Galoppo et al. 2007,data
These methods use simplified (quasi-)linear elastic models that cannot capture complex non-linear behavior such as muscle bulging,background_claim
Physically based methods can only provide control through the influence of forces,background_claim
methods that control global deformation modes have been around for a while,background_claim
Witkin and Welch 1990,data
providing control of sculpted deformations for simulation of deformable models has only recently caught attention in graphics research,background_claim
A method for physically based rigging was proposed,background_claim
Capell et al. 2005,data
using pose-dependent forces to guide the shape of the character,background_claim
their approach does not support pose-dependent elastic properties,background_claim
its performance is highly dependent on the resolution of the sculpted deformations,background_claim
shape keyframes can be used to retarget the elastic deformations,background_claim
Given an input animation,data
Kondo et al. 2005,data
or to enhance the surface deformations with physically simulated detail using subspace constraints,background_claim
Bergou et al. 2007,data
The former provides good control of shapes,background_claim
is restricted to a given input animation,background_claim
the latter achieves rich secondary surface detail,background_claim
does not provide direct manipulation of the surface,background_claim
Our method provides the ability to sculpt the dynamic morph targets directly and produces a dynamic model that is not restricted to a given animation,own_claim
our model can be plugged into any simulated environment and be subject to external forces,own_claim
Modal reduction has proven useful to increase performance in posespace deformation methods,background_claim
Kry et al. 2002,data
as well as in physically based methods,background_claim
Hauser et al. 2003,data
Choi and Ko 2005,data
Our work exploits the technique,own_claim
that enables fast modal integration of St.Venant-Kirchoff elastic forces,own_claim
Barbic and James 2005,data
"the performance depends mainly on the number of simulated eigenmodes, not on the resolution of the model",background_claim
This technique makes our approach suitable for real-time applications,own_claim
our method is the first to provide shape and surface behavior control of dynamic reduced models,own_claim
"The goal of our method is to simulate controllable non-linear deformations by interpolation of dynamic morph targets at runtime, kindred to geometric morph targets in static character modeling",own_claim
they can be used to simulate a pose-dependent elastic model that is fast enough for real-time applications,own_claim
Dynamic morph targets define pose-specific soft skin behavior,own_claim
they are pairs of elastic models E i and poses s i,own_claim
dynamic morph targets associate surface and volume deformation with character pose,own_claim
dynamic morph targets also define pose-specific elastic properties including stiffness and plasticity,own_claim
The combination of surface deformation and elastic properties defines the elastic model E i,own_claim
the concept of pose can easily be extended beyond the skeletal sense,own_claim
our implementation uses skeletal pose,own_claim
any notion of state of a character can be used,own_claim
emotional state,data
velocity state,data
contact state,data
muscle activation,data
Dynamic morph targets can easily be created in existing modeling packages,own_claim
of the character and sculpts desired deformations that cannot be captured with traditional skinning methods,own_claim
A modeler defines a set of m poses,own_claim
Kavan and Zara 2005,data
MagnenatThalmann et al. 1988,data
Elastic properties can be assigned for each pose,own_claim
the same skin section can be defined stiff for one pose and flabby for another pose,own_claim
Dynamic characters enhanced with dynamic morph targets can react to external forces just as with other common physically based deformation algorithms,own_claim
they also expose non-linear deformations and elastic behavior as imposed by the dynamic morph targets,own_claim
"Dynamic morph targets are used to build a pose-dependent elastic model E(x, s)",own_claim
an elastic model can be defined as a material function E(u(x)) defining the internal elastic energy at material points x in function of the deformation u,own_claim
hyper-elastic materials,data
we choose to express elastic deformation in the skeletal bind pose as has been proposed in the past,own_claim
Lewis et al. 2000,data
Kry et al. 2002,data
Galoppo et al. 2007,data
it is certainly possible to use other formulations of elastic strain to define a pose-dependent model with dynamic morph targets,own_claim
"Traditionally, the elastic energy is a pose-independent material potential that causes internal elastic forces R(u) in the material",background_claim
"We create a pose-dependent elastic model by taking into account the dynamic morph targets {E i , s i } as example inputs",own_claim
"Without loss of generality, we can use the finite element method to discretize the partial differential equations of solid continuum mechanics in space, leading to the common Euler-Lagrange motion equations",own_claim
"The computation of pose-dependent elastic forces R(u, s) requires the interpolation of pose-specific forces R i (u)",own_claim
forces are a function of the timevarying deformation u,own_claim
they cannot simply be evaluated once and then interpolated at runtime,own_claim
we have opted for elastic models for which R i (u) can be expressed as a (multivariate) polynomial function of the degrees of freedom u,own_claim
Common examples of such elastic models are the so-called ‘completely linear’ FEM deformation model,background_claim
"Then, the interpolation of elastic models reduces to the interpolation of polynomial coefficients",own_claim
Müller and Gross 2004,data
the ’seminon-linear’ St.Venant-Kirchoff model,background_claim
Barbic and James 2005,data
Capell et al. 2005,data
We have simulated our examples with both linear and semi-non-linear elastic models,own_claim
we express deformation in the skeletal bind pose,own_claim
we did not see any noticeable quality difference between both elastic models in our experiments,own_claim
we have opted for the more efficient linear elasticity to produce most of the images and videos unless otherwise noted,own_claim
Section 5,data
both models are amenable to modal reduction for efficiency,own_claim
Section 3.4,data
"The interpolation of polynomial coefficients yields the interpolation of force values R(u, s) at all possible deformation values u",own_claim
it also yields the interpolation of force derivatives,own_claim
"the ∂R(u,s) stiffness matrix",data
One subtle detail remains for defining a ∂u complete interpolation of elastic models,own_claim
The rest configuration at each input pose may be different,own_claim
the deformation u may not be consistent across poses,own_claim
"The addition of this term simply modifies the coefficients of the force polynomials, which can then be safely interpolated",own_claim
all deformations are expressed w.r.t. a consistent configuration,own_claim
a pose can be described in many ways,own_claim
it provides a description of the state of a model or character,data
a metric to measure distances between poses,data
its elastic model should approximate the elastic models of the input poses,own_claim
an articulated character moves between observed configurations,data
we are looking for a way to interpolate internal elastic forces R i,own_claim
Section 3.2,data
the character moves from one pose to the other,data
the internal forces change continuously but highly non-linearly,own_claim
elastic forces form a non-linear smooth field in pose-space,own_claim
Radial base functions,background_claim
are a common choice for interpolating scattered data of an underlying smooth field that is non-linear,background_claim
Powell 1987,data
RBFs are suited,own_claim
they work well with sparse input data sets,background_claim
our goal is to have as few input models E i as possible,data
"RBFs extend easily to high dimensional domains, enabling the capture of multi-joint coupling effects",background_claim
"we can determine the pose-dependent elastic forces R(u, s) by computing the polynomial coefficient vector a(s)",own_claim
Section 3.2,data
"Using RBFs, the interpolated coefficient vector is computed at runtime as",own_claim
a(s) = X w j φ( s − s j ) + Q(s) j=1,own_claim
it was sufficient to use a constant vector Q for the polynomial Q(s),own_claim
We also employed the globally supported biharmonic RBF kernel φ(r) = r,own_claim
its optimal fairness allows for smoother interpolation of sparsely scattered example poses as compared to locally supported kernels,background_claim
Carr et al. 2001,data
locally supported kernels,own_claim
are harder to tune and are unable to extrapolate across dynamic morph targets that are far apart in pose-space,own_claim
the Gaussian RBF kernel,data
We also use the smoothing term,own_claim
to achieve smoother behavior across large gaps between input poses,own_claim
Carr et al. 2001,data
The RBF weight vectors w j are given by the solution of m linear systems,own_claim
a(s i ) = a i = X w j φ( s i − s j ) + Q(s i ). j=1,own_claim
The combination of these m linear systems provides m vectorial equations with m vector unknowns w j,own_claim
plus the additional constant unknown vector Q,own_claim
choosing a constant polyno-,data
mial,data
The combined system is underdetermined,own_claim
it can be solved by imposing orthogonality conditions on the weights w i,own_claim
m + 1 vector unknowns for m vectorial equations,data
Carr et al. 2001,data
"In order to avoid redundancy in the pose descriptors s i , and to guarantee that Eqn. (3) is not singular, we perform a principal component analysis",own_claim
on the set of input pose descriptors,own_claim
Golub and Loan 1996,data
"By selecting modes with non-zero or large eigenvalues only, we reduce the dimension of s and define a mapping to the reduced pose descriptor s = U T s s",own_claim
Modal reduction of the pose descriptors is very effective for robustness,own_claim
is also useful,own_claim
our method is used for facilitating rigging,data
the skin is under influence of many bones for which the skinbone relationships cannot easily be determined by a human rigger or technical director,own_claim
In highly complex areas of skin deformation,own_claim
the shoulder area,data
Our system can automatically deduce these relationships and reduce them to only a few significant modes,own_claim
"we can compute the elastic ∂R(u,s) forces R(u, s) and their Jacobian for implicit integration ∂u of Eqn. (1)",own_claim
At runtime,own_claim
a(s) from Eqn. (2),data
the large number of coefficients that need to be interpolated,data
the evaluation of Eqn. (2) is rather costly,own_claim
"The number of coefficients is proportional to the number of nodes n in the finite element mesh for linear elastic models, and O(S 3 n) for StVK materials",own_claim
"we propose a way to increase performance and to reduce the dependency on the resolution of the input geometry by reducing the number of degrees of freedom, while still maintaining the non-linear behavior defined by the morph targets",own_claim
We use a reduced model u = Uq to enable dynamic simulation that is independent from the input resolution of the geometry,own_claim
"the ODE in Eqn. (1), is transformed into",own_claim
"q + D(q,  ̃ q,  ̇ s) + R(q,  ̃ s) =  ̃ f",own_claim
mass-orthogonal basis U T MU = I,data
one can form the dense reduced tangent stiffness matrix,own_claim
"∂ R(q,  ̃ s) = U T ∂R(Uq, s) U ∈ R (r,r) ∂q ∂q",own_claim
it can be shown that the reduced forces are still (multivariate) polynomial elastic forces,own_claim
applying model reduction to (multivariate) polynomial elastic forces,data
reduced ‘completely-linear’ elastic forces are linear polynomials in terms of the reduced coordinates q,own_claim
Barbic and James 2005,data
StVK internal forces and tangent stiffness matrices are multivariate cubic polynomials that can be evaluated in Θ(r 4 ) time,background_claim
by simply evaluating polynomials in terms of the reduced coordinates q: R(q)  ̃ = P i q i + Q ij q i q j + S ijk q i q j q k,background_claim
"∂ R(q)  ̃ l li il lij ilj ijl = P + (Q + Q )q i + (S + S + S )q i q j , ∂q l",background_claim
The polynomial coefficients can be precomputed,own_claim
the rest pose p i,data
the Q ij and S ijk terms are all zero,own_claim
linear materials,data
We can now combine scattered polynomial interpolation,own_claim
with the reduced motion equations by concatenating the reduced coefficients into a = [ P i ; Q ij ; S ijk ],own_claim
each dynamic morph target defines a set of coefficients a i which can then be used to set up an interpolator for the posedependent coefficients a(s),own_claim
"This then yields all the necessary information to compute R(q,  ̃ s) in Eqn. (5)",own_claim
the number of reduced modes r is typically many orders of magnitude smaller than the number of vertices of the mesh,own_claim
the cost of evaluating Eqn. (2) is significantly smaller than in the non-reduced case,own_claim
"The reduced equations of motion Eqn. (4) can be solved using a reduced implicit Newmark Solver, employing the aforementioned internal forces and tangent stiffness matrices evaluated at each time step",own_claim
"an artist begins by modeling the base model surface and a skeleton with associated SSD skinning weights, and defines a set of geometric morph targets",own_claim
Section 3.1,data
"Using vertex painting, he can then assign stiffness parameters such as Young’s modulus and Poisson ratio to certain parts of the skin",own_claim
the new internal node positions are determined,data
the morph target’s position offsets ∆u from the base mesh are computed and the force polynomials a i associated with R i (u) are precomputed,own_claim
Eqn. (3),data
Sections 3.2 and 3.4,data
a modal subspace is also constructed,own_claim
reduced elastic models,data
Section 4,data
"At runtime, the final positions of the material points are computed as the combination of linear blend skinning and elastic deformation computed in the skeletal bind pose",own_claim
We also account for the inertial forces caused by the moving coordinate frames of the bones,own_claim
Galoppo et al. 2007,data
we conceptually constrain the material points that are attached to internal bones,own_claim
This can be achieved by removing the elastic degrees of freedom that are associated with corresponding internal mesh nodes,own_claim
the positions of these points are then completely governed by the linear blend skinning transformations only,own_claim
We remove these degrees of freedom in our preprocessing step by identifying tetrahedral mesh elements that are intersected by skeletal bones,own_claim
Degrees of freedom that are associated with these elements are removed,own_claim
unless they lie on the model’s boundary surface,own_claim
which provides the best deformation basis for small deformations away from the rest configuration,own_claim
"For each of the dynamic morph targets, we employ linear modal analysis",own_claim
"at this point, one could easily add modal derivatives",own_claim
Barbic and James 2005,data
We have taken into account three requirements when choosing the basis,own_claim
"Avoid redundancy in the basis set, i.e. find an orthogonal set that is as compact as possible",data
The characteristic deformations of all the morph targets have to be well represented,data
The input deformations of each of the dynamic morph targets have to be well represented in the reduced space,data
"The most straight forward approach is to combine all eigenvectors together as U = ˆ U 1 U 2 . . . U m  ̃ , and orthogonalize them",own_claim
each set of eigenvectors U p is orthogonal,own_claim
eigenvectors between different sets are not,own_claim
This approach takes care of the second requirement,own_claim
results in a large set of eigenmodes with relatively small contributions for many eigenmodes,own_claim
all the common first deformation modes,own_claim
shear,data
stretch,data
are represented in each of the U i,own_claim
we can construct a low-dimensional motion subspace by applying mass-PCA,own_claim
Barbic and James 2005,data
We scale the derivatives according to the eigenvalues of the corresponding linear modes,own_claim
we obtain the low-dimensional deformation basis by applying mass-PCA on the set of vectors,own_claim
"{ λ λ i 1 j i U j i | i = 1, . . . , m; j = 1, . . . , k i }",own_claim
"Scaling is necessary to put greater weight on the more important low-frequency modes, which would otherwise be masked by highfrequency modes",own_claim
"we can adapt the normalization factor such that the eigenvectors are normalized across morph targets, by replacing the scaling factor by λ λ i 1 i λ i . k j",own_claim
the eigenmodes in different poses show large variance,data
"to make the basis aware of the morph targets, we add m − 1 rest pose deformations {x 0 p |i = 2, . . . , m} to the set U and remass-orthogonalize the set {U i } ∪ {x 0 p } into the final basis U ∈ R 3n×r with r = (r + m − 1)",own_claim
Figure 3,data
"By using pose-space efficient polynomial interpolation to achieve pose-dependent behavior, we are able to demonstrate rich nonlinear deformation effects at relatively small extra cost compared to simple simulation of linear or semi-non-linear materials",own_claim
We have performed experiments with three different input models,own_claim
a simple bulging cylinder with 4 bones,data
Fig. 2,data
a shoulder model with 4 bones,data
"Herbert, our swimsuit model with 46 bones",data
"model, we qualitatively compare simulations with different elastic models",own_claim
For each,own_claim
"For the Herbert simulations, we used only 3 morph targets",own_claim
Fig. 1,data
the single elastic model shows little or no dynamic behavior,own_claim
our pose-dependent elastic model adds a dramatic amount of realism due to the bulging behavior and inertial skin motion,own_claim
we show the advantage of our pose-dependent model from an artistic viewpoint,own_claim
Herbert jumps off a diving board and flips through different poses,data
we drive the skinned Herbert model with a skeletal animation and add inertial forces,own_claim
the bone’s moving frames,data
"With single elastic models, the belly is flabby and skinny throughout the entire simulation",own_claim
"Using the aforementioned morph targets for Herbert, an animator can impose a stiff, bulged belly in balled-up poses, and softer, skinny belly behavior in upright poses",own_claim
the use of reduced models in our method achieves the same quality of desired deformations as the computationally more expensive unreduced model,own_claim
Fig. 4,data
Our method also provides a physically-based approach to resolving regions affected by multiple joints,own_claim
a shoulder rig,data
Our approach facilitates complex rigging,own_claim
a set of,own_claim
skinning weights and a set of morph targets are sufficient to simulate complex co-articulation effects,own_claim
There is no need for manual tweaking of the complex mapping of joint configuration to blending weights of geometric morph targets,own_claim
"In our shoulder example, we have 6 morph targets",own_claim
Fig. 5(a),data
The shoulder example also demonstrates our method’s ability to simulate dynamic behavior at poses away from the morph target input poses,own_claim
Fig. 5,data
The input morph target set contains only one example of a folded elbow,own_claim
we show two distinct folding scenarios in the full animation,own_claim
Both folding scenarios show severe self-intersection in the single pose-independent model,own_claim
the effect of linear blend skinning,data
Our pose-dependent model resolves both automatically,own_claim
Another,own_claim
interesting co-articulation effect is the motion of the chest muscle as the arm makes a folding motion,own_claim
video,data
the chest seems to collapse for single elastic models,own_claim
it bulges more realistically with our method,own_claim
"After modal reduction, we were able to accelerate the simulation significantly by using only 19 eigenmodes",own_claim
Table 1,data
with almost no visible effect on the simulation quality,own_claim
Fig. 5,data
All our methods achieve real-time performance,own_claim
efficient pose-space interpolation of low-complexity linear elastic forces and modal reduction of either linear or semi-nonlinear StVK forces,own_claim
our method has only a marginal extra cost,own_claim
Table 1,data
Comparing our method with the performance of single (pose-independent) elastic models,data
efficient polynomial interpolation of the dynamic morph target models,own_claim
"precomputation of the force polynomial coefficients in Eqn. (7) can be significant in case of StVK models, but never prohibitive",own_claim
The quality of the output animation depends on the quality and number of the artist’s input poses,own_claim
Too few input poses can cause slight popping of the animation towards the input shapes,own_claim
the simulation of the pose-dependent elastic model will be stable nevertheless,own_claim
stable results can be achieved with little effort from the artist,own_claim
poses can then be added incrementally to areas of the posespace where the behavior is not satisfactory,own_claim
The effect of the number of poses on the run-time performance of the algorithm is very small,own_claim
it doesn’t affect the number of degrees of freedom in the simulation,own_claim
comparison 6 vs. 9 shoulder DMTs in Table 1,data
Only the cost of the RBF interpolation in Eq. (2) is affected linearly in the number of poses m,own_claim
geometric morph targets enable control of non-linear deformations,own_claim
these deformations are purely static and cannot react to external forces in a physical simulation,own_claim
Our dynamic morph targets add dynamic behavior to non-linear deformations such that external and inertial forces can be applied,own_claim
Fig. 2,data
The method,background_claim
Capell et al. [2005],data
also enables deformations under influence of external forces,background_claim
does not influence the underlying properties of the elastic material,background_claim
"our method can correct such undesirable behavior by setting elastic properties for each of the individual morph targets, effectively mimicking muscle contraction",own_claim
Fig 2(c),data
"we have presented dynamic morph targets, posedependent elastic models that allow an artist to easily author and control the geometry and elastic behavior of dynamic characters",own_claim
"Dynamic morph targets avoid complex rigging requirements of purely geometric methods, and complex musculoskeletal modeling of purely physically-based methods",own_claim
"By extending our basic framework to support modal reduction, we also achieve high runtime performance",own_claim
The current dynamic morph target framework can be enhanced with additional features to be included in the future,own_claim
support for (contact) constraints,own_claim
an extension to weighted pose-space deformations,own_claim
to allow for improved localized interpolation,own_claim
Kurihara and Miyata 2004,data
A realistic and visually accurate character animation necessitates proper skin deformation of the character models,background_claim
Skin deformation owes a large part to proper rigging of the characters,background_claim
The virtual skeleton forms the interface by which the animator can pose or animate the characters,background_claim
The joint-based skeleton has been very popular in the animation industry for many years and has nearly become a de facto standard,background_claim
"Other technologies like inverse kinematics, forward kinematics, motion capture etc. are built on this hierarchical system of joints",background_claim
It is plain to see why the joint-based skeleton system is thoroughly integrated into the current production pipeline in animation,background_claim
a combination of techniques including muscle simulation is used to achieve the realistic best in mesh deformation,background_claim
visual fidelity is of the utmost importance,data
film quality animation,data
this can be understood as a function mapping of the skeleton parameters to a deformation field,background_claim
1,data
The process followed by this technique is to assign influence joints and blend weights to each vertex of the character,background_claim
Transforming the vertex by a weighted combination of the joints local coordinate frames completes skin computation,background_claim
computational performance and ease of use,background_claim
the joint skeleton skinning is not without its share of problems,background_claim
Unusual deformation artifacts appear in the skin while deforming,background_claim
"Some of the commonly seen problems in joint-based skinning during deformation are: candy wrapper effect during twist deformation and collapsing joints, which would create a rubber-tube like effect",background_claim
There are certain solutions to circumvent these problems,background_claim
they have their own drawbacks,background_claim
the joint-based system is popular,background_claim
its interactivity,background_claim
use of minimal animation data,background_claim
it is almost an integral part of the current animation workflow and animators are reluctant to abandon their familiar production practice,background_claim
The relationship between a skeleton and the skin shape is highly non-linear,background_claim
"The problems of joint-based skeleton skinning mentioned above, in essence arises from under-sampling",background_claim
The transformations of the two related joints are too far from each other,background_claim
And with that low-rate sampling they fail to give a good approximation of the deformed skin surface,background_claim
"we introduce a novel method called curve skeleton skinning, to overcome the persisting drawbacks of joint skeleton skinning",own_claim
The basic idea is to represent the relationship between the skeletal movements and the skin deformation in a non-linear continuous fashion,own_claim
a lot of contemporary animation technology is built upon the hierarchical joint-skeleton based system,background_claim
it is not wise to entirely replace the current practice,own_claim
What we propose to do is to enhance the current joint skinning system using the curve skeleton skinning and retain the current animation production pattern that the animators are familiar with,own_claim
the joint skeleton is a discrete centre line representation of an object,background_claim
the curve skeleton offers a continuous skeletal representation,background_claim
a character will have two skeletons,own_claim
The curve skeleton being continuous gives the maximum sampling rate and provides skin deformation transformation without any artifacts,own_claim
the ordinary joint skeleton,own_claim
a curve skeleton,own_claim
we will demonstrate how the curve skeleton technique can drive muscle-based systems to achieve realistic muscle deformation during animation,own_claim
"Using our technique, the animator is able to work without digressing from the familiarity of the current joint-based system, but at the same time achieves maximum visual realism in terms of skin deformation",own_claim
the term curve skeleton has been used for other applications,background_claim
and it was defined as ‘a 1D subset of the medial surface of a 3D object.’,background_claim
virtual navigation,data
reduced-model formulation,data
visualization improvement,data
surface reconstruction,data
2,data
it should not be confused with what we are presenting in this paper,own_claim
some similarity,own_claim
One should neither confuse this with the inverse kinematics (IK) spline handle tool provided by the animation package Maya,own_claim
they are in essence very different techniques,own_claim
their seeming similarity,own_claim
Mesh deformations due to skeletal joint influence have undergone significant improvements in the recent years,background_claim
Some of the normal deformation techniques,background_claim
can be used in skin deformation techniques,background_claim
free form deformations,data
lattices,data
Singh and Kokkevis,background_claim
3,data
demonstrate this in their paper,background_claim
They use surface-oriented FFDs for skinning,background_claim
4,data
An interactive deformation technique for complex geometric objects using curves or wires is detailed,background_claim
There are basically two main approaches to modeling skin deformations,background_claim
anatomy-based approach,background_claim
skin-shape based approach,background_claim
The anatomical approach derives its name from its implementation using anatomical models of muscles and skeletons and other relevant interior structures,background_claim
These modules undergo deformation when the body moves and a skin simulation and collision detection algorithm is run which would realistically deform the skin where and whenever it is required,background_claim
5,data
details a technique of efficient muscle shape deformation using the anatomical skin deformation technique,background_claim
5,data
"resorts to the creation of a muscle model, which is categorized into two layers",background_claim
an action line,background_claim
a surface mesh,background_claim
the action line is the mechanism that drives the deformation,background_claim
They also implement attractive and repulsive force fields in the form of ellipsoid metaballs to stabilize the action line,background_claim
Simulation of complex dynamics and performing complex collisions and also providing a visually realistic output form the main strength of the anatomical approach,background_claim
Incorporating physical properties of anatomy structures can potentially improve realism,background_claim
Physics can be used either at the muscle level,background_claim
6,data
or used to help character rigging,background_claim
7,data
8,data
presents another approach to deformation using an elastic surface layer model,background_claim
It uses a layered structure of anatomical parts from the inside out,background_claim
skeleton-&gt;bone-&gt;fat-&gt;skin,data
The drawback comes in the form of computation expense,background_claim
The surface is discretized and finite differencing techniques are used to evolve the deformation through time,background_claim
The anatomy-based approach is,background_claim
used mainly in high-quality film visual effects where anatomical accuracy is a must for believable computer generated characters,background_claim
The example-based approach forms a suitable alternative where computational expenses are to be minimized,background_claim
This method takes an interpolative approach to deformation,background_claim
An artist models certain key poses of the characters where a correlation is maintained for the degrees of freedom,background_claim
New poses are interpolated from these key poses,background_claim
A modified least square fitting technique is used to compute the weights of the deformation and the subsequent generalization of skin movement to other animated poses,background_claim
9,data
the algorithm is trained in a statistical manner,background_claim
deformation computation for an arbitrary animated pose can be done,background_claim
They use a technique called multiweight enveloping in place of single-weight enveloping for better deformation,background_claim
10,data
implements an example-based approach to deforming meshes by using radial basis functions to supply the interpolation weights and also for shape interpolation,background_claim
A variation of example-based approach where key example poses are derived from arbitrary unrelated examples is detailed,background_claim
where a range scan is used,background_claim
11,data
example-based approaches have the advantage over anatomical approaches by being computationally faster,background_claim
creating example poses are much easier compared to creating detailed anatomically correct models,background_claim
"Most of the described techniques are built upon the existing hierarchical skeletal joint system and modify 10 or even create 9,12 new weight calculations to rectify any sort of physical artifacts in the skin deformation",background_claim
The example-based approach relies on key sample poses to derive a generalization of deformation,background_claim
this becomes a major disadvantage,background_claim
this in itself is an expensive and time-consuming process,background_claim
It is not desirable to create many examples and train the system,background_claim
Our approach builds upon the existing system using the curve skeleton for a continuous sampling of the skin surface thereby facilitating skin deformations devoid of geometry artifacts,own_claim
our technique falls in between the two approaches,own_claim
seamless integration with the two is also possible and becomes its strong advantages,own_claim
A relevant technique to ours is the sweep-based skinning,own_claim
13,data
The body of a character is segmented with a large number of sweep planes which will be transformed by the joint skeleton,background_claim
These planes are used to guide the transformation of every skin point during animation,background_claim
"With our method, the skin surface does not need to be approximated by sweep surfaces",own_claim
"It will be deformed directly by the underlying curve skeleton, leading to a simpler process",own_claim
Skeleton and skin relationship in the present production pipeline is strictly linear,background_claim
linear blending or skeletal space deformation falls short in accurately depicting skin deformations,background_claim
their non-linear nature,background_claim
This non-linear nature is explored,background_claim
12,data
a spherical blending is proposed,background_claim
Only the translation factor is most commonly used for the skin vertices and the rotation factor is not considered,background_claim
the problem reduces after weight painting,background_claim
the joint influence fall-off follows a curve pattern,data
9,data
Wang and Philips,background_claim
introduce a multiweight technique to eliminate this problem in a normal joint-based skeleton skinning,background_claim
this requires the generation of a large number of pre-modeled examples in the first place,background_claim
"1,14",data
The solution to the collapsing joints problem,background_claim
has the added problems of,background_claim
creating a new joint in the hierarchy,background_claim
joint connections have to be done again to connect the new joint in the existing chain,background_claim
painting of weights have to be adjusted to accommodate the new joint,background_claim
"With our curve skeleton technique, the curve serves as a duplicated skeleton to the actual underlying joint skeleton",own_claim
Effectively any point on the curve can be considered as a joint,own_claim
"the skeleton is equipped with an infinite number of joints, which will influence the skin deformation",own_claim
The curve nature of the skeleton makes it easier to manipulate it with a great order of flexibility,own_claim
The idea to use a curve skeleton side by side with the traditional joint skeleton is conceptually simple and functionally efficient giving realistic skin deformations even under extreme mesh duress,own_claim
Our curve skeleton technique takes full advantage of the nonlinearity of the skeleton-skin relationship,own_claim
The curve skeleton can be generated in two ways depending on what the animator supplied in the first place,own_claim
the animator supplies a skin model and a skeleton model in the traditional manner,data
the curve skeleton generation is easy,own_claim
the animator supplies only a 3D surface model,data
the generation of the skeleton becomes slightly more complex in that an additional step is required,own_claim
A temporary copy of the surface model can be created (during runtime) and voxelized,own_claim
15,data
"Once voxelized, a curve skeleton is created using the repulsive force field function",own_claim
Then the temporary mesh can be deleted and the skeleton can be used with the original surface model,own_claim
The reason for the floating position is to eliminate the selfintersection of the skin mesh,own_claim
Figure 1 -a1,data
"Before we can predict the exact movement of the Bone_CP, first we should estimate the approximate distance d from the skin surface to the relevant link of the skeleton",own_claim
The condition for non-self-intersection is to check if the local radius of curvature r at the joint is not less than d,own_claim
we can extract the exact expression from the position of Bone_CP,own_claim
we analyse the curve function,data
the distance d is only an approximate result,own_claim
it may not fit exactly in the animation,own_claim
here the floating position of the Bone_CP is left to the animator to define interactively,own_claim
Figure 1 -a2,data
"By providing the animator with more parameters, which he/she can tweak, we grant flexibility and freedom to adjust the animation",own_claim
a fork exists in the joint chain,own_claim
In anatomical areas like the hip,own_claim
Figure 1b,data
three curves are generated,own_claim
two curves starting from the central link to the two limbs linkage,own_claim
one curve linking the two links,own_claim
"In the neck area, a cross exists in the joint chain",own_claim
it appears to have four links,own_claim
we only need to generate two curves for the curve skeleton,own_claim
Figure 1(c),data
we will use a maximum of three curves for each joint,own_claim
a human character,data
"In most cases, one curve is sufficient",own_claim
"In our method, the parameter t on the curve plays an important role in the deformation",own_claim
An important feature of the local frame is the centre of the local coordinate system,own_claim
the centre is lying on the curve,data
the deformed skin will move out from underneath the skeleton,own_claim
The underlying structures like muscles or bones will be exposed,own_claim
the bone twists around its local x-axis,data
it will not have any effect on the associated curve skeleton,own_claim
This is not acceptable,own_claim
"For each point on the curve, we still need a twist distribution to define how the curve twists along its path",own_claim
Normally it is not evenly distributed,own_claim
the twist of a forearm,data
we provide the animator with the freedom to control how the curve twists by manipulating the distribution curve,own_claim
The distribution curve,own_claim
Figure 3a,data
is very much like the animation curves in Maya,own_claim
Here the twist angle is distributed along the distribution curve so that the twisting is smooth and natural,own_claim
we can settle the associated curve segment,data
"The values ht, u, di can be easily computed",own_claim
"the challenging part of the work is to find the associated curve segment, and assign the weighting parameter for each curve segment",own_claim
16,data
associated with the traditional joint-based method,background_claim
There is a lot of work,background_claim
the containment-binding algorithm,data
point-to-line mapping,data
Delaunay tetrahedralization,data
The relevant default weight factors w i of a skin point for the ith curve segment is determined by the distance between the skin point concerned with the relevant curve segments,own_claim
a skin point is related with only one curve,data
the weight factor is always 1,own_claim
those skin points associated with two curve segments,data
the default weights are proportional to the distances to the relevant curve segments,own_claim
"the further away a skin point is from the curve segment, the smaller the weight is",own_claim
This is also the case for any skin points associated with three curve segments,own_claim
"the summation of the weights are constrained to one, P w i 1⁄4 1",own_claim
The animator will have freedom to edit the weighting factors in the same way as the smooth skinning,own_claim
weight assignment for a skin point is simpler than the traditional smooth skinning method,own_claim
the computation for skin deformation is computationally cheaper,own_claim
we have a maximum of only three curve segments for each skin point,data
Smooth skinning usually involves three weights for each skin point,background_claim
in many cases there could be as many as five weights,background_claim
This is worsened,background_claim
additional joints are placed,data
"The more the joints, the trickier it is to determine the weight distribution",background_claim
"With our curved skeleton, this problem will almost certainly not arise",own_claim
deforming the skin is pretty straightforward,own_claim
the skin is bound with the curve skeleton,data
is slightly faster than that of the traditional smooth skinning technique,own_claim
our computation speed is at the same order,own_claim
we use on average a smaller number of weights,own_claim
This leads to a smaller number of summation terms needed for the calculation of the deformed skin points,own_claim
Equation (3),data
muscles will give an added layer of realism to the deformation,own_claim
"With our curve skeleton technique, muscle deformation can be fully integrated where the muscles are driven and animated by our curve skeletons",own_claim
17,data
One of the best third party muscle simulation systems available called muscleTK,background_claim
deforms the muscle using the so-called action lines,background_claim
the disadvantage is that the action line has to be manually animated each frame during animation,background_claim
"Using the proposed curve skeleton, we can realistically deform not only the skin directly",own_claim
"but also the muscles, in a unified manner",own_claim
"each action line is deformed by a curve skeleton, and the action line in turn deforms the muscle",own_claim
we can achieve sophisticated muscle deformations without the tediousness of animating the action lines manually every frame,own_claim
we can first transform the control points (CP) of the action line from world space to the associated curve skeleton local frame,own_claim
the effect of a muscle bending around the joint or the bone is required,data
These CPs will then be transformed with the curve skeleton,own_claim
Figure 3b,data
resulting in the muscle bending around the joint or bone being automatically created,own_claim
Maya is the most widely used 3D animation package in the industry,background_claim
Autodesk has provided Maya APIs for developers to expand the functionality of Maya,background_claim
Maya 6.5,data
Visual Studio,data
NET were used in the implementation of the curve skeleton,own_claim
curve tools to generate the curves according to his/her wish,own_claim
works with normal edit point,own_claim
the artist,own_claim
the curves become the skeleton for the skin mesh,own_claim
the curve is selected and the plug-in activated,data
any movement of the joints affects the curvature of the curve,own_claim
"Internally, the curve cluster is bound to the joint skeleton",own_claim
The local transformations of the curve points are applied to the skin mesh vertices thereby generating deformations on the skin,own_claim
Skin deformation is closely linked with the movement of the skeleton of a character,background_claim
It is understandable that the relationship between both is highly non-linear,background_claim
poses a challenge,background_claim
the relationship is to be modeled mathematically correctly,data
Existing skeletondriven techniques regard it as a much-simplified linear problem,background_claim
has resulted in unrealistic skin deformation in certain regions of the character body,background_claim
we have presented a technique,own_claim
by considering it as a proper non-linear problem,own_claim
The main advantage of this technique is its consistency with the current animation production practice and the ability to overcome the undesirable drawbacks of skeleton-driven skinning,own_claim
the technique reduces a level of complexity in the skinning and deformation,own_claim
we allow the animator to work conventionally,own_claim
and yet receive good results,own_claim
"we have successfully created a fusion, which maximizes the efficiency of surface deformation during animation",own_claim
"For an articulated character, we use no more than three weights for any skin point",own_claim
"for the majority of cases, there is only one weight, which is 1, to be is used",own_claim
the traditional smooth skinning technique that usually requires on average 3–5 weights,background_claim
our computation speed is faster,own_claim
spline handle tool provided by the animation package Maya,own_claim
One should not confuse the curve skeleton technique with the inverse kinematics,own_claim
the objective of the Maya IK spline handle tool is to control the joint positions using a spline,background_claim
Skin deformation is achieved using the traditional smooth skinning technique,background_claim
The Maya plug-in implementation of the curve skeleton technique has given satisfactory results,own_claim
"One of the main advantages of the curve skeleton skin deformation technique is that, the curve skeleton needs not necessarily be placed on the underlying joint skeleton",own_claim
"With a slight modification utilizing a linear mapping of curve points to the joint skeleton, the plug-in can make use of a displaced curve skeleton which would be useful for subtle deformation on anatomical areas like the armpits",own_claim
Our current implementation allows both skin and muscle deformation to be modeled within a unified framework,own_claim
we will further improve the skinning realism by adding the fat effect,own_claim
Fat usually deposits between the skin and the muscles,background_claim
Effective realism occurs when the skin actually slides over the fat,background_claim
8,data
Turner and Thalmann,background_claim
defines the fat layer as a thickness specified at each point on the skin surface and make use of reaction constraints to push the skin the required distance out from the underlying layers,background_claim
18,data
Yang and Zhang,background_claim
devises a fast method for simulating fat in which a fat bulge distribution function is described,background_claim
They have used a geometric method instead of resorting to a physical simulation method,background_claim
gives convincing results without the computational expense of physical simulation,background_claim
"With a small modification, the fat bulge effect can be made even in a curve skeleton-based skinning",own_claim
the skeleton is a curve,data
distribution and deformation can be linked with the tangent angle at a given number of curve points around the joints,own_claim
fat is largely incompressible,own_claim
"flesh between the adjacent bones will be squeezed, producing bulges immediately near the joint and at the sides",own_claim
a joint bends,data
Using curve tangents will provide for an accurate distribution in any given time frame,own_claim
the integrated results from the sample multiple curve points,own_claim
Free form deformation has been approached from several distinct perspectives,background_claim
32,data
12,data
17,data
good methods have been obtained both using the well known technique that bears this name,background_claim
"and other kinematic surface deformation techniques, and with physical models that simulate the time evolution of a membrane or solid",background_claim
The animation of human and creature skin deformation is arguably the most common and important application of free form deformation in computer graphics,background_claim
such creature animation can be considered a special case of general free form deformation,background_claim
its importance and difficulty have lead researchers to propose a number of domain-specific algorithms,background_claim
Section 2,data
The problem of realistic facial animation is being actively and successfully addressed by image-based and hybrid techniques,background_claim
These techniques are not yet suitable for all applications,background_claim
a purely image-based approach can achieve very realistic images,background_claim
this advantage may be lost,background_claim
one needs to introduce geometry and surface reflectance,data
Film and entertainment applications require fanciful creatures that fall outside the scope of image-based approaches,background_claim
human and creature animation have been obtained in the entertainment industry,background_claim
Some of the most impressive examples of geometry-based,background_claim
These efforts traditionally use shape interpolation for facial animation and a standard but variously-named algorithm that we will term skeleton subspace deformation,background_claim
for basic body deformation,background_claim
25,data
9,data
shape interpolation is well-liked by production animators,background_claim
it is not suitable for skeleton-driven deformation,background_claim
SSD produces characteristic defects and is notoriously difficult to control,background_claim
The algorithm should handle the general problem of skeletoninfluenced deformation rather than treating each area of anatomy as a special case,own_claim
New creature topologies should be accommodated without programming or considerable setup efforts,own_claim
"It should be possible to specify arbitrary desired deformations at arbitrary points in the parameter space, with smooth interpolation of the deformation between these points",own_claim
The system should allow direct manipulation of the desired deformations,own_claim
33,data
"The locality of deformation should be controllable, both spatially and in the skeleton’s configuration space",own_claim
we require that animators be able to visualize the interaction of a reasonably high-resolution model with an environment in real time,own_claim
we target a conventional animator-controlled work process rather than an approach based on automatic simulation,own_claim
Real time synthesis is also required for applications such as avatars and computer games,background_claim
Our solution,own_claim
provides a uniform and expressive approach to both facial skin deformation and skeleton-driven deformation,own_claim
It addresses the previously mentioned drawbacks of shape interpolation and SSD while retaining the simplicity and performance associated with these techniques,own_claim
The pose space deformation algorithm requires well behaved and efficient scattered data interpolation in high dimensional spaces,own_claim
Section 3,data
Recent research has delivered significant improvements in many areas of character animation,background_claim
surface representation,data
model capture,data
performance capture,data
hybrid,data
rendering approaches,data
Continuous deformation of a character skin was first addressed in Parke’s pioneering facial animation work,background_claim
26,data
control vertices were deformed by custom algorithmic implementation of carefully selected high-level parameters,background_claim
13,data
23,data
Komatsu,background_claim
and Magnenat-Thalmann et. al.,background_claim
demonstrated human body deformation driven by an underlying skeleton,background_claim
The region and shape of deformation is algorithmically defined in each of these approaches,background_claim
Magnenat-Thalmann et. al. developed algorithms for each of the various joints in the hand,background_claim
The discussion in Komatsu focuses on the elbow and shows how the skin crease on the acute side can be obtained by a suitable algorithmic manipulation of the surface control vertices,background_claim
The algorithms in this early work do not suffer the ‘collapsing elbow’ characteristic of the SSD algorithm,background_claim
the algorithms are specific to particular types of joints and are perhaps too simple to portray the complexity and individual variability of real anatomy,background_claim
The short film Tony de Peltrie,background_claim
3,data
popularized the use of shape interpolation for facial animation,background_claim
Forsey,background_claim
11,data
describes a characteroriented deformation scheme in which the bending of a smooth surface can be controlled by anchoring levels of a multi-resolution spline surface to the underlying skeleton,background_claim
These efforts are distinguished from the previous purely algorithmic approaches in giving the modeler control of and responsibility for the deformation,background_claim
The specification and animation of surface deformation remains an active area of investigation,background_claim
17,data
10,data
22,data
The Wires technique,background_claim
s one interesting recent contribution,background_claim
this approach is notable in providing a direct manipulation interface in a form immediately familiar to sculptors,background_claim
7,data
"Chadwick, Haumann, and Parent",background_claim
introduced a multi-layered and physically inspired approach to skin deformation,background_claim
In their model a free-form deformation abstractly represents underlying body tissues and mediates skin movement,background_claim
Chadwick et. al. demonstrated expressive three-dimensional cartoon characters,background_claim
deformation of a realistic character was not shown,background_claim
Other researchers have investigated modeling the underlying body tissues in greater depth,background_claim
27,data
24,data
8,data
35,data
"Most recently, several groups have undertaken ambitious efforts to produce anatomically inspired multi-layered models of animals and humans with considerable verisimilitude",background_claim
19,data
Nedel and Thalmann,background_claim
simulate the surface deformation of muscles using spring mesh dynamics,background_claim
a modeled skin cross section is reshaped by a ray-casting procedure that finds the maximum displacement of the underlying tissue,background_claim
Several papers by Wilhelms and coworkers have shown anatomically representative human and animal models,background_claim
36,data
In Wilhelms and Van Gelder,background_claim
several classes of muscles are algorithmically modeled with attention to volume conservation,background_claim
skin is a spring mesh anchored to underlying tissue or bone in appropriate areas,background_claim
Scheepers et. al.,background_claim
31,data
produced convincing representations of muscles as well as preliminary but promising skin deformation,background_claim
In recent years character animation has moved beyond being a research topic and sophisticated deforming characters routinely appear in films and on television,background_claim
Various techniques are employed,background_claim
manually animated FFDs,data
custom procedural approaches,data
26,data
23,data
13,data
Arguably the most common practice in character animation,background_claim
is founded on the twin techniques of shape interpolation and SSD,background_claim
18,data
9,data
Shape interpolation,background_claim
is probably the most widely used approach to skin deformation for facial animation,background_claim
3,data
18,data
9,data
Surface control vertices are simply an animated linear combination,background_claim
of the corresponding vertices on a number of key shapes S k : k=0 w k S k,background_claim
"A variation of this technique uses a single base shape S 0 and a number of delta shapes, S 0 + k=1 w k (S k − S 0 )",background_claim
By writing the delta shape form as (1 − 1 w k )S 0 + 1 w k S k it is clear that the space of achievable shapes is identical in both variations,background_claim
1,data
An attractive feature of shape interpolation is that the desired expressions can be directly specified by sculpting,background_claim
it would be desirable to employ it on regions of the body other than the face,background_claim
the popularity and effectiveness of this simple approach,data
The blending of rigid shapes is inconsistent with regions of the body that are bending under the action of an underlying skeleton,background_claim
the key shapes could be deformed to the moving articulated figure using some other algorithm,background_claim
this defeats the purpose of proposing shape interpolation as the means of obtaining the deformation in question,background_claim
Shape interpolation also has some drawbacks for its intended role of facial animation,background_claim
the interpolation is not always smooth,background_claim
Consider interpolating from a smile,data
to a neutral pose,data
and then to a frown,data
In practice animators object to the linear nature of the interpolation,background_claim
34,data
and have sometimes compensated by sculpting new key shapes as often as every three to five frames,background_claim
38,data
This simple algorithm has been repeatedly conceived and appears in commercial software packages under several rather uninformative names,background_claim
skinning,data
enveloping,data
The algorithm is unpublished,background_claim
is subsumed by more general published schemes,background_claim
23,data
The position of a control vertex p on the deforming surface of an articulated object lies in the subspace defined by the rigid transformations of that point by some number of relevant skeletal coordinate frames,background_claim
Figure 1,data
This may be notated           p = w k L k (p) p,background_claim
SSD is fairly versatile,background_claim
secondary animation effects,background_claim
can be achieved by variably weighting the surface to an abstract “bone” whose translation or scale is manually animated,background_claim
muscle bulging,data
swelling of the chest,data
The first major shortcoming of SSD results directly from the fact that the deformation is restricted to the indicated subspace,background_claim
In common situations such as shoulders and elbows the desired deformation does not lie in this subspace,background_claim
no amount of adjusting the algorithm weights will produce good results,background_claim
This fact leads to considerable frustration by users of the algorithm,background_claim
"the character of the deformation changes as the weights are changed, sometimes sustaining the incorrect assumption that some combination of weights will produce good results",background_claim
the SSD algorithm can be easily identified in animations by its characteristic ‘collapsing joint’ defect,background_claim
"Figures 1, 2",data
This problem is extreme in the case of simulating the twist of a human forearm,background_claim
Figure 3,data
A second difficulty with SSD is that,background_claim
it does not permit direct manipulation,background_claim
artists instead directly or indirectly edit the meshes of weights w k,background_claim
SSD algorithms consequently have the reputation for being tedious and difficult to control,background_claim
"Artists with a poor understanding of the underlying algorithm have difficulty distinguishing between results that can be further improved by adjusting weights and results that cannot be improved since the desired result lies outside the achievable subspace, resulting in the impression of unpredictability",background_claim
In some cases the SSD defects can be manually corrected using FFDs and other techniques,background_claim
one could consider a scheme whereby these fixes are procedurally invoked as the skeleton articulates,background_claim
FFDs work well,background_claim
the layered FFDs do not reduce the difficulty in adjusting the underlying SSD,background_claim
The algorithm introduced in the subsequent sections removes the need for such layered fix-it approaches and permits direct specification of the desired deformations,own_claim
Several published algorithms and commercial packages combine aspects of skeleton-driven deformation and shape interpolation in ways that anticipate our approach,background_claim
"In the pioneering work of Burtnyk and Wein, two dimensional characters were animated using a polygonal rubber sheet that afforded both skeletal and local deformation control",background_claim
6,data
Van Overveld described a two-dimensional animation system in which animation is controlled by a skeleton and character deformation is driven from this skeleton through a scattered interpolation,background_claim
20,data
This work is similar in spirit to ours,own_claim
differs in that it used the image plane as a global interpolation domain rather than introducing a pose space,own_claim
Litwinowicz and Williams’s system,background_claim
16,data
is also a precedent and introduced sophisticated scattered interpolation,background_claim
Several papers consider animation,background_claim
as a special case of neural net learning and interpolation/extrapolation,background_claim
14,data
15,data
21,data
this viewpoint is valid,background_claim
in practice it is perhaps excessively general,background_claim
a skeleton is merely learned rather than being an intrinsic part of the model,background_claim
While employed at Industrial Light and Magic the first author of the present paper developed a system that attempted to blend shape interpolation and SSD algorithms,background_claim
a small portion of it remains in use in their well known Caricature animation system,background_claim
Drawbacks of this work included both a complicated dependence on the details of SSD and its overall conception as a “correction” to SSD,background_claim
Some commercial packages allow blending between two sculpted deformations as a function of a single-joint rotation,background_claim
combining shape interpolation and skeleton-driven deformation in a limited but useful setting,background_claim
The depth of simulation is a prevalent issue in computer graphics,background_claim
one that is not always consciously considered,background_claim
Early approaches to animation were purely kinematic,background_claim
an emphasis on physically based modeling appeared in the literature later,background_claim
Recent sophisticated approaches allow a hybrid of animator-controlled and physically governed animation as needed,background_claim
In rendering we perhaps see the opposite trend,background_claim
much of the literature a decade ago focused on ever deeper simulations of reality,background_claim
‘shallower’ imagebased approaches are attracting attention at present,background_claim
in character deformation both deep and shallow approaches have their place,background_claim
Deep models promise universally accurate simulation,background_claim
the importance of representing humans justifies the needed effort,background_claim
The authors of these approaches acknowledge that producing anatomically plausible models is a daunting task,background_claim
"Pose space deformation is a shallow, purely kinematic approach to deformation",background_claim
and it has consequent disadvantages,background_claim
accuracy is reliant on the modeler/animator rather than being guaranteed by the simulation,background_claim
"our algorithm has clear advantages with respect to simplicity and generality, direct manipulation, real-time synthesis, and other criteria listed in the introduction",own_claim
A scattered data interpolation method is required,own_claim
deformations will be sculpted at arbitrary,own_claim
poses,own_claim
this interpolation is central to our application,own_claim
the results of the interpolation will be directly visible in the animating deformation,own_claim
we will consider the available scattered interpolation approaches before settling on a candidate,own_claim
1,data
2,data
Shepard’s method,background_claim
is a frequently employed scattered data interpolation scheme in computer graphics,background_claim
this simple scheme has some potentially undesirable properties,background_claim
A serious drawback for some applications is that the derivative of the surface is zero at the data points,background_claim
Figure 4,data
"Far from the data the weights will be approximately the same, d(∞) ˆ = w ∞ d k /w ∞ 1 = d k /N",background_claim
the interpolated surface converges to the average of the data values,background_claim
Radial basis functions,background_claim
28,data
29,data
have become a popular choice for scattered interpolation,background_claim
N values of d are available,data
the weights can be easily solved by a linear system,background_claim
this can be derived either by least squares fit or by subspace projection,background_claim
A least squares approach leads to the identical result,background_claim
Any nonlinear function φ() will interpolate the data,background_claim
a smooth φ() will result in a smooth interpolant,background_claim
radial basis functions have a universal convergence property similar to Fourier series,background_claim
the convergence definition is different,background_claim
Φ T Φw = Φ T d can be solved for the familiar w = (Φ T Φ) −1 Φ T d,background_claim
The best approximation to d in the space spanned by φ k () occurs,background_claim
when the weights are such that the error d − Φw,background_claim
is orthogonal to each of the φ k (): Φ T (Φw − d) = 0,background_claim
the columns of Φ are independent,data
Surfaces can,background_claim
be interpolated by allowing different combinations of the same basis functions in different dimensions,background_claim
The distance can be generalized to Mahalanobis distance,background_claim
4,data
Various visual reconstruction schemes can be adapted for scattered data interpolation,background_claim
With small λ many of these schemes can serve as scattered data interpolants,background_claim
5,data
is a good introduction to these approaches,background_claim
In some of the most powerful formulations of scattered interpolation the regularizer is considered to hold everywhere except at an unknown set of edges,background_claim
this is the piecewise-smooth prior desirable in image reconstruction,background_claim
the unknown edges may exist,background_claim
at any location in the domain,background_claim
all combinations of possible edge locations must be considered,background_claim
the interpolation cost is prima facie exponential in the surface resolution,background_claim
The crux of our approach is the identification of an appropriate space for defining deformations,own_claim
"the interpolation domain is (a subset of) the pose space of an articulated character, or equivalently the space defined by some set of parameters",own_claim
In concept the range of the interpolation function could simply be the desired movement of the surface control vertices,own_claim
the deforming surface is defined by p + δ,own_claim
we instead interpolate the desired deviation of a surface vertex,own_claim
from its initially computed position,own_claim
Our scheme can be bootstrapped on top of an existing software system,own_claim
the model is posed as desired and the desired surface at that pose is sculpted,own_claim
it would be desirable to allow deformations to change both continuously and discontinuously with respect to the pose space,own_claim
creature deformations that are discontinuous with respect to pose seem unlikely,own_claim
the expensive energy functional and non-convex schemes are not necessary,own_claim
Together these comments support φ k (x) = exp( −( x−x 2σ 2 k ) 2 ) as one possible choice of radial basis,own_claim
the width of this falloff should be selectable,own_claim
Figure 5,data
Gaussian radial basis functions are reputed to be well behaved,background_claim
Gaussian radial basis functions with adjustable placement and σ are discussed in the neural net literature,background_claim
optimizing over these parameters is possible,background_claim
This issue does not arise in our application,own_claim
the animator decides where in the parameter space to sculpt a pose,own_claim
a 3(n − 1) pose space is defined,own_claim
n = 2 pose controls are active,data
each has three degrees of freedom,data
the particular position of the controls defines a point in that space,own_claim
Any control vertices that have moved from their rest position are found,own_claim
it is necessary to solve the interpolation problem,own_claim
several such deformations have been saved,data
For each control vertex that was moved during sculpting there are now one or more δ values at points in the pose space,own_claim
the dimension of the pose space can vary across vertices,own_claim
a particular vertex might be modified in three sculpted deformations but a neighboring vertex might have been modified in only two deformations,data
The interpolation is done independently for each control vertex,own_claim
this has not been problematic,own_claim
using patch surfaces,data
in practice this has turned out to be the result of saving new deformations without moving any pose controls rather than a result of actual numerical problems,own_claim
Singular Φ T Φ is interpreted as a user error,own_claim
For each deforming control vertex a δ is interpolated from the delta values at the stored poses using Eq. (1),own_claim
At this point the model interpolates through the previously defined deformation(s),own_claim
The most recently defined deformation may extend too far (or not far enough) in pose space,own_claim
There is a rich literature of schemes for optimizing radial basis parameters including σ,background_claim
4,data
animators consider detailed control of the animation to be part of their craft and are quite happy to have interpolation parameters exposed to them,background_claim
this potentially abstract parameter is comprehensible,own_claim
it is possible to explore the effect of different values,data
At a minimum axis-aligned scaling of the falloff should be available,own_claim
Based on the evaluation the artist may decide to sculpt additional poses as needed to achieve the desired motion,own_claim
the associated pose space is determined,own_claim
a deformed vertex is found,data
there are previous deformations of this vertex in the same pose space,data
the new deformation is simply another point to interpolate,own_claim
The new deformation’s pose space may,own_claim
be different from the previous spaces associated with the vertex,own_claim
a new pose space is started,own_claim
the δ is computed as a delta from the previous layered PSD synthesis rather than from the base model,own_claim
This ensures that the previous deformations are interpolated while allowing the artist complete freedom in determining the extent of the deformation and the associated pose controls,own_claim
there is an issue of commutativity,own_claim
artists consider this iterative layered refinement to be a natural process,own_claim
This is a well known issue,background_claim
well behaved transformations are fundamental and are hopefully addressed early in the development of any character animation system,own_claim
With n poses three matrices of size n must be inverted for each surface control vertex,own_claim
Typically n will be between 1 and 10,own_claim
this cost is small,own_claim
it is incurred at a convenient time,own_claim
during setup,data
The cost of Eq. (1) is then not much greater than the cost of traditional shape interpolation,own_claim
"For synthesis, the basis function φ(x) can be implemented by interpolated table lookup",own_claim
the sqrt required in the Euclidean distance can be composed with φ(x) in the table,own_claim
real time synthesis is possible with significant models on current machines,own_claim
"An articulated model such as a human will typically have a number of different deformation subspaces, each with one or several deformations",own_claim
the deformations in different subspaces may overlap spatially,own_claim
The neck/chest/leg blend area of many quadrupeds is a more complex case,own_claim
the motion of the skin surface in these regions may depend on the relative configuration of several leg bones as well as the rib cage and possibly the neck region of the spine,own_claim
PSD handles all these cases simply and uniformly,own_claim
The application of PSD to facial animation is best described by comparison with shape interpolation,own_claim
In both approaches a set of key shapes (or delta shapes) are sculpted,own_claim
The same set of shapes can be used in both approaches,own_claim
shape interpolation is,background_claim
a superposition of a set of shapes,background_claim
PSD interpolates among these shapes,own_claim
The animator’s task in PSD is to choose the interpolation path,own_claim
With SI the animator’s task is to choose the interpolation path but also solve the problem of representing this path by using a set of (non-orthogonal!) basis shapes,background_claim
In practice this has been considered the major difficulty in applying SI,background_claim
high quality animation demands large numbers of basis shapes,data
38,data
In shape interpolation the key shapes and the animation parameter space are one and the same,background_claim
the keys define the axes of the animation parameter space,background_claim
In PSD the key shapes are positioned as desired in a space of desired dimensionality,own_claim
"One can assign each shape in PSD to a separate dimension, exactly as with SI",own_claim
PSD allows one to sculpt intermediate expressions,own_claim
and situate them half-way along the relevant,own_claim
axis,own_claim
a sculpted pose that represents the simultaneous activation of several parameters,own_claim
can simply be saved at the appropriate location in the pose space,own_claim
happy but surprised,data
smiling with a wink,data
Psychological research has shown that human facial expressions are largely described by two “emotional” axes,background_claim
30,data
Figure 6,data
this two-dimensional space would be a convenient high-level pose space for controlling facial animation,own_claim
The PSD interpolation is smooth,own_claim
so desired,data
a PSD path from neutral to half-smile to full-smile is monotonic,own_claim
Figure 7,data
the motion of a surface point over this interpolation is also smooth,own_claim
To interpolate these emotions using SI requires a zig-zag pattern of weights,background_claim
"the half-smile weight goes from zero to one, and then back to zero as the full-smile weight goes from zero to one",background_claim
The motion of a surface point would also be piecewise linear using SI in this scenario,background_claim
Additional “dimensions” of deformation can be added at any time by adding a new parameter and associating additional poses with the movement of this parameter,own_claim
a limb can be modeled in a particular pose both in an unloaded state and with muscles sculpted to express carrying a heavy load,own_claim
this would of course require a significant set of additional deformation poses,own_claim
one can imagine setting up a dial that causes the character to morph,own_claim
The ‘heavy’ pose can be associated with the ‘on’ state of an abstract parameter,own_claim
light and heavy loads can then be controlled by flipping this switch,own_claim
Pose space deformation is not the last word in surface deformation for character animation,own_claim
high quality anatomically based models are certainly preferable,own_claim
both anatomically based and purely kinematic models have their place,background_claim
In the current computer animation culture animators generally practice their craft by direct and exhaustive specification of the desired motion combined with quick evaluation using real-time playback,background_claim
Deeper simulation approaches intrinsically take away some of this control,background_claim
animators often argue,background_claim
that automated processes are inferior or will not produce a human feel,background_claim
The performance of current anatomically based models prohibits animation preview and other real-time applications,background_claim
"the effort needed to produce an anatomically accurate model is not always justified, nor even appropriate",background_claim
the model is of a fanciful creature whose surface appearance may be inconsistent with any plausible internal anatomy in any case,data
PSD unifies and improves upon two techniques that have been common graphics practice for more than a decade,own_claim
This relatively simple algorithm uniformly handles a variety of deformation situations,own_claim
The setup cost of the algorithm is insignificant,own_claim
the synthesis cost is only slightly more than that of shape interpolation,own_claim
real-time synthesis is possible at effective resolutions on current hardware,own_claim
this algorithm will be a useful complement to current techniques,own_claim
Significant work has occurred in graphics for deforming articulated characters using geometric methods,background_claim
Magnenat-Thalmann et al. 1988,data
Singh and Kokkevis 2000,data
Lewis et al. 2000,data
and physicallybased methods,background_claim
Wilhelms and van Gelder 1997,data
Scheepers et al. 1997,data
Gourret et al. 1989,data
most character animation in interactive applications,background_claim
is based on a geometric skeletal deformation technique,background_claim
in which vertex locations are weighted averages of points in several coordinate frames,background_claim
linear blending,data
matrix palette skinning,data
Skeletal-Subspace Deformation,data
Magnenat-Thalmann et al. 1988,data
Magnenat-Thalmann and Thalmann 1991,data
"One alternative is to store a large database of character poses, and interpolate between them",background_claim
Maestri 1999,data
these approaches give animators great control over character deformation,background_claim
"they have the disadvantage of requiring a potentially very large number of poses for animation, and also lack an underlying kinematic model",background_claim
such approaches are common,background_claim
Parke et al. 1996,data
"A hybrid approach which effectively combines SSD and morphing, is the work of Lewis et al. who introduced “Pose Space Deformations”",background_claim
Lewis et al. 2000,data
to overcome the limitations of linear transform blending while retaining a kinematic approach,background_claim
"this is a big improvement over character morphing, and sufficiently interactive for animators",background_claim
storing surface displacements for each pose in a large pose space is a memory inefficient approach for hardware applications,background_claim
providing a kinematic deformation model which also has artist-drawn poses,background_claim
"At run time, the character may be simulated by mapping interpolated displacements onto the underlying SSD character model",background_claim
Sloan et al. show a more efficient method of interpolating an articulated figure using example shapes scattered in an abstract space,background_claim
Sloan et al. 2001,data
interpolation occurs in the rest pose before SSD is applied,background_claim
the interpolation involves blending over all of the example shapes for every vertex,background_claim
the independence of abstract space dimensions is not taken into account,background_claim
This becomes inefficient and difficult to map to hardware with the large number of examples required for a highly articulated figure,background_claim
we also wish to efficiently render deformation behaviour computed using physically-based and reality-based deformable models,own_claim
Such models have been widely used,background_claim
Terzopoulos and Fleischer 1988,data
Terzopoulos and Witkin 1988,data
Metaxas and Terzopoulos 1992,data
CaniGascuel 1998,data
O’Brien and Hodgins 1999,data
Pai et al. 2001,data
Allen et al. 2002,data
most approaches are not intended for real time (hardware) rendering,background_claim
"Recently, approaches for fast simulation of physical dynamic volumetric deformations have appeared",background_claim
Zhuang and Canny 1999,data
Debunne et al. 2001,data
Picinbono et al. 2001,data
for interactive applications,background_claim
"quasi-static deformation, for which fast deformation techniques also exist",background_claim
Cotin et al. 1999,data
James and Pai 1999,data
are unfortunately restricted to small deformations,background_claim
James and Pai 2002b,data
More closely related to character animation is anatomically based modeling of physical deformable models,background_claim
Wilhelms and van Gelder 1997,data
examples include musculature,background_claim
Chen and Zeltzer 1992,data
Scheepers et al. 1997,data
and faces,background_claim
Lee et al. 1995,data
pose-space parameterization of nonhysteretic cloth on articulated characters has recently been considered,background_claim
a large class of pose-dependent quasi-static deformations can be described using the EigenSkin approach,own_claim
Herman 2001,data
and could be optimized for hardware rendering using the techniques presented herein,background_claim
"the use of reduced eigenbasis representations for highdimensional models has a long history in science, with foundations on Principal Component Analysis and Karhunen-Loeve theory",background_claim
Jolliffe 1986,data
Hyvarinen et al. 2001,data
Related deformation topics include a morphable model for face synthesis,background_claim
Blanz and Vetter 1999,data
modal analysis for dynamic vibrations,background_claim
Pentland and Williams July 1989,data
James and Pai 2002a,data
decomposition of static deformations,background_claim
Bookstein 1989,data
and recognition applications in computer vision,background_claim
Turk and Pentland 1991,data
"We introduce a method for extending SSD that enhances its range of modeling capabilities at very little cost, and in a manner optimized for real time graphics hardware",own_claim
"EigenSkin constitutes an error-optimal set of eigenbases for approximating the original deformation model, for a given amount of per-vertex displacement memory",own_claim
at interactive rates on a PC with negligible cost to the main CPU,own_claim
We illustrate our method by rendering a very large finite element model,own_claim
"Using commodity graphics hardware, EigenSkin enables the simulation of subtle nonlinear surface deformations of geometrically complex models at little more than the cost of rendering",own_claim
Rendering of complex physical deformation models for character animation remains a significant hurdle for interactive applications,background_claim
one that has been largely overcome for off-line animation,background_claim
is done using a very common linear transform blending technique called,background_claim
Skeletal-Subspace Deformation,background_claim
"Currently, most real time character animation",background_claim
Magnenat-Thalmann et al. 1988,data
"It is extremely popular for its simplicity and plausibility, and is also widely supported by graphics hardware accelerators",background_claim
it is also widely known to suffer from several key problems,background_claim
buckling of skin near joints,background_claim
in extreme poses,background_claim
poor behaviour near more complicated joints,background_claim
restrictions on the range of deformations that can be easily modeled and displayed for various character poses,background_claim
methods have been proposed to address this and have been effectively employed by the motion picture industry,background_claim
Lewis et al. 2000,data
nearly all video game character animation is still done using traditional SSD,background_claim
memory and graphics hardware constraints,data
"we present a practical technique which overcomes all aforementioned SSD problems, and can be achieved using a memory-efficient linear correction to the traditional SSD method",own_claim
The resulting EigenSkin construct allows subtle character deformations for skin and clothing,own_claim
those derived from highly realistic artist-drawn poses,data
measurements from the real world,data
laboriously computed anatomically and physically-based models,data
The deformations can be compactly represented in an efficient datadependent basis and rendered in real time using vertex shaders in commodity graphics hardware,own_claim
Lindholm et al. 2001,data
we do not simply use PCA on the displacement field defined over the entire surface,own_claim
this would lead to a large number of important basis functions and be inefficient for hardware rendering,own_claim
we use Principal Component Analysis (PCA) to construct an error-optimal eigendisplacement basis for representing this potentially large set of pose corrections,own_claim
we decompose the model into locally supported domains learned from the influence of individual joints on the displacement fields,own_claim
Section 2.2,data
"The resulting memory sensitive set of locally supported eigendisplacement basis functions constitutes the EigenSkin approximation, and is well suited to rendering in graphics hardware",own_claim
the process is shown for displacements,own_claim
it applies similarly to the construction of linear normal corrections,own_claim
allowing EigenSkin to correct SSD for both shape and shading,own_claim
the position of the i th vertex after SSD is,own_claim
v  ̃ i = ∑ b∈B i w ib T b v i,own_claim
bone transforms {T b } b∈B,data
For a given skeletal configuration,own_claim
Starting with a reasonable set of bone weights is important,own_claim
the added displacements only correct the SSD predicted mesh shape near observed configurations,own_claim
This yields reasonable bone weights which change smoothly over the mesh,own_claim
We compute our SSD bone weights as a function of vertex bone distances in the neutral pose,own_claim
Filtering may be required to force each bone’s weights to zero at the edges of its influence to prevent discontinuities,own_claim
the weights can be computed to optimize the quality of the EigenSkin correction,own_claim
The differences between the SSD vertex positions and the observed pose positions mapped back into the rest pose yield displacements,own_claim
Figure 2,data
The observed mesh shapes result when these displacements are added to the rest pose before applying the bone weighted transformation,own_claim
the deformations vary smoothly over pose space,data
then interpolated displacements provide a good approximation of deformations at configurations between observations,own_claim
we exploit the observation that localized changes to the configuration of an articulated character often result in local deformations,own_claim
"This independence occurs in most articulated characters, and certainly exists in realistic human hands",own_claim
Bending a single joint in one finger,own_claim
does not cause noticeable deformations in the other fingers,own_claim
bending one finger of our finite element hand model does not cause noticeable deformations in the others,own_claim
Figure 4,data
the finite element model deformations resulting from a change to a single joint are global,own_claim
the displacement magnitudes are imperceptible at vertices that are far from the joint,own_claim
the joint supports depend on the SSD weights and in general they do not correspond to the sets of vertices influenced by bone transforms,own_claim
memory constraints also play a large part,own_claim
we consider only single joint perturbations,own_claim
the high dimensionality of our hand model’s configuration space,own_claim
we can still approximate linear coupling effects,own_claim
we let the joint supports overlap,own_claim
the pose displacements computed for independently perturbed joints may be used as a basis for describing displacements of new configurations,own_claim
significant redundancy exists in the pose displacements,own_claim
skin bulging in similar directions,data
Principal Component Analysis (PCA) of joint support displacements yields an orthogonal displacement basis,own_claim
"adding successive corrections with the eigendisplacement basis provides approximations which are better in a formal, least squares, sense",own_claim
Golub and van Loan 1996,data
Computing principal components with the Euclidean norm is equivalent to computing the singular value decomposition,own_claim
it is equivalent to eigenanalysis,own_claim
a square symmetric matrix,data
the matrix V j and the singular values combine to gives the coordinates of our observed displacements in the eigendisplacement basis,own_claim
At this point we can truncate each eigendisplacement basis expansion knowing that the error will be minimized in the least squares sense,own_claim
The hardware limits the size of each truncated basis set,own_claim
there is a limited amount of per vertex data memory in which we can send the eigendisplacements to the EigenSkin vertex program,own_claim
Section 2.5,data
Equation 2 provides a powerful model for shape deformation,own_claim
James and Pai 2002a,data
its shape should interpolate the observed poses,own_claim
an articulated character moves between observed configurations,data
"For the truncated set of eigendisplacements at each support, we need the coordinates in the truncated basis which give displacements closest to the observed displacements",own_claim
we want to solve for α p in n j u i p = ∑ ∑ α jk p u ˆ i jk . j∈J i k=1,own_claim
This is an over constrained linear system which we can solve using least squares to get the best fit to our observed displacements,own_claim
"the least squares solution for any number of eigendisplacements, n j , is available from the singular value decomposition computed in Section 2.3",own_claim
column p of D j V T j contains α jk p for k = 1..|P j |,own_claim
joint support j,data
Radial basis functions,background_claim
"are a common choice for interpolating scattered data, and have been used by Lewis et al.",background_claim
Powell 1987,data
Lewis et al. 2000,data
for pose space deformation and by Sloan et al.,background_claim
Sloan et al. 2001,data
for shape interpolation with articulated figures,background_claim
Our interpolation is one dimensional,own_claim
all our observations involved perturbations of individual joints,own_claim
we could use a simpler interpolant,own_claim
we also choose RBFs,own_claim
they extend easily to the higher dimensional domains needed to let EigenSkin capture nonlinear multi-joint coupling effects,own_claim
the α jk only depend on the distance of joint j from its settings in poses P j,own_claim
our one dimensional case,data
"we can easily compute the distance, r, by comparing the joint angles directly",own_claim
revolute joints,data
joints with more than one rotational degree of freedom,data
we compute distance as the angle in the axis-angle representation of the joint’s rotation matrix,own_claim
we would interpolate using fewer interpolation basis functions ( φ ) than observations,own_claim
a large number of observed joint perturbations per support,data
we only have approximately half a dozen pose perturbations for each joint degree of freedom,own_claim
our hand model,data
This justifies our use of interpolation basis functions,own_claim
the total cost of constructing and evaluating the RBF interpolant for half a dozen poses is negligible,own_claim
P j does not contain two observations with identical joint settings,data
The system of equations,own_claim
"is square, and invertible",own_claim
Modern vertex programming hardware,background_claim
Lindholm et al. 2001,data
is ideally suited to performing the per-vertex weighted linear superposition of eigendisplacements,background_claim
performed prior to the SSD weighted transformation,background_claim
"Depending on the number of eigendisplacements used, the weighted eigendisplacement vector accumulations are about as costly as the weighted transform matrix-vector multiplyaccumulate operations",background_claim
Current vertex programs limit per vertex data to 16 4-tuples of floats,background_claim
we impose a limit of 10 eigendisplacements per vertex,own_claim
"which still leaves room for texture coordinates after specifying the vertex position, normal, colour, and bone weights",own_claim
this limit is not hard,own_claim
careful choices and packing of per vertex data permit more than 10 of the 16 available tuples to be allocated for EigenSkin data,own_claim
a vertex is in many supports,data
the number of eigendisplacements renderable by current hardware may be too severely restricted,own_claim
it is useful to smoothly mask the support groups to smaller regions,own_claim
otherwise fewer eigendisplacements must be used,own_claim
we have constructed a finite element model of the human hand,own_claim
Figure 6,data
which exhibits subtle nonlinear skin deformations,own_claim
The surface skin model and matching skeleton are based on Loop subdivision,own_claim
Loop 1987,data
of a hand mesh exported from Curious Labs Poser,own_claim
"A finite element mesh containing 11,171 high-order 10-node tetrahedral elements was generated using NETGEN",own_claim
Schoberl 1997,data
"The hand was moved into various poses by applying position constraints to vertices adjacent to the rigid bones, and computing the resulting tissue deformation using geometrically nonlinear static finite element analyses",own_claim
Zienkiewicz 1977,data
with (a modified version of) the CalculiX program,own_claim
"The model was not intended to reproduce detailed skin wrinkling effects, and lacks anatomical details",own_claim
tendons,data
blood vessels,data
skin layers,data
the model reasonably describes bulk tissue deformations and was sufficient to illustrate our method,own_claim
the eigendisplacement approximations of the hand model produce a clear improvement over the traditional SSD algorithm,own_claim
Figure 7,data
the EigenSkin approximation is essentially indistinguishable from the original FEM model,own_claim
our unoptimized implementation renders the EigenSkinned hand model only slightly slower than the traditional SSD model,own_claim
the EigenSkin method is an effective tool for character skinning,own_claim
compressed hardware renderable approximations are required for an articulated character’s nonlinear quasi-static deformations,data
"EigenSkin works best when SSD corrections are localized, providing independence between different parts of the mesh, and are stable",own_claim
allowing accurate and efficient interpolation,own_claim
very practical results can be obtained in which only one or two eigendisplacements per joint produce a visually dramatic improvement over commonplace Skeletal-Subspace Deformation,own_claim
there are several limitations to the method which are topics of current research,own_claim
an alternate approach involves optimizing bone weights to allow better EigenSkin approximations of the displacements and normals,own_claim
good eigendisplacement bases can often be constructed using displacements resulting from single joint motions,own_claim
in practice it is desirable to allow general pose sets and to recover nonlinear joint-joint coupling phenomena,own_claim
Skinning is an important part of realistic articulated body animation and is an important topic of computer graphics and animation,background_claim
"skinning can be categorized into algorithmic, physically-based, and example-based methods",background_claim
simple algorithmic skinning schemes cannot capture the complexity and subtlety of real skin deformation,background_claim
widely used,background_claim
revised approaches will be required to increase character animation realism,background_claim
Physically-based skinning is based on the biomechanics of skin deformation arising from the motions of muscles and tendons,background_claim
this approach can generate physically accurate simulations of each layer,background_claim
it is not at present suitable for real time applications,background_claim
the large computation required,background_claim
Example-based methods capture some of the complexity of real skin deformation by interpolating scanned or sculpted examples of the desired skin shape in various poses,background_claim
this requires gathering a sufficient number of samples and some pre-calculation,background_claim
example-based methods can potentially be used in real-time applications,background_claim
their relatively simple real-time computation,background_claim
Weighted pose space deformation,background_claim
is an example based skinning method that generates high quality skinning with a limited number of sample poses,background_claim
KM04,data
it can generate an accurate skinning,background_claim
it requires more computation than the original pose space deformation,background_claim
LCF00,data
joint distances are computed independently for each vertex,background_claim
this method has not been suitable for real-time applications,background_claim
both WPSD and SSD require joint weights for each vertex,background_claim
accurate joint weights are required to achieve good results,background_claim
the weights are usually manually generated by artists,background_claim
requires effort and great skill,background_claim
a complex skeletal system,data
we present a parallel WPSD algorithm,own_claim
suitable for SIMD architectures,own_claim
  weights for each vertex are automatically computed from the sample poses,own_claim
This can enhance the skinning quality not only of SSD but also WPSD,own_claim
both methods require accurate joint weight values,background_claim
The deformation required in WPSD and SSD is independent for each vertex,background_claim
this per-vertex computation can be parallelized in a SIMD architecture,background_claim
"we can speed up SSD, PSD, as well as WPSD to around 20 times faster than on the CPU",own_claim
from 1.2FPS to 25FPS speed-up of WPSD on a detailed model having 22836 triangles with 11574 vertices,data
using a modern graphics card,own_claim
making WPSD a feasible real-time skinning solution for various applications,own_claim
games,data
virtual reality,data
other real-time simulations,data
"Many commercial software packages generate skin deformation arising from joint movement using a method known as (linear blend) skinning, Skeletal Subspace Deformation (SSD), enveloping",background_claim
based in part on work published by Thalmann et al,background_claim
MTLT88,data
SSD is based on the weighted blending of affine transformations of each joint,background_claim
used in many real-time applications,background_claim
its simple and fast computation,background_claim
it also exhibits some well known artifacts,background_claim
skin that collapses around the joints at increasing bend angles,data
a variety of solutions for these problems have been published,background_claim
Web00,data
WP02,data
MTG03,data
KZ05,data
"Recently, example-based methods",background_claim
have permitted more complex skinning effects,background_claim
LCF00,data
SRC01,data
ACP02,data
KJP02,data
KM04,data
muscle bulges,data
major wrinkles,data
while also addressing the artifacts of simple algorithmic schemes,background_claim
the amount of memory for these methods grows with the number of training samples,background_claim
arbitrary distributions can be approximated,background_claim
Some of the most impressive example-based results to date are those of Kurihara and Miyata’s hand model derived from medical images,background_claim
KM04,data
acquiring 3D medical images is relatively expensive,background_claim
they developed weighted pose space deformation,background_claim
to generate proper skinning from a limited number of pose samples,background_claim
They modify the distance between poses using the joint weights of each vertex to provide a more appropriate distance measure for skinning,background_claim
the joint weights for each vertex are important data for SSD and WPSD calculations,background_claim
they have traditionally been manually generated by skilled artists,background_claim
Least-squares based vertex weight estimation was shown in the skinning methods,background_claim
WP02,data
MTG03,data
James et al. describe mesh based skinning including estimation of bone parameters and vertex weights for each bone,background_claim
JT05,data
"In their paper, the vertex weights of each joint are calculated by NNLS",background_claim
we derive a similar approach to calculate weights for SSD and WPSD,own_claim
the performance of GPUs has been improving more rapidly than that of CPUs,background_claim
GPUs have many processing units serving as a SIMD parallel architecture,background_claim
many algorithms have been accelerated by GPU programming,background_claim
LHK ∗ 04,data
PF05,data
GPG,data
Deformation and skinning algorithms can also be enhanced by GPUs,background_claim
JP02,data
KJP02,data
BK05,data
JT05,data
vertex information cannot be accessed in the fragment program,background_claim
GPU-based vertex deformation is usually performed by vertex programs,background_claim
in previous research,background_claim
we develop a parallel WPSD method using the fragment processors to gain greater parallelism and performance,own_claim
Person-specific data modeling and its deformation is also an interesting topic in realistic articulated body simulation,background_claim
Rhee et al. described human hand modeling from surface anatomy of the person,background_claim
RNL06,data
"Anguelov et al. developed shape completion and animation of people, derived from the set of range scan data and example based deformation in pose and shape space",background_claim
ASK ∗ 05,data
Physically inspired skinning should be also recognized as another important area of articulated body animation,background_claim
AHS03,data
CBC ∗ 05,data
PCLS05,data
SNF05,data
Example-based skinning problems can be described by the following general equation,background_claim
v(p a ) = S(v 0 + D(p a )),background_claim
In skeletal subspace deformation the displacement D(p a ) is omitted and the target surface is calculated by SSD as a blend of affine transforms of v 0,background_claim
section 3.1,data
"Skinning methods related to PSD use the displacement of an arbitrary pose D(p a ), calculated by interpolation in pose space",background_claim
section 3.2,data
SSD,background_claim
MTLT88,data
is based on the weighted blending of an affine transformation of each joint by equation,background_claim
n joint v a = S(v 0 ) = ( ∑ w j T j )v 0 j=1,background_claim
usually ∑ n j=1 joint (w j ) = 1.0,background_claim
The weight w j can be assigned by the artist to control deformation,background_claim
This simple algorithm is used in many commercial graphics packages and real-time rendering applications,background_claim
shows several limitations,background_claim
the deformation of this method is restricted to the subspace of the affine transformation of the joints,background_claim
LCF00,data
we have a sufficient set of examples to describe the movement of an articulated object,data
we can interpolate displacement in “pose space”,background_claim
LCF00,data
we translate each skinning sample k to the rest coordinate frame using inverse SSD,data
the displacement between the,background_claim
sample vertex v k and the rest pose vertex can be calculated: n joint,background_claim
d k = ( ∑ w j T j ) −1 v k − v 0 j=1,background_claim
"After defining the displacement of each pose, the displacement at an arbitrary pose can be calculated by RBF",background_claim
LCF00,data
or normalized radial basis function,background_claim
KM04,data
interpolation of the example poses’ displacements,background_claim
The displacement d a of a vertex in an arbitrary pose p a can be calculated as n pose,background_claim
d a = D(p a ) = ∑ r k (p a )d k k=1,background_claim
Normalized Radial Basis Functions can smoothly interpolate pose space using: n pose,background_claim
"f t (p a ) = ∑ λ t,k φ k (γ k ) k=1",background_claim
The weight r k (p a ) is calculated using normalized RBFs and is used in equation 4 to calculate the displacement d a of a vertex in an arbitrary pose p a,background_claim
r k (p a ) = ∑ n pose f k (p f a (p ) ),background_claim
WPSD is developed by Kurihara et al.,background_claim
KM04,data
to deform their example-based human hand model derived from medical images,background_claim
the γ k is the difference of n joint dimensional joint vectors of related poses,data
every vertex in the pose p k has same distance γ k resulting in the same weight r k (p a ) in every vertex of the pose p k,background_claim
"In the original PSD, the distance between two poses p a and p k having n joint number of joints for each pose is defined as n joint",background_claim
"γ k (p a , p k ) = ∑ (p a, j − p k, j ) 2 j=1",background_claim
each element of the joint vector equally contributes to the distance calculation,background_claim
two vectors having a same value but different order generate same pose distance,background_claim
"three different joint vectors p 1 = (θ, 0, 0), p 2 = (0, θ, 0), p 3 = (0, 0, θ) have same distance between them and it can cause unexpected results in PSD",background_claim
In WPSD,background_claim
KM04,data
Kurihara et al. modify the distance definition between poses using joint weight of each vertex i to give proper weight to each element of a joint vector,background_claim
"n joint γ i,k (p a , p k ) = ∑ w i, j (p a, j − p k, j ) 2 j=1",background_claim
"From this definition, a more accurate pose distance is obtained",background_claim
it generates better skinning in arbitrary poses,background_claim
The joint weights of each vertex are important to generate accurate skinning in SSD,background_claim
equation 2,data
as well as in WPSD,background_claim
equation 8,data
"In many applications, the weights are manually generated by skilled artists",background_claim
it is hard to generate accurate values,background_claim
a number of joints are involved in deforming a region,data
we automatically calculate the joint weights of each vertex from the sample poses to enhance the accuracy of the weight value,own_claim
This results in better skinning and reduces the elaborate manual work required to create weight maps,own_claim
"In each sample pose p k , we have following equation based on SSD: n joint",own_claim
v  ̃ k − e k = ( ∑ w j T j )v 0 j=1,own_claim
we have sufficient examples involving the same set of n joint joints,data
we have n pose equations of the form: n joint,own_claim
v  ̃ k − e k = ( ∑ v j w j ) j=1,own_claim
the e k is unknown,own_claim
we can solve for weights that minimize the e k in a least squares sense by stacking the equations 10 (with e k omitted) into a linear matrix system,own_claim
2 v − Aw,own_claim
"From equation 11, we can calculate w from the given value of v and A to reduce the error of this equation",own_claim
We use the non-negative least square (NNLS) method to solve this problem,own_claim
it determines positive weight values minimizing error in equation 10,own_claim
The calculated weight vector w is normalized to satisfy ∑ n j=1 joint w j = 1.0,own_claim
"In order to avoid a singular matrix A, the number of poses should be greater or equal to the number of overall DOF",own_claim
of the joint vector,own_claim
the sample poses should be sufficiently different,own_claim
James et al. used a similar approach to estimate vertex weights in each joint,background_claim
JT05,data
Skinning deformations vary across vertices,background_claim
"In SSD and WPSD, this per-vertex computation is independent for each vertex and can be parallelized by a SIMD parallel architecture",background_claim
We developed a parallel skinning algorithm for SSD and WPSD that is suitable to GPUs having a SIMD architecture with one-side communication to texture memory,own_claim
"The computation cost of the SSD skinning algorithm is O(n vertex × n joint ) from equations 1, 2, PSD is O(n vertex × n joint × n pose ) from equations 1, 2, 4, and WPSD is O(n vertex × n joint × n pose × n pose × n pose ) from equations 1, 2, 4, 5, 6",own_claim
r i is same in all vertices and d i can be pre-calculated,own_claim
"computation cost of original PSD is defined by equation 1, 2, 4",own_claim
The number of joints n joint and poses n pose can be reduced to the smaller numbers using the method developed by Kry et al.,own_claim
KJP02,data
section 5.2.1,data
the Eigenskin method based on PSD was developed using GPU vertex programming,background_claim
KJP02,data
The vertex program uses a relatively small number of slow processing units compared with the fragment processors,background_claim
the per-vertex computation cost of the original PSD is O(n joint × n pose ),background_claim
WPSD,own_claim
can clearly benefit from parallel computation on fragment processors,own_claim
having higher pervertex computation cost O(n joint × n pose × n pose × n pose ),own_claim
"In order to minimize real-time computation, we separate possible pre-calculation steps and save the results into texture memory using texture maps",own_claim
the value in the texture memory is not changed in the successive deformation,own_claim
it can be pre-computed and stored in the read-only texture memory,own_claim
The fragment processors cannot access vertex information,own_claim
we can use texture memory to send data to the fragment program,own_claim
These textures represent parameter v 0 in equation 2,own_claim
"each 3D element (x, y, z) is stored into the (r, g, b) value of a texel",own_claim
Figure 2,data
the distribution of skinning effects in an articulated body is local to several joints,background_claim
MMT97,data
KJP02,data
deformations arising from the PIP,background_claim
joint of index finger do not propagate to the other fingers,background_claim
deformation on the middle phalanx of index finger is only affected by the movement of PIP and DIP,background_claim
joints,background_claim
we can reduce joint weight storage from the actual number of joint n joint to a smaller number of “principal joints” n  ̃ joint selected by sorting on the weight value,own_claim
"we can save the joint weights of entire geometry in two RGBA textures T w1 , T w2 each with size n vertex × 4(rgba) and store the entire information required for SSD",own_claim
"in four textures T v , T n , T w1 , and T w2",own_claim
We threshold n  ̃ joint at four in our tests with an additional four elements to hold the related joint index,own_claim
equation 2,data
The displacement values calculated by equation 3 can be stored in n pose displacement textures,own_claim
we need many sample poses to calculate accurate joint weights and PSD deformation,own_claim
complex joint structures,data
a large DOF model,data
the joint weights can be pre-calculated,own_claim
we can reduce the number of sample poses needed in real-time PSD computation,own_claim
of pose space can yield an orthogonal basis called “ Eigendisplacement ”,background_claim
PCA,background_claim
KJP02,data
we reduce the size of pose space from n pose to n  ̃ pose “principal poses”,data
we can reduce the number of displacement textures,own_claim
we set n  ̃ pose as eight in our experiment and save displacements of all poses into a RGB texture T d having size n vertex × 8( n  ̃ pose ) × 3(rgb),own_claim
"from the two important observations of “principal joints” and “principal poses”, the original computation cost for SSD, PSD, and WPSD discussed in section 5.1 can be reduced using n  ̃ joint and n  ̃ pose rather than n joint and n pose",own_claim
the weight r i in equation 4 is the same at every vertex,background_claim
In the original PSD,background_claim
we do not need to calculate this value in the GPU,background_claim
the size of this value is just n  ̃ pose,own_claim
we can simply pass them to the GPU as parameters without generating a texture map,own_claim
we store all the information needed to calculate the original PSD at this point,own_claim
they are not changed during the deformation process,own_claim
The values in the texture maps are stored in the texture memory at setup time,own_claim
"In order to reduce real-time computation, we pre-calculate T j in equation 2 and λ in equation 5 and store them into another one channel texture T x having size n  ̃ pose × ( n  ̃ pose + n  ̃ joint × 3(x, y, z))",own_claim
"we store all the variables required to calculate WPSD, PSD, and SSD in six texture maps: T v , T n , T w1 , T w2 , T d , and T x",own_claim
"In current graphic card architectures, data transfer from CPU to GPU is slow compared with memory access within the GPU",background_claim
the only data changed in each deformation and passed from CPU to GPU is a joint vector p a (size = n joint ) representing the current arbitrary pose,own_claim
the memory access rate in our method is very efficient,own_claim
"In the original PSD method, an additional r k value (size = n  ̃ pose ) is required",background_claim
vertex information cannot be accessed by the fragment program,background_claim
vertex deformation on a GPU is usually performed by a vertex program,background_claim
KJP02,data
BK05,data
we cannot access vertex data in the fragment program,own_claim
the efficiency of parallel computation on a fragment program is higher,own_claim
the fragment processor has more processing units and each of them has more computation power than a vertex processor,own_claim
We developed a parallel WPSD algorithms using the fragment processors to enhance the extent of parallel computation,own_claim
the viewport is set to the same resolution as the textures,own_claim
each fragment is exactly matched with each texel holding the vertex information,own_claim
we can access each vertex using the texture coordinates of the fragment,own_claim
vertex weights and displacements stored in the texture maps can also be accessed by similar methods,own_claim
A similar idea was developed,background_claim
to calculate ray tracing in a fragment program and is used in GPGPU,background_claim
applications,background_claim
PBMH02,data
GPG,data
LHK ∗ 04,data
PF05,data
The FBO,background_claim
extension,background_claim
supports rendering into an attached texture,background_claim
Gre05,data
This saves memory and time,background_claim
there is no copy operation from frame buffer to texture buffer,background_claim
We implemented our WPSD algorithm using the fragment program with the FBO extension to store the result directly into texture maps accessed by vertex program in the next pass,own_claim
Algorithm 1,data
multiple render targets,own_claim
can combine the first and second pass,own_claim
vertex buffer objects,own_claim
could be used to render the deformed results back to the vertex array,own_claim
OPE,data
GPG,data
LHK ∗ 04,data
We tested our methods using upper arm models consisting of four joints,own_claim
Each has three DOF,own_claim
the wrist is the end joint having no DOF,own_claim
Three different resolution meshes are used to test the performance of GPU parallel computation,own_claim
the high-resolution model has 91460 triangles with 46036 vertices,own_claim
the midresolution model has 22836 triangles with 11574 vertices,own_claim
the low-resolution model has 5762 triangles with 2972 vertices,own_claim
Figure 4,data
these models are considerably more detailed than those used in current games,own_claim
the reported frame rates would be much higher,own_claim
typical gameresolution models were used,data
models such as these will be in wide use in a few years,own_claim
the expected growth of GPU processing power,own_claim
algorithms such as WPSD will be required to produce realistic deformations at this level of resolution,own_claim
Eight sample poses were created by Poser [Cur] and the joints weights and displacements of each sample were derived from these models,own_claim
Figure 5,data
Our parallel algorithm is based on three pass GPU computation,own_claim
"The fragment program for the 1st and 2nd pass, and the vertex program for the 3rd pass are implemented in the Cg language",own_claim
FK03,data
the maximum required memory space for the highest resolution model is just 6.8 Mbytes,own_claim
For accuracy the GPU computation is performed by 32bit floating point operations with 32bit floating point texture maps,own_claim
the size of the output texture T v ′ and T n ′ is the same as the size of T v and T n,own_claim
"On average, our GPU-based deformation shows around 20 times speed-up compared with CPU-based deformation",own_claim
table 1,data
GPU-based WPSD has roughly the same speed as CPUbased SSD,own_claim
real-time applications using SSD can substitute WPSD running on the GPU without loosing their real-time performance,own_claim
our algorithm shows speed-up for SSD and PSD as well as WPSD,own_claim
applications can choose the most appropriate skinning method according to the required deformation and detail,own_claim
we present a parallel skinning algorithm suitable for SIMD architectures such as GPUs,own_claim
"Articulated body skinning using SSD, PSD, and WPSD are efficiently parallelized by our GPU-based method",own_claim
"on a detailed model, we obtain around 20 times speed-up compared with CPU-based computation",own_claim
Principal component compression of the examples and careful analysis of joint distributions can reduce the domain of computation,background_claim
KJP02,data
"other algorithms based on the SSD, PSD, and shape interpolation may be parallelized on GPU using our approach",own_claim
physics-based animated characters with a large repertoire of motor skills have so far been elusive,background_claim
the considerable history of progress in animating virtual humans,background_claim
3,data
7,data
"This may seem surprising in view of the recent successes in implementing a slew of specialist controllers capable of realistically synthesizing the complex dynamics of running, diving, and various gymnastic maneuvers",background_claim
16,data
a divide-and-conquer strategy is clearly prudent in coping with the enormous variety of controlled motions that humans and other animals may perform,background_claim
little effort has been directed at how the resulting control solutions may be integrated to yield composite controllers with significantly broader functionalities,background_claim
researcher A creates a walking controller for a dynamic character while researcher B creates a running controller for the same articulated model,data
it would be beneficial if they could share their controllers,background_claim
and easily create a composite controller enabling the character to both walk and run,background_claim
This is a difficult problem,background_claim
its resolution would help pave the way towards controller libraries for dynamic animation which communities of practitioners could utilize and to which they could contribute,background_claim
we propose a simple yet effective framework for composing specialist controllers into more general and capable control systems for dynamic characters,own_claim
"In our framework, individual controllers are black boxes encapsulating control knowledge that is possibly gleaned from the biomechanics literature, derived from the robotics control literature, or developed specifically for animation control",own_claim
Individual controllers must be able to determine two things,own_claim
a controller should be able to determine whether or not it can take the dynamic character from its current state to some desired goal state,own_claim
"an active controller should be able to determine whether it is operating nominally, whether it has succeeded, or whether it has failed",own_claim
Any controller that can answer these queries may be added to a pool of controllers managed by a supervisor controller whose goal is to resolve more complex control tasks,own_claim
An important technical contribution within our controller composition framework is an explicit model of pre-conditions,own_claim
Preconditions characterize those regions of the dynamic figure’s state space within which an individual controller is able to successfully carry out its mission,own_claim
we demonstrate the successful composition of controllers based on manually determined pre-conditions,own_claim
We devise a promising solution which employs Support Vector Machine,own_claim
learning theory,own_claim
Our novel application of this technique learns appropriate pre-conditions through the repeated sampling of individual controller behavior in operation,own_claim
"As a testbed of our techniques, we are developing a physicallysimulated animated character capable of a large repertoire of motor skills",own_claim
An obvious application of such a character is the creation of a virtual stuntperson,own_claim
the dynamic nature of typical stunts makes them dangerous to perform,own_claim
also makes them an attractive candidate for the use of physics-based animation,own_claim
The open challenge here lies in developing appropriate control strategies for specific actions and ways of integrating them into a coherent whole,own_claim
we demonstrate families of composable controllers for articulated skeletons whose physical parameters reflect anthropometric data consistent with a fully-fleshed adult male,own_claim
the 3D skeleton illustrates the ultimate promise of the technique,own_claim
the easier control associated with the 2D skeleton allows for more rapid prototyping of larger families of controllers and more careful analysis of their operation,own_claim
the control of broad skilled repertoires of motion remains very much an open problem even for 2D articulated figures,background_claim
A subsequent disturbance will elicit similar though by no means identical autonomous behavior,own_claim
the initial conditions and external forces will usually not be exactly the same,own_claim
Control sequences of such intricacy for fully dynamic articulated figures are unprecedented in the physics-based animation literature,own_claim
The simulation and animation of human characters is a challenging problem in many respects,background_claim
"Comprehensive solutions must aspire to distill and integrate knowledge from biomechanics, robotics, control, and animation",background_claim
Models for human motion must also meet a particularly high standard,background_claim
our familiarity with what the results should look like,data
"a divide-and-conquer strategy is evident in most approaches, focusing efforts on reproducing particular motions in order to yield a tractable problem and to allow for comparative analysis",background_claim
The biomechanics literature is a useful source of predictive models for specific motions,background_claim
typically based on experimental data supplemented by careful analysis,background_claim
"These models target applications such as medical diagnosis, the understanding and treatment of motor control problems, the analysis of accidents and disabilities, and high-performance athletics",background_claim
Computer simulation is becoming an increasingly useful tool in this domain,background_claim
the motion models evolve to become more complex and comprehensive,background_claim
26,data
27,data
29,data
there have been fewer efforts towards integrated solutions applicable to multiple motions,background_claim
the challenge of achieving high-fidelity motion models for individual motions,data
26,data
Robotics research has made remarkable progress in the successful design of a variety of legged robots,background_claim
28,data
"and, more recently, bipedal robots with anthropomorphic aspirations",background_claim
23,data
these robotic systems are truly engineering marvels,background_claim
their limited motion repertoires and rather deliberate movements,background_claim
The work,background_claim
provides a good summary of behavioral architectures explored in the context of robotics,background_claim
1,data
A 3 DOF ball-juggling robot is described,background_claim
6,data
which uses a theory of behavior composition,background_claim
the practicality of extending the method to high-DOF dynamic models of human motions is unclear,background_claim
Computer animation is to a large extent unencumbered by the exacting fidelity requirements of biomechanical models and the mechanical limitations of robotic systems,background_claim
This has spawned a great variety of kinematic and dynamic models for character motion,background_claim
3,data
4,data
7,data
motion capture solutions based on blending and warping techniques may give satisfactory results for such tasks in the short term,background_claim
"controller based approaches reveal more about the physics, planning, and control of such motions",background_claim
they,background_claim
serve as a basis for more general solutions,background_claim
Dynamically simulated characters were first proposed over 15 years ago,background_claim
2,data
34,data
and since then have progressed in sophistication in a variety of directions,background_claim
Controllers have been successfully designed for specific human motions,background_claim
walking,data
running,data
vaulting,data
cycling,data
16,data
22,data
35,data
"Dynamically simulated articulated characters equipped with an integrated, wide-ranging repertoire of motor skills currently remain an unachieved goal",background_claim
Some positive steps in this direction are evident,background_claim
Examples include an integrated repertoire of motor controllers for biomechanically animated fish,background_claim
a methodology for controller design and integration applicable to simple figures,background_claim
a demonstration of successful integration for selected diving and gymnastic motions,background_claim
and adapting a controller designed for one character to work on another character,background_claim
30,data
32,data
35,data
17,data
The work of Wooten,background_claim
is the most relevant as an example of a sequence of successive transitions between several controllers for human motions,background_claim
leaping,data
tumbling,data
landing,data
balancing,data
35,data
Transitions are realized by including the end state of some controllers in the starting states of other controllers,background_claim
"A digital biomechanics laboratory is proposed by Boston Dynamics, Inc.",background_claim
20,data
as a tool for simulating a wide range of human motion,background_claim
This currently remains ambitious work in progress,background_claim
Our work is aimed at creating dynamic human characters with broadly integrated action repertoires,own_claim
our methodology is to begin with a core set of simple actions,own_claim
balancing,data
small steps,data
falling reactions,data
recovery from falls,data
standing up from a chair,data
our contribution here is a framework for composing individual controllers,own_claim
"they may be designed, into more capable control systems for dynamic characters",own_claim
An interesting tech,own_claim
nical contribution within our controller composition framework is the introduction of a learning approach for automatically determining controller pre-conditions,own_claim
Our pre-condition learning algorithm adds to the growing body of learning algorithms that have been successfully applied in the context of computer animation in recent years,own_claim
14,data
15,data
"the supervisor polls the pool of controllers, querying each whether it can handle the transition of the dynamic character from its current state to the desired goal state",own_claim
no controller is active,data
Individual controllers return an integer confidence/suitability score when queried in order to bid on becoming the active controller,own_claim
controllers that can perform a sensible action given the current state of the character return an integer in the range 1⁄2 1⁄21⁄4,own_claim
"those that can handle the current state as well as guarantee a transition to the desired state, return an integer in the range 1⁄21⁄4 3⁄41⁄4",own_claim
a value of 1⁄4 means that a controller is unsuited for the current state,own_claim
this scoring scheme potentially allows for a nuanced evaluation of the controller suitability in terms of criteria such as probability of success or energy used,own_claim
The controller that returns the highest score becomes active,own_claim
our current controllers resort to a simpler scheme,own_claim
This consists of a binary success/failure evaluation multiplied by a weighting factor assigned to each controller that serves to establish a relative preference ordering,own_claim
The power of this scheme stems from the following attributes,own_claim
The composition method is straightforward and easy to implement,own_claim
It does not appreciably burden the controller design task,own_claim
The composition method does not restrict the design of individual controllers,own_claim
Each controller can be as primitive or as sophisticated as its designer wishes,own_claim
"A controller within the pool of available controllers can be as simple as a constant force, or as complex as a structured hierarchy of multiple levels of control abstraction",own_claim
more controllers are added to the system,data
we may wish to group all the walking and running controllers together into a cluster that can be treated as one encapsulated controller,own_claim
"our composition method requires controllers to define pre-conditions, post-conditions and expected performance",own_claim
these conditions are met,data
the controller can operate and possibly enable the character to satisfy the post-conditions,own_claim
"this mapping may not always succeed, which motivates the notion of expected performance",own_claim
unexpected changes in the environment,data
The controller should be able to evaluate its performance in order to detect failure at any point during its operation,own_claim
"To do this, the controller must at all times have knowledge of the current and expected state of the character or the environment",own_claim
"Defining the pre-conditions, post-conditions, and expected performance for complex characters, motions, and environments is not a straightforward task",own_claim
the effort required to generate these specifications is a fair and necessary price to pay to achieve the benefits of composability,own_claim
Controllers that adhere to these specifications can form a pool of available controllers managed by the supervising controller,own_claim
Most of our controllers can operate within a small region of the state space which we denote Ê  ́ Õ μ,own_claim
the projection of along the gravity vector does not intersect the base of support Ë,data
the figure is considered to be unbalanced,own_claim
The determination of pre-conditions is crucial to the success of our composition framework,own_claim
the pre-conditions may reference a subset of the postconditions that is sufficient to characterize what the controller can achieve,own_claim
the post-conditions are different from the pre-conditions,own_claim
a pre-condition for a falling controller requires that the center of mass be moving,own_claim
the postconditions require that the center of mass be at rest,own_claim
Our framework permits the automatic selection of the appropriate controller based on the information provided by the controllers themselves,own_claim
Only the individual controllers can detect whether they are operating normally or whether failure is imminent,own_claim
The controller may fail,own_claim
a sudden change in the environment,data
badly designed pre-conditions,data
The sooner a controller can detect failure the sooner another more appropriate controller can take over,own_claim
This is important for making a character behave naturally,own_claim
the character should not attempt to continue a walking gait,own_claim
it has lost its balance and it is falling,data
the expected performance consists of expressions similar to those of the pre-conditions È,own_claim
"the controller successfully completes its task in the time interval Ø 1⁄2 , Ø 3⁄4",data
 ́ Ø 1⁄2 μ 3⁄4È and  ́ Ø 3⁄4 μ 3⁄4Ç,own_claim
Transitions between controllers are not explicitly modeled,own_claim
they would be in a finite state machine,own_claim
"They occur implicitly in response to the evolution of the motion over time, as the system state traverses the “regions-of-competency” of the various controllers",own_claim
typical patterns of controller activation occur,own_claim
most controllers are designed for specific situations,own_claim
the prone-to-standing fall transition can occur,own_claim
the figure is given a sufficiently strong push while rising,data
not all possible transitions are shown in either of Figs. 3 and 4,own_claim
"Most of the transitions which are not shown but are still practically feasible are of this nature, dealing with falling behaviors",own_claim
the fall controller always responds to the specific direction of the current fall,own_claim
Any transition involves one controller being deactivated and another being activated,own_claim
A controller can become deactivated,own_claim
for one of three reasons,own_claim
it may relinquish control by declaring success upon reaching its postcondition,own_claim
user intervention may elicit a transition,own_claim
The controllers designed for sitting or balanced standing will retain control until intervention by a user,own_claim
forces a desired transition,own_claim
a user-driven process must choose among the next plausible actions,own_claim
the 2D character is balanced,data
Fig. 4,data
a controller may detect failure,own_claim
our framework is designed to work in interactive settings,own_claim
controllers typically start with slightly different initial conditions each time they are invoked,own_claim
the user can interact with the character at any time,own_claim
there are no guarantees that the controller will reach the same end state each time it operates,own_claim
the transition graph is dynamic in structure,own_claim
determining the exact region of the state space and the general conditions that determine success or failure of the controller is in general a non-trivial matter,own_claim
controllers associated with complex dynamic characters,data
we address this problem via manual and automatic approaches,own_claim
The manual approach allows designers to incorporate their knowledge within controllers,own_claim
the automatic approach is based on machine learning techniques,own_claim
"For certain cases, suitable pre-conditions for specific controllers may be found in the biomechanics literature",background_claim
8,data
25,data
Pai and Patton,background_claim
25,data
present a comprehensive study of balance in the sagittal plane and identify the conditions under which a human can compensate for postural disturbances and maintain balance without stepping,background_claim
"For certain other cases, the pre-conditions are trivially defined by the desired motion itself",background_claim
Certain controllers function as intermediate stages between other controllers,background_claim
controller B is the intermediate step between A and C,data
the postconditions of A dictate the pre-conditions of B and similarly the pre-conditions of C define the post-conditions of B,background_claim
in some cases the pre-conditions are computed by manual experimentation,background_claim
a simple balance controller based on an inverted pendulum model,background_claim
12,data
has intrinsic stability that can tolerate small disturbances,background_claim
"After the controller has been designed, repeated testing under disturbances of increasing magnitude can yield an approximation of the pre-conditions and the post-conditions",background_claim
the designer of a controller presumably understands the way the controller operates,background_claim
is able to provide high level conditions on its success or failure,background_claim
the designer of a walking controller knows if the controller can operate when the walking surface has minimal friction properties,background_claim
human motion is shaped by notions such as comfort,background_claim
only the designer can take this into account,background_claim
a person is pushed while standing,data
he/she might take a protective step,background_claim
it may be more comfortable to do so instead of maintaining an inverted pendulum balancing strategy,background_claim
the way people react to slipping and imbalance and the protective behaviors they employ are largely age dependent,background_claim
"we introduce an automatic, machine learning approach to determining pre-conditions, which is based on systematically sampling the performance of controllers",own_claim
Our method uses a machine learning algorithm attributed to Vapnik,own_claim
33,data
known as Support Vector Machines,own_claim
which has recently attracted much attention,own_claim
in most cases the performance of SVMs matches or exceeds that of competing methods,background_claim
SVMs are a method for fitting functions to sets of labeled training data,background_claim
The functions can be general regression functions or they can be classification functions,background_claim
we use simple classification functions with binary outputs which encode the success or failure of a controller,own_claim
Burges,background_claim
5,data
provides an excellent tutorial on SVMs,background_claim
The SVM is a machine whose task is to learn the mapping Ü Ý from a training set,background_claim
A particular choice of « generates a “trained” SVM,background_claim
a properly trained SVM predicts if a controller will succeed (  ́ Ü μ 1⁄4 ) or fail (  ́ Ü μ 1⁄4 ) on a given state Ü of the dynamic character,own_claim
a linear SVM with separable training data,data
there exists a decision boundary separating positive from negative examples which takes the form of a “separating hyperplane” in,background_claim
SVM training requires the solution of a quadratic programming optimization problem involving a Lagrange multiplier « for every datapoint in the training set,background_claim
The support vectors are critical elements of the training set,background_claim
other observations in the training set are moved,data
or removed and SVM training is repeated,data
the same separating hyperplane will result,background_claim
The linear SVM is easily generalized to nonseparable training data,background_claim
it is straightforward to generalize the theory to encompass nonlinear SVMs for which the decision boundaries are no longer hyperplanes,background_claim
The trick,background_claim
is to map the data to some higher (possibly infinite) dimensional space in which the linear theory can be applied,background_claim
This is easily done by introducing kernel functions Ã  ́ Ü Ü μ,background_claim
"the polynomial kernel Ã (RBF)  ́ Ü Ý kernel μ  ́ Ü Ã ¡  ́ Ü Ý · Ý μ 1⁄2μ Ô , ÜÔ",data
the   Ü Gaussian   Ý 3⁄4 3⁄4 or 3⁄4 μ radial,data
"ical details, we refer the reader to",background_claim
5,data
For the basis mathemat,background_claim
the trained SVM demarcates the boundary of regions in the figure’s state space wherein the controller can successfully do its job,own_claim
"To apply the SVM technique to the problem of determining controller pre-conditions, we train a nonlinear SVM classifier to predict the success or failure of a controller for an arbitrary starting state",own_claim
The distribution of the stochastically-generated initial states is of some importance,own_claim
The sample points should ideally be located close to the boundaries which demarcate the acceptable precondition region of state-space,own_claim
these boundaries are,own_claim
the unknowns we wish to determine,own_claim
we must resort to a more uniform sampling strategy,own_claim
the high dimensionality of the state-space precludes regular sampling,own_claim
We,own_claim
adopt the following stochastic process to generate a suitable distribution of initial states,own_claim
"First, a nominal initial state is chosen, based upon the designer’s knowledge of the controller",own_claim
A shortduration simulation,own_claim
typically 0.3s,data
is then carried out from this initial state while a randomized perturbation process is executed,own_claim
"Simultaneously, the character’s joints are perturbed in a stochastic fashion by setting randomized offset target angles for the joints and using the character’s PD joint controllers to drive the joints towards these perturbed positions",own_claim
the perturbation strategy is admittedly ad-hoc,own_claim
we have found it to be effective in sampling the pre-condition space,own_claim
the online use of the learned pre-condition models,data
We employ T. Joachims’ SVM Ð Ø software which is available on the WWW,own_claim
21,data
The software can accommodate large training sets comprising tens of thousands of observations,background_claim
it efficiently handles many thousands of support vectors,background_claim
It includes standard kernel functions and permits the definition of new ones,background_claim
It incorporates a fast training algorithm which proceeds by solving a sequence of optimization problems lower-bounding the solution using a form of local search,background_claim
It includes two efficient estimation methods for error rate and precision/recall,background_claim
The SVM training phase can take hours in our application,own_claim
this is done off-line,own_claim
"the training time is 8,676 seconds using the polynomial kernel, 3,593 seconds using the linear kernel, and 486 seconds using the radial kernel",own_claim
"a training set of 11,020 observations",data
"for a training set of 8,013 observations",data
"on a 733 MHz PIII computer, the SVM training time",own_claim
"is 2,789 seconds using the polynomial kernel, 2,109 seconds using the linear kernel, and 211 seconds using the radial kernel",own_claim
"Once trained, the SVM classifier can provide answers on-line in milliseconds",own_claim
We compared the performance of the SVM algorithm to that of a nearest neighbor,own_claim
9,data
"Given a training set, the nearest neighbor classifier returns for an arbitrary state Ü the same succeed/fail label as the label for that observation in the training set that is closest to Ü",background_claim
NN classifiers should perform particularly well,background_claim
classifier,own_claim
the feasible area in the state space is highly fragmented and localized,data
the NN method requires zero training time,background_claim
it provides an answer in Ç  ́ Ò μ time,background_claim
The results show that the SVM algorithm consistently outperforms the NN classifier,own_claim
We ran a similar set of experiments using Gaussian RBF kernel functions,own_claim
the accuracies were consistently lower than those obtained with polynomial kernel functions,own_claim
the SVM algorithm employed polynomial kernel functions,own_claim
"Our control composition framework is implemented within DANCE , a portable, extensible object-oriented modeling and animation system",own_claim
24,data
DANCE provides a platform that researchers can use to implement animation and control techniques with minimal design and implementation overhead,background_claim
The core of the system supports four base classes,background_claim
Systems,data
Simulators,data
Actuators,data
Geometries,data
which are loadable as plug-ins in accordance with simple APIs,background_claim
Articulated objects are a System subclass that support skeleton hierarchies,background_claim
"They have kinematic properties and, usually, fully dynamic physical properties as well",background_claim
Our virtual actors,own_claim
are dynamic articulated objects implemented as Systems within DANCE,own_claim
DANCE places no restrictions on the complexity of the controllers,background_claim
An actuator is a generic concept that includes anything that can exert forces or,background_claim
interact in any way with systems or other actuators,background_claim
"gravity, the ground, the collision mechanism, the supervisor controller and individual controllers are implemented as actuators",background_claim
Simulators compute the equations of motion of all the dynamic characters and other systems in DANCE,background_claim
"DANCE offers built in support for SD/FAST, a commercial system which produces optimized simulation code",background_claim
18,data
any simulator that follows a simple,background_claim
API can be dynamically loaded into the system,background_claim
Our simulators are automatically produced by SD/FAST from description files,own_claim
They use Kane’s method for computing articulated dynamics and a fourth order explicit Runge-Kutta time integrator for numerically simulating the motions,own_claim
This allows the user to dynamically load controllers and simulators at runtime,own_claim
Actuators and simulators are implemented as DANCE plug-ins,own_claim
"researchers can exchange, simulators, and controllers in the form of dynamically linked pieces of code",own_claim
Object collisions,own_claim
are handled by the Collision actuator,own_claim
This actuator works on pairs of objects,own_claim
The DANCE API allows it to work with objects that have different simulators,own_claim
Collision detection is based on a library that uses oriented bounding boxes,background_claim
13,data
it can make the system stiff,background_claim
Collision resolution uses a penalty method that corrects geometry interpenetration using spring-and-damper forces,background_claim
it has performed well in our experiments to date,own_claim
The dynamic properties of both models,own_claim
are taken from the biomechanics literature and correspond to a fullyfleshed adult male,own_claim
mass,data
moments of inertia,data
The models are equipped with natural limits both on the motion of the joints and the strength of their muscles,own_claim
DANCE has no built in muscle model and does not enforce the limits automatically,background_claim
Users can implement the model they prefer and include code to enforce the limits of the model,background_claim
Our plug-in control scheme uses rotational spring-and-damper forces for control and enforces the limits on the joints with exponential springs,own_claim
"Most of the controllers for our virtual stuntperson are based on pose control, which has often been used both for articulated objects",own_claim
31,data
and soft objects,own_claim
11,data
Pose control is based on cyclic or acyclic finite state machines with time transitions between the states,background_claim
Each state of the controller can be static or depend on feedback parameters,background_claim
"For some of our controllers, we use continuous control",own_claim
We designed several controllers based in part on experimental studies of how humans detect loss of balance,own_claim
25,data
and analysis of protective and falling behaviors,own_claim
8,data
"The resulting parameterized controllers have been enhanced with appropriate pre-conditions, post-conditions, and expected performance and have been integrated using an arbitration-based supervising controller",own_claim
Each controller has full access to the internal data structures of DANCE including all the information associated with any character or object in the system,own_claim
This allows the controllers to define arbitrary sensors that keep track of necessary information,own_claim
state parameters for feedback loops,data
the state of the environment,data
"For efficiency, the supervisor controller calculates a number of common sensor values that are available to all the controllers",own_claim
Many controller transitions in the control framework happen autonomously,own_claim
taking a protective step in response to losing balance,data
other actions are initiated in a voluntary fashion,own_claim
"a standing character can do any of (1) remain standing using the balance controller, (2) sit-down, (3) walk, and (4) dive",own_claim
"Currently, the user directs these voluntary motions by interactively entering command strings to the supervisor controller which, in turn, directly increases the suitability score of the designated controller and forces the arbitration process to be invoked to select a new active controller",own_claim
The control of voluntary motions could equivalently be delegated to a high-level planner,background_claim
this kind of planning is beyond the scope of our work at present,background_claim
At the heart of our prototype system is a composite controller that is capable of handling a large number of everyday tasks,own_claim
walking,data
balancing,data
bending,data
falling,data
sitting,data
the given controller descriptions are for the 3D character,own_claim
the equivalent 2D controllers are very similar,own_claim
"An autonomous human agent should be able to balance, standing naturally in place",own_claim
the character ought to react naturally either with a restoring motion or with a protective falling behavior depending on which action is appropriate in each case,own_claim
loss of balance,data
Affording a dynamic articulated figure with natural reactions to loss of balance or impending falls is an essential step towards believable autonomous characters,own_claim
This controller is based on an inverted pendulum model,own_claim
12,data
using the ankles to control the body sway,own_claim
the approximation works well in practice,own_claim
the body of the character is not as rigid as the inverted pendulum hypothesis suggests,own_claim
"An animated character should attempt to maintain balance in response to external disturbances by shifting its weight, taking a step or bending at the waist",own_claim
it must,own_claim
the character cannot maintain balance,data
resort to a falling behavior,own_claim
The manner in which people fall depends on a number of factors,background_claim
their physique,data
their age,data
their training,data
19,data
the work,background_claim
"shows that, during a fall, the elderly are more likely to impact their hip first as compared to younger adults falling under the same conditions",background_claim
Our fall controller is designed with the average adult in mind,own_claim
Its main action is,own_claim
to absorb the shock of the impact using mostly the hands,own_claim
The pre-conditions of the fall controller are defined in accordance with those of the balance controller,own_claim
Situations that are beyond the capabilities of the latter should be handled by the fall controller,own_claim
"Our implementation of the fall controller can handle falls in any direction, responding in different ways to falls in different directions",own_claim
Fig. 6,data
Sitting down in a chair and rising from a chair are common everyday tasks,background_claim
We have implemented a controller that can do both depending on the instructions of the animator,own_claim
"Apart from the command string supplied by the user, the pre-conditions are either a balanced upright posture or a balanced sitting posture",own_claim
The postconditions are similarly defined,own_claim
Getting up off the ground is a surprisingly difficult motion to simulate,own_claim
It involves rapid changes of the contact points and significant shifting of the figure’s weight,own_claim
the frictional properties of the ground model can influence the motion,own_claim
The pre-conditions for this controller are straightforward,own_claim
"The character must be lying with its back flat on the ground, within some tolerance",own_claim
The post-conditions are that the character should be on its feet with its center of mass within the support polygon,own_claim
Then it would be up to another controller to take over and bring the character from a crouching position to a standing one,own_claim
some people may choose to roll-over to a prone position before attempting to stand,background_claim
lying on their back,data
We have implemented a roll-over controller that can emulate this action,own_claim
"The pre-conditions of the roll-over controller require a supine posture, and no movement of the center of mass",own_claim
The postconditions of the roll controller are fairly simple,own_claim
they include any prone position for which the character is extended and fairly straight,own_claim
a controller that enables the virtual stuntperson to rise from the prone position,own_claim
Frames 5–9 in Fig. 1,data
fourth frame in Fig. 1,data
Fig. 7,data
the pre-conditions can be fairly relaxed,own_claim
lying face-down,data
Our controller assumes that is has the time to change the state of the character to one from which it knows how to rise,own_claim
it will attempt to get up,own_claim
the figure is not lying on its arms,data
the ground is relatively flat,data
The post-conditions are chosen such that they satisfy the pre-conditions of the balance controller,own_claim
we want our dynamic character to be able to do a variety of other voluntary actions dictated by the animator,own_claim
Such actions can potentially include vigorous and/or physically dangerous actions,own_claim
a large number of researchers contribute controllers,data
the character can eventually be used as a virtual stuntperson,own_claim
It is our hope that,own_claim
The kip is an athletic motion often seen in martial arts films,background_claim
Fig. 9,data
The controller is based on a pose controller whose pre-conditions include a variation of supine positions,own_claim
the first part of the controller makes sure that the character assumes a position suitable for performing the kip,own_claim
"The larger part of the motion is ballistic, which focuses the control mainly at the kick off and landing phases",own_claim
The last part of the controller applies continuous control to bring the stuntman to an erect position from which the balance controller can take over,own_claim
The character can be instructed to lunge forward and upward at a takeoff angle controlled by the user,own_claim
When the hands contact the ground a front-roll is attempted,own_claim
The pre-conditions of this controller are defined be an upright position and little movement of the center of mass,own_claim
"We have also experimented with a multiple character scenario, with one character tackling another",own_claim
Fig. 11,data
the timing of the tackle is scripted,own_claim
"it illustrates the capability of the system to cope with a pair of interacting characters, each equipped with its own supervisory controller",own_claim
We have produced two relatively long animation sequences that demonstrate the potential of the our framework,own_claim
The sequence for the 3D skeleton mode,own_claim
involves controllers whose pre-conditions are provided analytically by the designer,own_claim
Fig. 1,data
Such conditions tend to define square regions within the space defined by the parameters involved,own_claim
such pre-conditions can generally work well,own_claim
the intricacy of the animation produced,own_claim
their simple form,own_claim
We expect to investigate the application of SVM-learned pre-conditions to the 3D model in the future,background_claim
A second animation sequence with the 2D terminator model,own_claim
makes use of a set of controllers having a mix of analytic and learned pre-conditions,own_claim
Fig. 12,data
The analytical pre-conditions prune large parts of the state space and the svm-classifier provides a more accurate success/failure prediction within the remaining region,own_claim
"During the animation sequence, the svm-classifier correctly refined the analytical answer in several cases",own_claim
Most of the computational burden in our approach lies in the numerical simulation of the equations of motion,own_claim
The computations associated with the controllers and our composition framework are negligible in comparison,own_claim
the 2D model simulates in real time,own_claim
the 3D model runs between 5 and 9 times slower than real time on a 733 MHz Pentium III system,own_claim
The challenges of physics-based controller design plus the technical obstacles that researchers face when attempting to share their algorithms has hindered progress in the important area of physicsbased character animation,background_claim
This paper has presented a methodology for ameliorating the problem with a framework which facilitates the exchange and composition of controllers,own_claim
Our framework has been implemented within a freely available system for modeling and animating articulated characters,own_claim
"our system is the first to demonstrate a dynamic anthoropomorphic character with controlled reactions to disturbances or falls in any direction, as well as the ability to pick itself up off the ground in several ways, among other controlled motions",own_claim
We hope that our system will foster collective efforts among numerous practitioners that will eventually result in complex composite controllers capable of synthesizing a full spectrum of human-like motor behaviors,own_claim
it is inevitable that the work presented in this paper is incomplete in many ways,own_claim
the enormous challenge of building controllers capable of large repertoires of dynamic human-like motion,background_claim
"Published control methods for 3D walking, running, and stair climbing make obvious candidates for integration into our system",own_claim
Coping with variable terrain and dynamic environments are dimensions of added complexity that should provide work for years to come,own_claim
Automatic parameterization of controllers to variations in character dimensions and mass is a necessary step for having solutions adaptable to a variety of characters,own_claim
Deriving controllers from motion-capture data is an exciting but difficult prospect,own_claim
some progress is already being made in this area,background_claim
Other methods of “teaching” skills to a dynamic character also warrant investigation,own_claim
intelligently integrating controllers which affect only subsets of DOFs needs to be addressed in order to allow for the parallel execution of controllers,own_claim
Extending this approach to generate natural motion for a full human character has proved to be hard,background_claim
the system is high dimensional,background_claim
the physics constraints make it highly nonlinear,background_claim
defining an objective function that reliably measures the naturalness of human motion is difficult,background_claim
Much of the difficulty in solving this problem appears to result from the physics constraints,background_claim
optimization without physics is effective for editing,background_claim
Gleicher 1998,data
one way to make the problem tractable is to simplify the governing physical laws,background_claim
Liu and Popović [2002],data
Abe and his colleagues [2004],data
many dynamic effects can be preserved by enforcing patterns of linear and angular momentum during the motion,background_claim
Reformulating the dynamics to avoid directly computing the torques also provides a significant performance improvement,background_claim
Fang and Pollard 2003,data
Reducing the number of degrees of freedom to be optimized can also create tractable problems,background_claim
Popović and Witkin [1999],data
significant changes to motion capture data can be made by manually reducing the degrees of freedom to those most important for the task,background_claim
Safonova and her colleagues [2004],data
"an efficient optimization can be achieved in a behavior-specific, low-dimensional space without simplifying the dynamics",background_claim
Liu and her colleagues [2005],data
introduced a novel optimization framework,background_claim
for optimizing appropriate parameters of the objective function from a small set of motion examples and then used the estimated parameters to synthesize a new locomotion,background_claim
Our approach is also part of an alternative set of techniques that relies on motion data to constrain the search to natural looking motions,own_claim
motion graphs can be used to resequence whole-body or facial motions,background_claim
Arikan and Forsyth 2002,data
Kovar et al. 2002,data
Lee et al. 2002,data
Zhang et al. 2004,data
These systems cannot match poses or satisfy such kinematic constraints as end effector constraints unless the motion database happens to contain a motion that satisfies those constraints,background_claim
Motion interpolation,background_claim
does allow isolated constraints to be satisfied,background_claim
Rose et al. 1998,data
Kovar and Gleicher 2004,data
Mukai and Kuriyama 2005,data
interpolation across a complete behavior does not have enough degrees of freedom to allow the specification of full pose constraints or end effector constraints across multiple frames,background_claim
"Recently, interpolation and motion graphs have been combined to obtain some of the advantages of each approach",background_claim
Safonova and Hodgins 2007,data
Statistical models of human motion have also been used for motion synthesis,background_claim
A number of researchers have used variants of Hidden Markov Models,background_claim
to statistically represent human motion,background_claim
Molina Tanco and Hilton 2000,data
Brand and Hertzmann 2000,data
Galata et al. 2001,data
Bregler et al. 1997,data
Brand 1999,data
HMMs learned from human motion data have been used to interpolate key frames,background_claim
Molina Tanco and Hilton 2000,data
Galata et al. 2001,data
synthesize a new style of motion,background_claim
Brand and Hertzmann 2000,data
and generate facial expressions from speech signals,background_claim
Bregler et al. 1997,data
Brand 1999,data
Grzeszczuk and his colleagues[1998],data
developed a neural network approximation of dynamics based on simulated data and use it to animate dynamic models such as fish and lunar landers,background_claim
Urtasun and her colleagues[2006],data
learned linear motion models from pre-aligned motion data via Principal Component Analysis,background_claim
and used them to track 3D human body movements from video by performing nonlinear optimization over a small sliding temporal window,background_claim
Switching linear dynamic system,background_claim
have also been used to model human motion,background_claim
Pavlović and his colleagues [2000],data
"present results for human motion synthesis, classification, and visual tracking using learned SLDS models",background_claim
Li and his colleagues [2002],data
used SLDS to synthesize and edit disco dancing motion,background_claim
Our approach is also to learn a statistical dynamic model from human motion capture data,own_claim
the dynamic behavior of our model is controlled by a continuous control state rather than a discrete hidden state as in HMMs and SLDS,own_claim
This property led us to formulate the motion synthesis problem as a trajectory optimization problem,own_claim
"our system allows the user to specify a variety of spatial-temporal constraints such as end effector constraints throughout the motion, a capability that has not been demonstrated by previous approaches",own_claim
A number of researchers have developed statistical models for human poses and used them to solve the inverse kinematics problem,background_claim
Grochow and colleagues [2004],data
"applied a global nonlinear dimensionality reduction technique, Gaussian Process Latent Variable Model, to human motion data and then used the learned statistical pose model to compute poses from a small set of user-defined constraints",background_claim
Another solution for data-driven inverse kinematics is to interpolate a small set of preexisting examples using constraints,background_claim
This idea has been used to compute human body poses,background_claim
Rose et al. 2001,data
and facial expressions,background_claim
Zhang et al. 2004,data
from kinematic constraints at a single frame,background_claim
These models lack temporal information,background_claim
cannot be used to generate an animation from sparse constraints such as key frames,background_claim
Local statistical models are sufficient,background_claim
the user provides continuous control signals,data
Chai and colleagues [2003],data
presented a real-time vision-based performance animation system that transforms a small set of automatically tracked facial features into facial animation by interpolating examples in a database at run time,background_claim
"They also used a series of local statistical pose models constructed at run time to reconstruct full-body motion from continuous, low-dimensional control signals obtained from video cameras",background_claim
Chai and Hodgins 2005,data
The statistical dynamic model used in this paper was motivated by the dynamic model used for video textures,own_claim
Soatto and his colleagues [2001],data
"a sequence of images of such moving scenes as sea-waves, smoke, and whirlwinds can be modeled by second-order linear dynamic systems",background_claim
They applied the learned dynamic systems to synthesize an “infinite length” texture sequence by sampling noise from a known Gaussian distribution,background_claim
We extend the model to learn an efficient and low-dimensional representation of human motion and use it to generate an animation that achieves the goal specified by the user,own_claim
motion priors learned from prerecorded motion data can be used to create natural human motion that matches constraints specified by the user,own_claim
The combination of the motion prior and the user’s constraints provides sufficient information to produce motion with a natural appearance,own_claim
We preprocess the motion capture data by applying Principal Component Analysis,own_claim
to the motion capture data and obtain a reduced subspace representation for y n,own_claim
Bishop 1996,data
y n = C · x n + D,own_claim
"The dimensionality of the system state, d x , can be automatically determined by choosing the d x for which the singular values drop below a threshold",own_claim
"The goal of our constraint-based motion synthesis problem is to create an animation, H, based on the constraints, E",own_claim
"From Bayes’ theorem, the goal of MAP is to infer the         most likely motion, H, given the user-defined constraints, E",background_claim
p (E|H) p (H) arg max H p(H|E) = arg max H p (E) ∝ arg max H p(E|H)p(H),background_claim
"In our implementation, we minimize the negative log of p(H|E), yielding the following optimization for motion H: ˆ",own_claim
H ˆ = arg min H − ln p(E|H) − ln p(H),own_claim
The system contains three major components,own_claim
The constraints could be any kinematic constraints,own_claim
position,data
orientation,data
the distance between two points on the character,data
They could be specified either at isolated points,own_claim
or across the whole motion,own_claim
Motion prior,data
User-defined Constraints,data
Motion optimization,data
We use an m-order linear time-invariant system to describe the dynamical behavior of the captured motion in the low-dimensional space,own_claim
m,own_claim
x n = A i x n−i + Bu n i=1,own_claim
Ljung 1999,data
This formulation is similar to the linear time-invariant control system commonly adopted in the control community,own_claim
Palm 1999,data
the matrix B is not unique,own_claim
the control input u t is unknown,own_claim
any non-singular transformation of the matrix B represents the motion,own_claim
BT and T −1 u n are also consistent with the dynamic model,own_claim
"To remove this ambiguity, we assume that the matrix B is an orthogonal matrix",own_claim
"we want to identify the statespace model, including system matrices {A i |i = 1, ..., m}, B, and the corresponding control input u m+1:N = [u m+1 , ..., u N ]",own_claim
"the low-dimensional representation of the original motion capture data, x 1:N = [x 1 , ..., x N ]",own_claim
"The matrices {A i |i = 1, ..., m} are dependent on the distribution of u n",own_claim
"To eliminate the ambiguity of the matrices A i , we seek to",own_claim
"find the {A i |i = 1, ..., m} that minimize the sum of the squared control input u n",own_claim
"A ˆ 1 , ..., A ˆ m = arg min A 1 ,...,A m n u n 2",own_claim
The matrices A i can,own_claim
be uniquely found by computing the leastsquare solution,own_claim
"A ˆ 1 , ..., A ˆ m = arg min A 1 ,...,Am n=m+1 N x n − i=1 m A i x n−i 2",own_claim
"We use the estimated matrices {A i |i = 1, ..., m} to compute the control input term",own_claim
"z n = x n − i=1 m A ˆ i x n−i , n = m + 1, ..., N",own_claim
"without noise, the rank of the matrix Z is d u",own_claim
We form a d x × (N − m) matrix by stacking the estimated control inputs z n : z m+1 ... z N = B· u m+1 ... u N (8) Z U,own_claim
Equation (8),data
we can automatically determine the dimensionality of the control input u n by computing the rank of matrix Z,own_claim
noise corrupts the motion capture data,data
the data matrix Z will not be exactly of rank d u,own_claim
"we can perform singular value decomposition (SVD) on the data matrix Z such that Z = W SV T , and then get the best possible rank d u approximation of the data matrix, factoring it into two matrices: B ˆ = W and U ˆ = SV T",own_claim
The dimensionality of the control input (d u ) can be automatically determined by choosing the d u for which the singular values drop below a threshold,own_claim
"Functionally, a statistical dynamic model is similar to a physical dynamic model",own_claim
the linear dynamic model in Equation,own_claim
4,own_claim
"can be used to generate an animation (x m+1:T = [x m+1 , ..., x T ]) by sequentially choosing an appropriate value for the control input (u m+1:T = [u m+1 , ..., u T ])",own_claim
"(x 1:m = [x 1 , ..., x m ])",data
initial values of the system state,data
The main advantage,own_claim
of using a statistical dynamic model for animation is that the dimensionality of the control input in a statistical dynamic model is usually much lower than a physical dynamic model,own_claim
the statistical dynamic model might achieve faster convergence and be less subject to local minima,own_claim
"The number of dimensions of the control input, d u , characterizes the complexity of our dynamic model",own_claim
The average reconstruction error is the L 2 distance between the original test motion and the motion reconstructed from the linear time-invariant system and computed by cross-validation techniques,own_claim
the reconstruction error of the statistical model decreases as both the order of dynamic system and the number of dimensions of the control input increases,own_claim
we choose d u as “zero”,data
our model becomes the linear dynamic model used by,own_claim
Soatto and colleagues [2001],data
and has the largest reconstruction error,own_claim
d u is equal to the number of dimensions of the system state d x,data
the model can be used to represent an arbitrary motion sequence with zero error,own_claim
"In practice, human motion is highly coordinated",background_claim
"the dimensionality of the control input for accurate motion representation, d u , is often much lower than the dimensionality of the system state, d x",own_claim
Constraint-based motion synthesis provides the user with intuitive control over the resulting motion,own_claim
the user specifies a desired motion with various forms of constraints,own_claim
the system then auto-,own_claim
matically finds the animation that best satisfies the user-specified constraints while matching the spatial-temporal properties of the motion capture data,own_claim
key frames,data
end effector target positions,data
joint angle values,data
we represent the system state x t and the control signal u t independently,own_claim
Like physically based optimization,own_claim
Witkin and Kass 1988,data
The motion to be synthesized is,own_claim
"represented as a sequence of system states and control inputs H = (x 1 , ..., x T , ..., u m+1 , ..., u T )",own_claim
"The system allows the user to specify various forms of kinematic constraints E = {e j |j = 1, ..., J} throughout the motion or at isolated points in the motion",own_claim
"For facial animation, the user can specify the positions or orientations of any points on the face, or the distance between any two points",own_claim
"For whole-body animation, the user can specify the positions or orientations of any points on the body, or joint angle values for any joints",own_claim
it is often more intuitive to specify where the projection of a point on the character should be located,own_claim
the system also allows the user to specify the 2D projections of any 3D point on a user-defined screen space,own_claim
"This approach could be used for rotoscoping a video, or for a single camera performance animation",own_claim
The system allows the user to sketch out the motion in greater or lesser detail,own_claim
a novice user might want to control the paths of specific joints or paths over a period of time using a performance animation system,own_claim
a more skilled user might prefer using key frame constraints,own_claim
"Spatially, the constraints could provide either an exact configuration such as a full-body pose or a small subset of the joint angles or end-positions",own_claim
"Temporally, the constraints could be instantaneous constraints for a particular frame, multiple-frame constraints, or continuous constraints over a period of time",own_claim
User-defined constraints can be linear or nonlinear,own_claim
Linear constraints can be used to define joint angle constraints in human body animation and positions in facial animation,own_claim
The most common nonlinear constraints in human body animation might be end effector constraints,own_claim
foot contact constraints,data
"In facial animation, nonlinear constraints can be used to specify the distance between two points on the face or 2D projections of 3D facial points",own_claim
"Mathematically, we can model the likelihood term, − ln p(E|H), as",own_claim
follows,own_claim
"E constraints = − ln p(E|H) ∼ j=1 J β e j − f j (y 1 , ..., y T ) 2 ∼ j=1 J β e j − f j (Cx 1 + D, ..., Cx T + D) 2",own_claim
A good match between the motion and the user-defined constraints results in a low energy solution,own_claim
Many motions might satisfy the user-defined constraints,own_claim
the user specifies a small set of key frames or key trajectories,data
"the number of constraints is not sufficient to completely determine the whole motion sequence, x 1:T",own_claim
"To remove ambiguities, we would like to constrain the generated motion to lie in the space of natural human motions by imposing a prior on the generated motion",own_claim
E prior = − ln p(H),own_claim
"= − ln p(x 1:T , u m+1:T )",own_claim
the current system state x t only depends on the previous system states x t−m:t−1 and the current control input u t,own_claim
Based on the statistical dynamic equation,own_claim
Equation 4,data
"We have p(H) = p(x 1:T , u m+1:T ) T = t=m+1 p(x t |x t−1:t−m , u t ) · p(x 1:m , u m+1:T )",own_claim
the likelihood of the first term on the right side of Equation 11 is measured by the deviation of the statistical dynamic equation,data
"We have the corresponding energy term E prior dynamic = − ln T t=m+1 p(x t |x t−1:t−m , u t ) ∼ −α T t=m+1 x t − i=1 m A i x t−i − Bu t 2",own_claim
"Conceptually, the dynamic prior can be thought as dimensionality reduction of the motion in a spatialtemporal domain",own_claim
It significantly reduces the dimensionality of the motion from the space of x 1:T to the space of the initial state x 1:m and the control input u m+1:T,own_claim
The energy term for the second term on the right side of Equation 11 can be simplified as follows,own_claim
"E prior control = − ln p(x 1:m , u m+1:T ) m T = − t=1 ln p(x t ) − t=m+1 ln p(u t )",own_claim
We model the control input (u t ) as a mixture with K component Gaussian densities,own_claim
"K p(u t ) = Σ k=1 π k N(u t ; φ k , Λ k )",own_claim
Bishop 1996,data
"he function N(u t ; φ j , Λ j ) denotes the multivariate normal density function with mean φ j and covariance matrix Λ j",own_claim
The parameters of the Gaussian mixture models,own_claim
are automatically estimated using an Expectation-Maximization,own_claim
algorithm,own_claim
Bishop 1996,data
"The density function of the initial states, p(x t ), t = 1, ..., m, is also modeled as a mixture of multivariate Gaussian distributions whose parameters are learned from motion data, x 1:N , using the EM algorithm",own_claim
"The training data are the values of control inputs { u n } computed from the original motion capture data ({y n |n = 1, ..., N })",own_claim
section 4,data
we choose weak priors,own_claim
to model the priors for both initial states and control inputs so as not to restrict the type of motions the algorithm can generate,own_claim
"After combining the user-defined constraints and the motion prior, the constraint-based motion synthesis problem becomes the following unconstrained motion optimization problem",own_claim
"arg min x , u E constraint + E prior dynamic + E prior control",own_claim
We follow a standard approach of representing x t and u t using cubic B-splines,own_claim
We solve the optimization problem using sequential quadratic programming,own_claim
Bazaraa et al. 1993,data
where each iteration solves a quadratic programming subproblem,own_claim
the optimization procedure always converges quickly,own_claim
usually less than 100 iterations and less than 30 seconds,own_claim
"Typically, the objective function values decrease rapidly in the early iterations and then level off as they approach the optimal value",own_claim
Figure 4,data
Our optimization framework can also be applied to the problem of generating human body motions for a character whose skeletal model is markedly different from the subjects in the database,own_claim
User-defined constraints for motion retargeting can either be directly computed from the source motion or specified by the user,own_claim
We also add one term in the objective function that measures the difference between the source motion and retargeted motion,own_claim
E dif f = t=1 T y t source − Cx t − D 2,own_claim
Two kinds of constraints were used to generate most of the examples in this paper,own_claim
key-frame constraints,own_claim
key-trajectory constraints,own_claim
We can also combine these two constraints,own_claim
a jumping motion can be created by specifying a start pose and the positions of both feet and root throughout the motion,own_claim
Our behavior-specific statistical motion model is capable of generating a rich variety of actions,own_claim
"we can use a small set of key frames and foot contacts to generate normal walking, climbing over an obstacle, a baby walking, and mickey-mouse style walking",own_claim
Figure 5,data
Our system can also synthesize motion that transitions from one behavior to another by using the statistical model learned from transition data,own_claim
"the user can generate a transition from walking to jumping, from walking to sitting down, and from walking to picking up an object",own_claim
figure 6,data
video,data
the system can generate motions for characters with skeletal dimensions different from those in the database,own_claim
Figure 7,data
we can use motion priors learned from a small sequence of a normal walking motion,own_claim
to create walking on a slope and walking with small steps,own_claim
The user can refine the animation by incrementally modifying the constraints,own_claim
the user can create a slightly different jumping motion by adjusting the positions of both hands at the top of the jump,own_claim
Figure 8,data
The system learns a single statistical model from the whole facial motion capture database and then uses it to create facial animation with a variety of spatial-temporal constraints,own_claim
The user can generate realistic facial animation by combining sparse keyframe constraints,own_claim
and sparse trajectory constraints,own_claim
The user selects six points on the face and specifies the 2D projections on the screen space at three key instants,own_claim
This type of constraint could be extracted by rotoscoping,own_claim
The user can achieve detailed control over facial movement by specifying the trajectories of a small set of 3D facial points,own_claim
The user can also use trajectories of a small set of high-level facial features,own_claim
to generate facial animation,own_claim
video,data
The quality of the final animation depends on the motion priors and the user-defined constraints,own_claim
We evaluate the importance of motion priors by comparing our method against alternative constraint-based motion synthesis methods,own_claim
The first method is a simple linear interpolation of key frames,own_claim
"The second method is trajectory-based inverse kinematics that minimizes the velocity changes of the motion in the original configuration space, y t , without any priors",own_claim
"The third method is a simple data-driven inverse kinematics algorithm that minimizes the velocity changes of the motion in a reduced PCA space, x t",own_claim
"Without the use of the statistical dynamic model, the system can not generate natural motions unless the user specifies a very detailed set of constraints across the entire motion",own_claim
We evaluate how the database influences the final motion by keeping the user-defined constraints constant,own_claim
we can generate a good walking motion with a walking database,own_claim
video,data
"For key-frame constraints, the user defined a sparse set of walking constraints and used them to generate walking motion from the priors learned from a number of different databases",own_claim
The quality of the animation becomes worse when we use a large and general locomotion database to generate walking,own_claim
the system fails to generate a good walking motion,own_claim
"the motion prior is learned from running, hopping, or jumping data",data
the prior from a walking database fails to generate a good jumping motion,own_claim
the mismatch between the prior and the user-defined constraints,own_claim
results become worse when we decrease the number of the userdefined constraints,own_claim
video,data
the numerical error increases steadily,own_claim
when the number of constraints is decreased,own_claim
"0.94, 1.06, 1.81 degrees per joint per frame",data
We observe a noticeable foot sliding artifact on one foot,own_claim
two key trajectories,data
are used to create a walking motion,data
We have presented an approach for generating both full-body movement and facial expression from spatial-temporal constraints while matching the statistical properties of a database of captured motion,own_claim
The system automatically learns a low-dimensional linear dynamic model from motion capture data and then enforces this as spatial-temporal priors to generate the motion,own_claim
"The statistical dynamic equations, together with an automatically derived objective function and user-defined constraints, comprise a trajectory optimization problem",own_claim
"Solving this optimization problem in the lowdimensional space yields optimal, natural motion that achieves the goals specified by the user",own_claim
The system achieves a degree of generality beyond the motion capture data,own_claim
we have generated a motion using constraints that cannot be satisfied directly by any motion in the database and found that the quality of the reconstructed motion was acceptable,own_claim
the system can generate motion for characters whose skeletal models differ significantly from those in the database,own_claim
video,data
we have not yet attempted to assess how far the user’s constraints can stray from the motions in the database before the quality of the resulting animation declines to an unacceptable level,own_claim
This statistically based optimization approach complements a physically based optimization approach and offers a few potential advantages,own_claim
using a low-dimensional statistical dynamic model for the constrained optimization might achieve faster convergence and be less subject to local minima,own_claim
our approach can generate slow and even stylized motions that have proven particularly difficult for physically based optimization,own_claim
the optimization does not require physical models,own_claim
Building anatomically accurate physical models for facial animation or whole-body motion remains challenging,own_claim
There are two limitations of our approach,own_claim
an appropriate database must be available,own_claim
the user cannot specify such dynamic constraints as ground reaction forces or character mass,own_claim
The main focus of this paper has been an exploration of the use of prior knowledge in motion capture data to generate natural motion that best satisfies user-defined constraints,own_claim
Another important issue for building any interactive animation system is to design an intuitive interface to specify the desired motion,own_claim
"In our experiments, most of keyframe constraints were modified from example poses in the database",own_claim
Foot contact constraints were specified by the user directly,own_claim
Key trajectory constraints were extracted from a performance interface using two video cameras,own_claim
Chai and Hodgins 2005,data
the user could rely on commercial animation software such as Maya to specify constraints,own_claim
This process is timeconsuming even for a professional artist,own_claim
it is more difficult for a naive user to specify such constraints,own_claim
One of immediate directions for future work is,own_claim
to design intuitive interfaces that allow the user to specify spatial-temporal constraints quickly and easily,own_claim
One appealing vision in animation is that the animator should be able to create and edit motion by defining and adjusting a small number of keyframes and constraints—and that the resulting motion should remain optimal in some way,background_claim
"An optimization approach to animation has proven useful for editing human motion capture data, refining a “sketched” version of an animation, and for creating entirely new motions for simple characters or short segments",background_claim
Several challenges remain,background_claim
"to achieving fast, flexible, and realistic optimization of human motion",background_claim
One challenge is incorporating physics into an interactive animation system,background_claim
constraints and objective functions that require computing physical quantities,background_claim
"are typically viewed as slow, cumbersome, and difficult to control",background_claim
impressive results obtained from physically based optimization,background_claim
momentum,data
force,data
torque,data
physical validity is often sacrificed for performance,background_claim
Physical validity is important,background_claim
Figure 1,data
Kinematic optimization alone is unlikely to capture the coordination of different parts of the body that is required to perform this task,background_claim
the preparatory back swing,data
the tuck,data
the motion of the legs to drive the character upward,data
This paper presents an approach to physically based optimization that is efficient and appears to scale well to more complex characters,own_claim
We use a standard problem formulation,own_claim
iteratively adjust character motion to meet animator constraints and minimize an objective function,own_claim
Our approach is based on restricting the definition of this optimization problem to constraints and objective functions that can be differentiated in time linear in the degrees of freedom of the character,own_claim
solution techniques for nonlinear constrained optimization problems,background_claim
typically require either analytical or numerical derivatives,background_claim
Obtaining these derivatives is a computational bottleneck,background_claim
complex derivatives can lead to poor optimization performance and problems with local minima,background_claim
Kinematic optimization,background_claim
Gleicher 1997,data
"which has been shown to be successful for complex characters, depends on constraints and objective functions for which first derivatives can be computed in linear time",background_claim
constraints on physics that can be derived from the aggregate force and torque applied to the character can also be differentiated in linear time,own_claim
This set includes most common constraints required for physically correct animation,own_claim
conserving linear and angular momentum during flight,own_claim
ensuring that ground contact forces can be explained by foot placement,own_claim
constraining torque applied about an axis,own_claim
the high bar in Figure 1,data
limiting the coefficient of friction at any contact with the environment,own_claim
Linear time derivatives for physics constraints do not result from direct differentiation of the equations of motion in either the Newton-Euler or the Lagrangian formulation,own_claim
"in either case, symbolic differentiation would result in a quadratic time algorithm",own_claim
we describe how the Newton-Euler equations of motion can be rewritten to allow first derivatives of aggregate forces and torques to be computed in linear time,own_claim
it is not possible to compute derivatives for torques at all of the characters joints in linear time,own_claim
quadratic time is required,own_claim
motion at any joint affects torque at all joints,own_claim
typical objective functions,own_claim
are excluded from our restricted problem setup,own_claim
minimizing the sum of squared joint torques,data
Our results suggest,own_claim
that physics constraints and a kinematic measure of smooth motion,own_claim
are sufficient to capture dynamic effects,own_claim
minimizing the sum of squared joint accelerations,data
squashand-stretch,data
tucking for faster rotation,data
Figure 1,data
animator constraints,own_claim
can easily be incorporated into the system,own_claim
key poses,data
an objective based on proximity to a reference motion,data
no motion capture data is used in our examples,own_claim
user-supplied constraints are minimal,own_claim
Figure 7,data
"The characteristics of the final motions fall out of the requirements of physical validity, a simple kinematic optimization function, and timing values selected for each phase of the motion",own_claim
Constrained optimization techniques were introduced to the graphics community,background_claim
Witkin and Kass [1988],data
"who created a variety of animations involving a jumping Luxo lamp from simple descriptions including start pose, end pose, and a physically based objective function",background_claim
Optimization approaches with physically based objective functions have proven difficult to extend to complex articulated characters,background_claim
much research has been focused on this problem,background_claim
Cohen and his colleagues,background_claim
introduced techniques to give the user more control,background_claim
Cohen 1992,data
Liu et al. 1994,data
and employed a hierarchical wavelet description to allow incremental changes to affect the motion at different time scales,background_claim
Liu [1996],data
his dissertation,background_claim
also describes how symbolic differentiation of the equations of motion can be made efficient,background_claim
by cleverly aggregating terms,background_claim
"Grzeszczuk, Terzopoulos, and Hinton [1998]",data
"developed a neural network approximation of dynamics so that gradient search could be performed on this neural network, resulting in faster convergence to a solution",background_claim
Witkin and Kass [1988],data
The mix of animator control and physics,background_claim
has been expanded upon in interactive techniques developed to control physical simulations of rigid bodies,background_claim
Popović et al. 2000,data
a number of researchers have shown that the freefall portion of a dive can be efficiently optimized for a simplified character,background_claim
as can motions such as weight lifting and pushups,background_claim
Liu and Cohen 1994,data
Crawford 1998,data
Albro et al. 2000,data
Lo and Metaxas 1999,data
Brotman and Netravali [1988],data
Pandy and Anderson [2000],data
Optimal control techniques,background_claim
have been used with success,background_claim
for simulating human lower body motions,background_claim
optimal height jumping,data
walking,data
Running times were far from interactive,background_claim
show that optimization techniques can produce realistic motion for systems of human-level complexity,background_claim
Preexisting motion data can simplify the optimization process,background_claim
Full scale human motion can be optimized,background_claim
Liu and Cohen 1995,data
Rose et al. 1996,data
significant changes to motion capture data can be made by optimizing with a physically based objective function,background_claim
the character is reduced to the degrees of freedom most important for the task,data
closely spaced keyframes are available,data
only transitions between existing motion segments are required,data
Popović and Witkin [1999],data
physics does not dominate the motion,data
kinematic techniques can give the animator interactive control for motion editing,background_claim
Gleicher 1997,data
Lee and Shin 1999,data
Arikan and Forsyth 2002,data
The idea of physically valid motion has appeared in both graphics and robotics,background_claim
Dynamic filters have been developed for processing motion capture data for physical correctness,background_claim
Yamane and Nakamura 2000,data
Dasgupta and Nakamura 1999,data
Pollard and Reitsma 2001,data
"Physics constraints have been used to plan biped walking motions, exploiting the idea that dynamic equilibrium can be maintained by ensuring that the zero moment point",background_claim
lies within the support polygon of the feet,background_claim
Vukobratović 1970,data
Takanishi et al. 1985,data
Nagasaka et al. 1999,data
Similar ideas have also been developed in graphics,background_claim
Ko and Badler 1996,data
"who bend the torso of a character to reduce torques at the desired ZMP, and",background_claim
van de Panne 1997,data
who ensure that reasonable forces are available to accelerate the center of mass without creating angular acceleration,background_claim
Liu and Popović [2002],data
"some dynamic effects can be preserved by enforcing patterns of linear and angular momentum, which does not require computation of dynamic parameters",background_claim
it is possible to incorporate constraints on physics as efficiently as constraints on kinematic parameters and an O(D) algorithm for computing first derivatives of a broad range of physics constraints for improved performance in a optimization context,own_claim
Constrained optimization has been shown to be a very powerful approach for obtaining appealing dynamic motions from a minimal amount of input information,background_claim
"The user adjusts the problem description in the form of keyframes, constraints, and objectives",background_claim
an optimizer computes an optimal animation given this problem description,background_claim
the process repeats until the user obtains a final animation,background_claim
Figure 2,data
Enforcing physics constraints or minimizing a dynamic property such as sum squared joint torques requires an inverse dynamics computation at each time t i,background_claim
the inverse dynamics computation is relatively expensive,background_claim
many efficient algorithms exist,background_claim
the process is well known to require time linear in the number of degrees of freedom of the character,background_claim
typical choices for the numerical optimizer in Figure 2 also require derivatives of the constraints and objective function,background_claim
the sequential quadratic programming algorithm,background_claim
Witkin and Kass 1988,data
makes use of first derivatives of the constraints,background_claim
and both first and second derivatives of the objective function,background_claim
"a broad range of physics constraints can be expressed based on aggregate forces and torques applied to the character, and how expressing physics constraints in this way allows us to compute the constraint Jacobian in linear time",own_claim
Section 4,data
"With this objective function and our linear time algorithm for computing the constraint Jacobian, we are able to show that physically based optimization can be performed for a 22 degree of freedom character at interactive speeds",own_claim
Constraints that enforce physical validity can be formulated as linear equality or inequality constraints on aggregate force,background_claim
One way of enforcing correct physics during flight is to ensure that the aggregate momentum of the body remains constant throughout the flight phase,own_claim
the constraint Jacobian that results from constraining momenta is denser than necessary,own_claim
the control points that determine take-off affect all constraint equations governing the flight phase,own_claim
A more elegant solution is to restrict illegal forces during flight,own_claim
"During flight, no forces, with the exception of gravity, may be derived from the environment",own_claim
the character is swinging on a high bar or monkey bars,data
the amount of torque that can be applied about the bar axis is constrained,own_claim
"During ground contact, the feet can only push, not pull on the ground",own_claim
contact forces should not require an unreasonable amount of friction,own_claim
the center of pressure must fall within the support polygon of the feet,own_claim
These effects can be modeled with equations that constrain the linear and angular forces separately,own_claim
Coulomb’s model dictates that the linear reaction force must fall within a friction cone oriented along the contact normal with angular half-width tan −1 μ,background_claim
The inequality constraint for the linear aggregate force is,own_claim
cos −1 N · a f 0 a &lt; tan −1 μ,own_claim
|f 0 |,own_claim
Aggregate force is translated to a constraint point c as follows,own_claim
f c = f f b c c a = f b 0 − c f a 0 0 × f a 0,own_claim
The bar contact constraint can,own_claim
be expressed as,own_claim
− τ max &lt; s bar · f b c &lt; τ max,own_claim
the constraint without the inverse trigonometric functions is,own_claim
N |f · a 0 f | a 0 &gt; ( μ 1 2 + 1),own_claim
The magnitude of the normal force can be constrained as follows,own_claim
0 ≤ f a 0 · N ≤ K orce,own_claim
f,own_claim
Contact torques are constrained by geometrically confining the center of pressure to the support area,own_claim
computing derivatives on the physics constraints becomes a problem of differentiating aggregate force with respect to the free parameters of the problem,own_claim
all physics constraints have been expressed as constraints on aggregate force,data
"At any time t, character position q, velocity q,  ̇ and acceleration q  ̈ are known",own_claim
is the most difficult term in this expression,own_claim
The term ∂ f 0 / ∂ q,own_claim
straightforward analytical computation of the force Jacobian would require time quadratic in the number of degrees of freedom of the character,own_claim
joint torques are not required,data
this value and first derivatives for constraints based on this value can be computed in linear time,own_claim
our paper is the first to present a linear time algorithm for computing the force Jacobian for an articulated character or robot,own_claim
We use spatial notation as in,own_claim
for conciseness,own_claim
Featherstone [1987],data
into single vectors,own_claim
It combines linear and angular quantities,own_claim
Equations 1 through 3,data
"Efficiently computing ∂ f 0 / ∂ q, the force Jacobian, requires efficiently computing ∂ p 0 / ∂ q, the momentum Jacobian",own_claim
aggregate force f 0 is the time derivative of aggregate momentum p 0,own_claim
the momentum Jacobian can be computed in linear time,own_claim
The usual way to compute aggregate momentum is to formulate the following recursion,background_claim
v i = X i i−1 v i−1 + s i q  ̇ i,background_claim
p i = X i+1 i p i+1 + I i v i,background_claim
Parameter q i appears in the coordinate transforms X i i+1 and X i+1 i,own_claim
"every v j for j &gt; i depends on q i , and every p j for j ≥ 0 depends on q i",own_claim
Unrolling the recursion to collect terms for ∂ p 0 / ∂ q i requires O(D) time,own_claim
There is no clever way to simplify the calculation by aggregating terms,own_claim
it is presented in this form,data
this approach will lead to an O(D 2 ) computation for the momentum Jacobian,own_claim
rewriting the recursion solves this dilemma,own_claim
I ∗ i = X i+1 i I ∗ i+1 X i+1 i + I i,own_claim
p i ∗ = X i i+1 p ∗ i+1 + I i ∗ v i,own_claim
p 0 = p ∗ 0,own_claim
only propagation from leaf to base is required,own_claim
each parameter q j does not affect terms computed for joints j + 1 and beyond,own_claim
"p ∗ i is expressed as a function of v i , which is a local variable at link i",own_claim
Figure 4,data
p ∗ i is in general not equal to p i if i = 0,own_claim
A term superscripted with an asterix should be treated only as an intermediary quantity,own_claim
its subscript is zero,data
it is the desired aggregate result,own_claim
A linear time expression for the momentum Jacobian can be derived in a straightforward manner based on this form of the recursion,own_claim
"we are not simplifying or changing the outcome of the dynamics computation, only changing the order in which terms are computed",own_claim
Aggregate momentum p 0 and the momentum Jacobian are exactly the same in both formulations,own_claim
"In a traditional inverse dynamics formulation, accelerations and forces are expressed as the time derivatives of Equations 11 and 12",background_claim
a i = X i−1 i a i−1 + s i q  ̈ i + v i ×s ˆ i q  ̇ i f = X i+1 i f i+1 + I a + v ×I ˆ v,background_claim
"For fast computation, we instead take the time derivative of Equation 14, which results in",own_claim
f ∗ = X i i+1 f i+1 ∗ + v ×p ˆ ∗ + I ∗ a +  ̇ I ∗ v,own_claim
This equation has the properties we are looking for,own_claim
f ∗ i is in general different from the actual joint force f i if i = 0,own_claim
terms are propagated from leaf to base only,own_claim
Differentiating Equation 18 and accumulating the coefficients of derivative elements results in the simplified form,own_claim
Appendix B,data
"Each partial derivative of the aggregate force with respect to joint positions, velocities, and accelerations may be obtained in constant time",own_claim
the full Jacobian may be obtained in linear time,own_claim
Numerically the partial derivatives are identical,own_claim
The articulated model is a serial chain ranging from 3 to 50 links,own_claim
the proposed method is linear in the degrees of freedom,own_claim
direct differentiation shows quadratic growth,own_claim
the linear time method shows a computational advantage with as few as 5 degrees of freedom,own_claim
overheads in computing aggregate intermediate terms,own_claim
there is a cost to this approach that may be higher for robotics applications than for graphics applications,own_claim
"In robotics, this information must be computed",own_claim
it corresponds to signals sent to the motors of the robot,own_claim
"In a standard Newton-Euler formulation, force parameter f i",background_claim
contains all of the joint force information for joint i,background_claim
Equation 17,data
It must in general also be part of optimization routines,own_claim
en- ergy consumption and joint torque limits are of particular concern when operating a robot,own_claim
none of the joints can be ignored,own_claim
many of the effects we expect to see in physically based optimization do not depend on joint torques,own_claim
animation of human motion,data
physical correctness and optimization functions enforcing smooth motion are sufficient to obtain many natural characteristics of human motion,own_claim
some torques,data
are found to be important,data
many others,own_claim
can be ignored for many motions,own_claim
a subset of K torques are required,data
it is straightforward to extend our approach to measure torques at these joints in O(KD) time,own_claim
One traditional approach is to use the integral of the sum of squared joint torques to produce a motion that approximately minimizes energy expenditure,background_claim
"h(x) = t f ∑ D τ i 2 (x,t) dt t=t s i=1",background_claim
This function is expensive,background_claim
computing its gradient requires O(D 2 ) work,background_claim
Adopting this function would negate our effort in constructing efficient physics constraints,own_claim
"An objective function that we have found to work well is to minimize the integral of the sum of squared, weighted joint accelerations",own_claim
"h(x) = t f ∑ D w q  ̈ (x,t) 2 dt",own_claim
i i t=t s i=1,own_claim
"the analytical Hessian for this objective function is constant, symmetric, positive definite, and band-diagonal",own_claim
a simple objective function with low cost is to simply minimize the distance from the reference motion,own_claim
a reference motion q R (t) is available,data
"h(x) = t=t t f s (q(x,t) − q R (t)) 2 dt",own_claim
This objective function is similar to the one used in,own_claim
Gleicher [1997],data
Other objective functions we have attempted include an integral of squared contact forces,own_claim
h(x) = t f f c 2 (t) dt t=t s,own_claim
The Jacobian of this function is computable in linear time,own_claim
Gaits generated using this function have a certain ‘tip-toe’ quality to them,own_claim
the function minimizes the amount of reaction force derived from the contacts,own_claim
Minimizing contact jerk,own_claim
can be achieved using forward differences,own_claim
m−1 h(x) = ∑ ( f c (t i ) − f c (t i+1 )) 2 i=1,own_claim
appears very unstable at landing,own_claim
The initial motion,own_claim
top row of Figure 6,data
The character would fall over,own_claim
This effect is eliminated in the optimization by enforcing the physics constraints of ground contact,own_claim
Figure 7,data
All of these effects are obtained as a result of the optimization process,own_claim
a number of time slices,own_claim
equal to the number of control points produced good results and did not need to adjust this value for individual motions,own_claim
Finer time slices would overly constrain the system,own_claim
sparser time slices allowed too much freedom for error,own_claim
Two implementation issues were especially important for achieving the results described in this paper,own_claim
the basis functions have local influence,data
the vector and matrix quantities computed during optimization are very sparse,own_claim
We use the publicly-available Lancelot optimization package,own_claim
where sparsity is accounted for by groupseparability,own_claim
Conn et al. 1992,data
Implementing any inverse dynamics algorithm requires selecting a character root,own_claim
An ability to move the effective root to different parts of the character is very convenient,own_claim
there is a single point of constraint between the character and the environment,data
that point has a known and fixed trajectory,data
it is convenient to place the,own_claim
character root at that point,own_claim
"it may be convenient to root the character at the hands for the swing, at the center of mass for flight, and at the feet for landing",own_claim
swing example of Figure 1,data
"In a Newton-Euler inverse dynamics formulation, rerooting is typically done by changing parent / child relationships, which requires inverting joint angles and transforms at each joint and altering the flow of dynamic terms from leaves to root",background_claim
Both of these changes complicate the problem description presented to the optimizer,background_claim
The effective root can be relocated more easily,own_claim
by leaving the actual root and the flow of the dynamics computation fixed and computing velocities and accelerations at the root to maintain the desired constraint,own_claim
Appendix C,data
This paper contributes to physically based optimization by defining and exploring a restricted class of optimization problems where physics constraints are included and first derivatives of constraints and objective functions can be computed in linear time,own_claim
The fact that first derivatives can be computed in linear time instead of quadratic time suggests that our problem is simpler than previous physically based approaches and similar in complexity to very successful kinematic approaches,own_claim
"our solution landscape will be smoother than previous physically based optimization approaches, making it feasible to handle more complex characters",own_claim
the optimization does not converge,data
we can usually trace it back to the problem setup,own_claim
Sometimes it is due to overconstrained equations,own_claim
often it is due to overly restrictive parameters,own_claim
friction coefficients,data
joint limits,data
poor selection of timings,data
"At present, timings are set by the user and their values need to be reasonable",own_claim
Any optimization technique that makes use of local derivatives has potential problems with local minima,own_claim
an expected motion sequence could be thought of as motion about some neutral position,data
the character was started in that neutral position,data
there was no problem descending toward the expected minimum,own_claim
We were able to create a jumping Luxo and highly dynamic human motions with good success,own_claim
less dynamic activities,data
our system would require additional input,own_claim
physics constraints plus smooth motion would not in general produce the desired results,own_claim
stand for 5 seconds,data
our system would identify a static pose near the initial guess where the projection of the center of mass is in support area,own_claim
Additional information would be required to fill in the details of the standing motion,own_claim
activities where joint torque limits are important,data
this torque information must be taken into account to produce good results,own_claim
Minimizing accelerations while maintaining physics constraints would produce a result that was valid for the body as a whole but would require non-zero torques at the joints,own_claim
no whipping motion would be seen,own_claim
Minimizing sum squared torques would produce the desired results,own_claim
"More commonly, a limited set of torques or energy terms may be importan",own_claim
the peg running motion appears very athletic,own_claim
it would require high torques at the knee and hip joints,own_claim
physical parameters at certain joints are identified as important,data
"our method can be extended to provide and differentiate these parameters for any K joints with running times of O(KD), reaching the expected bound of O(D 2 ) when all joint torques are required",own_claim
An interesting research problem is to determine automatically when torques at a given joint should be considered,own_claim
Running on flat ground shows a combination of difficulties,own_claim
"To make this motion appear more natural, we would need to consider proper timing for the running stride, a more accurate foot model, torques at some of the joints, and perhaps also aspects of style that are not driven by physics or energy",own_claim
Complexity in the number of degrees of freedom of the character is not the only concern in physically based optimization,own_claim
The number of free parameters of the optimization problem also grows linearly with total time allotted for the animation,own_claim
"Liu, Gortler, and Cohen",background_claim
Liu et al. 1994,data
have shown that time complexity can be effectively managed in an optimization context,background_claim
the influence of any one parameter is localized in time,background_claim
It is interesting to compare our approach to that,own_claim
Liu and Popović [2002],data
Their paper describes the power of patterns,background_claim
in creating desirable animation effects,background_claim
their approach could be adapted easily to obtain linear time performance by rewriting the momentum equations,own_claim
The idea of dynamic patterns is an exciting one,own_claim
relying on momentum patterns without computing interaction forces between the character and the environment may result in problems with certain types of physics constraints,own_claim
the initial motion is not favorable,data
it is possible to optimize motion with physics constraints in an efficient manner,own_claim
reasonable friction conditions,own_claim
can be easily enforced,own_claim
the combination of correct physics and knowledge of natural dynamic patterns of human motion such as momentum or movement of the center of pressure in the roll of the foot on the ground could be very powerful,own_claim
the main advantage of our approach may be as part of a more complete animation system,own_claim
the ability to enforce physics constraints efficiently should be just one of the tools available to the animator,own_claim
"Details of the desired motion could be fleshed out using motion capture data, procedural techniques, keyframes, and/or objective functions appropriate to the specific task",own_claim
physics constraints can be enforced in an efficient manner,own_claim
Incorporating physics constraints into traditionally kinematic animation approaches is one direction of future work,own_claim
Authoring human motion is difficult for computer animators,background_claim
humans are exceptionally sensitive to the slightest of errors,background_claim
This process involves an animator providing a control specification which is mapped to a target motion by some means,background_claim
"the keyframes are the control specification, and the target motion is achieved through spline interpolation",background_claim
In traditional keyframe animation,background_claim
techniques have been developed that allow desired target motion to be specified using a human performance,background_claim
advances in data acquisition technology and computational power,background_claim
"This is natural for traditional keyframe animators, who often use recorded or live human motion for reference",background_claim
Motion capture is the most direct method to map performances to animated humans,background_claim
it is essentially an identity mapping,background_claim
a generalization of this approach to allow for more indirect mappings creates an array of fantastic possibilities,background_claim
mapping voice signals to facial motion,background_claim
Bra99,data
gestural actions to animated reactions,background_claim
JP99,data
Indirect mappings,background_claim
must still be encoded in some way,background_claim
"Manually, this can be an exceptionally challenging task requiring detailed, domain-specific knowledge",background_claim
The mapping from leader to follower motion must minimally encode a significant amount of knowledge about the structure of the dance,background_claim
this knowledge,background_claim
would be out of reach to an animator who is not a skilled dancer,background_claim
it would still be difficult for a skilled dancer to state the precise mapping,background_claim
Human dancers learn their skills by observation and practice,background_claim
"To learn indirect mappings, we adopt a memory-based approach which implicitly encodes the desired mapping using a database of semantically meaningful example instances",own_claim
our objective is to emulate this process on a computer for situations,own_claim
when the control specification takes the form of one dancer’s motion,own_claim
partner dance,data
"These instances store segments of synchronized control and target motion, which provide examples of how the mapping should be applied to input control motions",background_claim
"In partner dance, an instance might contain an example control motion of a leader pushing his or her partner forward",background_claim
"The corresponding example target motion would be that of the follower, taking a step backward in response",background_claim
"Through the mapping instances, a given interpretation also corresponds to a sequence of target segments that can be assembled to form a target motion",background_claim
We use dynamic programming to select a sequence that balances the quality of interpretation with the continuity of the induced target motion,own_claim
Various postprocessing techniques can be then be applied to smooth and adjust the desired target motion,own_claim
Our approach is evaluated on two applications,own_claim
we demonstrate its ability to map low-dimensional input to high-dimensional motion by controlling walk motion from mouse trajectories,own_claim
"we highlight our method’s capability to handle complex, stylized mappings by controlling a dance follower with the motion of a dance leader",own_claim
"Performance-driven animation, or computer puppetry, derives its broad appeal from its ability to map human performances automatically to animated characters",background_claim
Stu98,data
these mappings can be as simple as a direct copy of joint angles,background_claim
the ability to discover more complex mappings gives the approach a tremendous amount of power and flexibility,background_claim
In online techniques,background_claim
JP99,data
computational speed and instantaneous results are of paramount importance,background_claim
offline techniques,background_claim
Bra99,data
allow quality and global optimality to take precedence,background_claim
Complex mappings often defy purely physical or mathematical encodings,background_claim
many methods assume that mappings are described by parametric probabilistic models,background_claim
Bra99,data
DB01,data
DYP03,data
JP99,data
An advantage of these techniques is their ability to generalize to a variety of inputs,background_claim
this comes at a price,background_claim
statistical learning often necessitates large volumes of training data or severe restrictions on model complexity,background_claim
"For certain applications, this is a worthwhile tradeoff",background_claim
"for others, it can result in impractically long training times or loss of important detail",background_claim
A memory-based approach like ours does not suffer from these disadvantages,own_claim
"An important benefit of this design choice is the ability to use segments, rather than frames, as the primitive unit of motion",own_claim
This allows for explicit preservation of higherlevel motion semantics,own_claim
Kim et al. demonstrate that a semantically guided segmentation of rhythmic motion allows for highly realistic motion synthesis,background_claim
KPS03,data
this work,background_claim
uses partner dance for evaluation,background_claim
it does not address the problem of generating a follower given the motion of a leader,background_claim
"In the segment modeling domain, we consider our method most similar to that of Pullen and Bregler",own_claim
PB02,data
Pullen and Bregler’s method was shown to be an effective solution for the chosen application of texturing keyframed motion,background_claim
its applicability to our problem is limited by several factors,background_claim
their method assumes no spatial dependencies between the control,background_claim
and the target,background_claim
"there is no enforcement of motion continuity, other than a heuristic for consecutively observed segments",background_claim
Our approach generates target motion segments that are amenable to simple blending,own_claim
"their method assumes that the input motion can be presegmented analogously to the examples, which is achieved in their work by observing sign changes in velocity",background_claim
One could extend this approach for rhythmic motions using the automated approach of Kim et al,background_claim
KPS03,data
In the general case,background_claim
a control motion may not admit any intuitive presegmentation,background_claim
Our method requires no presegmentation,own_claim
it produces a semantically guided segmentation as part of the optimization,own_claim
"In this context, our algorithm could be viewed as an extension of speech recognition methods that use connected word models",own_claim
RJ93,data
Arikan et al. describe an example-based approach to synthesizing human motion that satisfies sparse temporal annotation and pose constraints,background_claim
AFO03,data
their work differs from ours in intent,background_claim
they also employ a dynamic programming algorithm that optimizes a weighted combination of interpretation and motion continuity,background_claim
Our formulation differs in two subtle but important ways,own_claim
our notion of continuity is dependent on the interpretation,own_claim
their objective function is defined over frames instead of segments,background_claim
they must use coarse-to-fine iterations of their dynamic programming algorithm to gain the temporal consistency that is intrinsic to our segment-based approach,background_claim
Other related methods based on motion capture clip rearrangement include work by Kovar et al,background_claim
KGP02,data
Lee et al,background_claim
LCR ∗ 02,data
and Arikan and Forsyth,background_claim
AF02,data
these do not aim to discover control by example,background_claim
they have nevertheless provided inspiration for our work,own_claim
these methods do not use continuous control from human performance and focus on sparser specifications,background_claim
Our method is not designed to handle such control specifications,own_claim
"should be viewed as an alternative to these approaches, rather than a replacement",own_claim
Many motion rearrangement techniques are derived from previous work in texture synthesis,background_claim
we consider our work most similar in intent to image analogies,own_claim
HJO ∗ 01,data
"This method, given an unfiltered and filtered version of the same image, applies an analogous filter to a novel image",background_claim
"Our method, given a set of synchronized control and target motions, applies an analogous mapping to a new input control motion",own_claim
"Image analogies was shown to be an elegant method with applications such as texture transfer, textureby-numbers, and super-resolution",background_claim
Our dance evaluation suggests an alternative view of our method as one of interaction modeling,own_claim
"In this domain, tech- niques have been developed that specify the mappings between character motions with explicit models of character interaction",background_claim
"Adaptive autonomous characters have used rules to exhibit complex flocking, herding, and locomotory behaviors",background_claim
Rey87,data
TT94,data
Approaches to explicit interaction modeling have included layered architectures,background_claim
BG95,data
procedural descriptions,background_claim
PG96,data
and even cognitive models,background_claim
FTT99,data
"In this context, our work might be viewed as a competency module that enhances the skills of characters to enable their participation in complex interactive performances",own_claim
Each frame of motion is encoded by a point cloud,own_claim
human motion,data
we use skeletal joint positions,own_claim
this representation provides a more intuitive space than joint angle representations for comparing poses,background_claim
KGP02,data
point cloud representations allow for generalization to control motions without skeletal representations,own_claim
they are a basic unit of interaction for the specific type of dance,own_claim
Our dance motions are segmented into two-beat rhythm units,own_claim
Figure 1,data
"In both cases, we use manual transcription",own_claim
each example motion must only be segmented once,own_claim
Our walk motions,own_claim
are segmented according to gait cycles,own_claim
Methods exist to automate this process,background_claim
Dance motion could be segmented using motion beat analysis,background_claim
KPS03,data
More general motions could be segmented using annotation,background_claim
AFO03,data
or curve clustering,background_claim
CGMS03,data
This is achieved by selecting a sequence of appropriate target segments from the database,own_claim
"To make the database motions more flexible, we allow each selected target segment to be spatially transformed and uniformly stretched in time",own_claim
The proper selection of segments can be achieved using an efficient dynamic programming algorithm,own_claim
"M(x, a s T ) is a rigid transformation that optimally aligns x and a s T",own_claim
We quantify the similarity of the input motion x and a control segment a s with a distance function,own_claim
"D(x, T s ) ≡ − s T )a s T 2",own_claim
"a x M(x, a",own_claim
2,own_claim
"M(x, a s T ) ≡ arg min M x − Ma s T",own_claim
"This optimization is the solution to the Procrustes problem, which has several efficient numerical solutions",background_claim
ELF97,data
our example dance and walk motions only differ by ground translation and vertical rotation,own_claim
our implementation uses a closed form solution,own_claim
KGP02,data
"To compute the optimal interpretation, we determine the segment a s ∗ that is most similar to the input motion",own_claim
"s ∗ = arg min s D(x, a T s )",own_claim
"The index s ∗ also identifies, by construction of the database, an appropriate target b s ∗ for both the control segment a s ∗ and the input motion x",own_claim
"The stretch T completes the specification of the optimal interpretation, M(x, a T s ∗ )a T s ∗ , and the optimal target, M(x, a T s ∗ )b T s ∗",own_claim
Figure 2,data
The optimal target may not precisely satisfy desired physical or kinematic constraints,own_claim
"given a descriptive database, it can provide a good approximation which can be adjusted appropriately during postprocessing",own_claim
"In practice, we limit the allowed amount of uniform time stretch by a constant factor",own_claim
the distance metric does not distinguish between motions of varying speed,own_claim
A dancer that pushes his partner slowly,own_claim
will elicit quite a different response if he pushes quickly,own_claim
Limiting the amount of stretch also has the practical benefit of reducing the search space of our general algorithm,own_claim
we must handle the case where the optimal control and target consist of a sequence of segments,own_claim
"We can specify this sequence analogously to the single segment case by the number of segments L ∗ , the segment indices s ∗ 1 , . . . , s ∗ L , and the segment durations d 1 ∗ , . . . , d L ∗",own_claim
the distance metric D evaluates the interpretation quality of each segment in the sequence,own_claim
the quality of the interpretation alone does not account for the continuity of the target motion,own_claim
Figure 3,data
"To offset this problem, we introduce a function which measures the continuity between segments v and w",own_claim
"C(v, w) = ω(v) − α(w) 2",own_claim
One could also use more frames to measure higher-order continuity,own_claim
we define a scoring function that accounts for both the quality of interpretation and the continuity of the target,own_claim
"a sequence specification L, s 1 , . . . , s L , and d 1 , . . . , d L",data
"L L−1 ∑ D(x i , a s d i i ) + k ∑ C M i b s d i i , M i+1 b s d i+1 i+1",own_claim
i=1 i=1,own_claim
The optimal substructure property of the score function,own_claim
can be used to find a globally optimal solution using dynamic programming,own_claim
"Q s,d [t] = min r,c Q r,c [t − d] + D(x d,t , a s d )",own_claim
"a + kC(M r,c,t−d b r c , M s,d,t b d s )",own_claim
"Q s,d [d] = D(x d,d , a s d )",own_claim
"By minimizing Q s,d [T ] over all s and d, we can compute the score of the optimal sequence specification and recover it by backtracking",own_claim
"To solve the recurrence efficiently, values of Q are stored in a two-dimensional array",own_claim
"we are currently processing the array cell Q r,c [t]",data
"For each legal combination of s and d, the candidate value z is computed",own_claim
"z = Q r,c [t] + D(x d,t+d , a s d ) + kC(M r,c,t b r c , M s,d,t+d b d s )",own_claim
"the value in the array cell Q s,d [t + d] is greater than z",data
"we set it to z and store a backpointer to cell Q r,c [t]",own_claim
"By continuing this process, the entire array is filled",own_claim
the indexing of each cell encodes a segment identifier and duration,own_claim
the optimal sequence specification can be recovered by following backpointers from the best score at time T,own_claim
processing an individual cell is an O(P) operation,own_claim
the total asymptotic time complexity of the algorithm is O(P 2 T ),own_claim
"To increase its efficiency, we apply several heuristic optimizations",own_claim
"we only process cells with scores less than min s,d Q s,d [t] + w",own_claim
cells with worse scores are unlikely to be on the optimal backtracking path,own_claim
can be pruned from the search,own_claim
the time complexity of the algorithm scales quadratically with the database size,own_claim
the number of instances is large,data
this leads to inefficiency,own_claim
"To resolve this issue, redundant instances are eliminated using complete-linkage clustering",own_claim
DHS00,data
The advantage of complete-linkage clustering over other methods,own_claim
is that it explicitly limits the distance of any two instances in a cluster by a user-defined threshold,own_claim
An additional benefit of this process is that it helps beam search,own_claim
clustering reduces ambiguity in interpretation,own_claim
a larger proportion of search paths can be pruned,own_claim
High sampling rates are common for systems such as motion capture,background_claim
they are generally unnecessary for interpreting the input control motion,own_claim
"By downsampling motions by a user-chosen constant, we can effectively reduce the length of the input sequence",own_claim
the resulting optimal sequence specification will also be at the lower frame rate,own_claim
it is generally desirable to have it at the frame rate of the original input,own_claim
Simple upsampling often introduces slight but undesirable temporal errors,background_claim
"To remedy this, we run a highly constrained version of our dynamic programming algorithm that only adjusts the durations appropriately",own_claim
Constraints can be easily encoded by making appropriate cells in the Q array illegal,own_claim
"we can force the result to contain a certain target segment b s at some time t by disallowing any processing on cells Q r,c [u]",own_claim
the output of our optimization is a specification of an appropriate target motion in terms of target segments in a database,own_claim
"it provides a sequence of target segment indices s ∗ 1 , . . . , s L and durations d 1 ∗ , . . . , d L ∗",own_claim
"The corresponding target segments can be copied from the database, stretched, transformed by the induced matrices M ∗ 1 , . . . , M ∗ L , and concatenated",own_claim
The result is a moving point cloud that approximates the desired result,own_claim
"the same selections, stretches, and transformations can just as easily be applied to the source motions that generated the point cloud",own_claim
"From the perspective of motion synthesis, the main problem with our approach is that the raw result will generally contain some kinematic errors",own_claim
"In our dance example, footplant and handhold constraints are never explicitly enforced",own_claim
"For such constraints, existing methods can be applied to postprocess the data",own_claim
KSG02,data
such methods often require some amount of manual constraint annotation,own_claim
we can propagate constraints by example,own_claim
each example instance can be annotated with constraints that can be transferred to the target motion,own_claim
Figure 4,data
our goal is to provide motion that is amenable to postprocessing with these approaches,own_claim
"it can generate realistic and compelling motion, even with extremely simple postprocessing",own_claim
do not show the full ability of our technique to discover complex mappings,own_claim
Walk motions,own_claim
we apply our method to a partner dance called Lindy Hop,own_claim
we animate a realistic walking human from time-sampled mouse movement,own_claim
standard commercial tools were used to estimate joint positions,own_claim
Vic03,data
these endeffectors were sufficient to evaluate interpretation and continuity in both evaluations,own_claim
"For the point cloud representation of body motion, we used only the positions of the hands and feet",own_claim
We acquired 2 minutes of motion captured walk footage at 30 Hz,own_claim
We artificially constructed a synchronized example control motion by projecting the positions of the hip joints onto the floor and normalizing their distance,own_claim
larger values of the continuity constant were more effective,own_claim
short walks,data
the generated motion was highly realistic,own_claim
The frequency of the generated gait cycle nearly matched the frequency of the source,own_claim
phase differed,own_claim
the generated motion might choose to start on the left foot,own_claim
the original source motion might start on the right,own_claim
This was expected,own_claim
the control signals did not encode any phase information,own_claim
longer walks,data
the generated motions often kept in nearly perfect phase with the source,own_claim
the subject preferred to make sharp turns with the same footwork pattern,own_claim
These served as synchronizing signals which were propagated throughout the generated gait cycle due to the global optimization,own_claim
"With the beam search optimization on, we were able to reduce the clock time of the algorithm to 1.2 seconds",own_claim
while retaining visually perfect results,own_claim
The upsampling and postprocessing times remained the same,own_claim
We ran the algorithm on shorter and longer inputs and experimentally confirmed the asymptotic linear dependency of running time on input length,own_claim
Section 4.4,data
"In our second evaluation, we built an interface that allowed users to draw paths using mouse input",own_claim
Figure 5,data
"For a wide variety of user inputs, our method was capable of generating highly realistic walking motion",own_claim
the timing of the path was important,own_claim
users required minor training to understand the concept of performing a path instead of drawing it,own_claim
It was often tempting,own_claim
to rapidly move the mouse to draw a straight line,own_claim
"To resolve these issues, our interface allows a user to overlay the playback of an existing motion on the drawing canvas to get a sense of speed",own_claim
it provides options to smooth the trajectory spatially and temporally,own_claim
The speed of the algorithm allows for rapid feedback,own_claim
Our choice of partner dance as a demonstration was primarily motivated by the complexity of its style and mappings,own_claim
Generating partner dance motion would be a difficult trial for both physical methods,own_claim
and statistical methods,own_claim
would yield underdetermined systems,own_claim
would typically require a very large database in place of our small segmented one,own_claim
Swing dance also allows for a more principled evaluation of our results than most types of motion,own_claim
the performance of the algorithm at generating valid mappings can be evaluated independently of style considerations or subjective judgments of motion quality,own_claim
Basic Lindy Hop motions switch between these four stances by means of transitions,background_claim
A dance couple moves between four basic stances,own_claim
open (◦),data
closed (•),data
open crosshand (◦),data
closed crosshand (•),data
an inside turn ( ),data
an outside turn ( ),data
a simple step (→),data
"At the end of each transition, the dancers may also change their handhold to instantly transition between crosshand states (◦, •) and non-crosshand states (◦, •)",own_claim
"Each of these transitions occurs over four beats of music, which are assembled from two-beat segments",own_claim
Skilled Lindy Hop dancers use a greater variety of moves,background_claim
we constructed a smaller database with seven basic 8-beat dance patterns that every Lindy Hop dancer knows,own_claim
We did not include the entire range of motions,own_claim
first column of Table 1,data
Their improvisations led to dances which included thirteen new 8-beat patterns not found in the database,own_claim
last column of Table 1,data
as well as some repeats of patterns in the database,own_claim
"Visually, the results exhibited the fluidity, grace, and style of the original dancer",own_claim
Some footskate and handhold violations are visible,own_claim
we wanted to show the output in its almost raw form,own_claim
"In a direct comparison with the actual follower motions, we found that the synthetic follower matched very well in closed stances",own_claim
"In open stances, the follower was much freer to include stylistic variations",own_claim
the generated motions often differed visually from the actual motions,own_claim
the synthesized dancers almost always kept in perfect rhythm with the leader,own_claim
Our algorithm ably recreated the semantics of the leader to follower mapping,own_claim
the algorithm encountered a pattern that was not in the database,data
it was able to correctly reconstruct the novel sequence by rearranging the two-beat segments,own_claim
"in our three test dances, the synthetic dancer matched the pattern of the actual dancer in all but 5 cases",own_claim
Of the 91 patterns,own_claim
Figure 6,data
the algorithm did differ from the real dancer in the composition of the pattern,data
the leader and follower still executed a valid Lindy Hop pattern,own_claim
"In these misinterpreted instances, the leader’s motion is quite similar across two different follower patterns",own_claim
"To disambiguate these, we might add information to the control signal",own_claim
or we might accept these rare mismatches,own_claim
forceplate readings,data
they are,own_claim
valid mappings,own_claim
all 5 mismatched patterns differed by a single two-beat segment,own_claim
"of 91 × 4 = 364 two-beat segments in the test dances, the algorithm misinterpreted the signal in 5 cases for an error rate of less than 2%",own_claim
we were able to drive the runtime of the dynamic programming to 10 seconds while maintaining excellent visual and semantic results,own_claim
beam search enabled with modest parameters,data
clock times scaled linearly with the length of the input,own_claim
We have presented a method for example-based performance control of human motion,own_claim
Our dynamic programming algorithm uses segments of motion along with an objective function that accounts for both the quality of control interpretation and the continuity of the target motion to generate visually and semantically correct motions,own_claim
The algorithm generated semantically correct partner motion even from test sequences of leader motions that did not appear in the training set,own_claim
"Our dynamic programming algorithm performs a global optimization, which precludes the local decisions that are required for online applications",own_claim
it can compute results significantly faster than input motion can be recorded,own_claim
making it suitable for rapid-feedback motion authoring applications,own_claim
segmental approaches like ours hold great promise for real-time performance-driven animation,own_claim
"To preserve spatial dependencies in mappings, we apply rigid transformations to optimally align control segments with input control motions",own_claim
Target segments inherit these transformations,own_claim
This approach is effective for our applications or whenever the control signal indicates appropriate spatial and temporal cues,own_claim
It is also possible to select other transformations for applications outside the domain of human motion control,own_claim
allowing arbitrary homogeneous transformations in two dimensions might form an alternative segmental solution to the curve analogies prob- lem,own_claim
HOCS02,data
Eliminating transformations entirely might also be appropriate for applications such as synthesis of facial motion from speech signals,own_claim
Bra99,data
our segment similarity metric is effective for our experiments,own_claim
other metrics may be more appropriate for different types of motion,own_claim
it is a promising direction for future research,own_claim
The entire process,own_claim
relies on the availability of semantically segmented examples,own_claim
"For our evaluations, we were able to perform this segmentation manually by tapping a key in response to the rhythm of music or the gait pattern of a walk cycle",own_claim
specific methods exist to automate this segmentation for the cases of dance and walk,own_claim
a more general method is desirable,own_claim
we could begin with a few manually segmented examples and grow the set of example instances by iterative application of our algorithm,own_claim
This approach would be similar in spirit to the semiautomatic SVM-based annotation approach of Arikan et al.,own_claim
AFO03,data
our method could be used for interpretation rather than control,own_claim
it is possible to annotate any new control motion given a set of labeled example instances,own_claim
This could be used to transcribe the motion into a symbolic representation,own_claim
or even Laban notation,own_claim
Hut73,data
Such a representation could then be analyzed or summarized using natural language processing techniques,own_claim
Motion is one of the most important ingredients of CG movies and computer games,background_claim
"Obtaining realistic motion usually involves key framing, physically based modelling or motion capture",background_claim
Creating natural looking motions with key framing requires lots of effort and expertise,background_claim
physically based modelling can be applied to simple systems successfully,background_claim
"generating realistic motion on a computer is difficult, particularly for human motion",background_claim
A standard solution is motion capture,background_claim
It is very hard to obtain motions that do exactly what the animator wants,background_claim
The biggest drawbacks of motion capture are,background_claim
This allows other CG characters to be animated with the same motions,background_claim
"leading to realistic, “human looking” motions for use in movies or games",background_claim
Satisfying complex timed constraints is difficult and may involve many motion capture iterations,background_claim
motion data for an approximate skeletal hierarchy of the subject is recorded and then used to drive a reconstruction on the computer,background_claim
being at a particular position at a particular time accurately,data
synchronizing movement to a background action that had been shot before,data
Most motion capture systems are very expensive to use,background_claim
the process is time consuming for actors,data
technicians and motion data tends not to be re-used,data
the motion data needs to be made re-usable,background_claim
make motion capture widely available,data
There are three natural stages of motion synthesis,background_claim
using previous motion capture data to generate new motions,data
certain requirements are met,background_claim
transferring motions from one skeletal configuration to another,data
we can animate multiple figures with the same motion without it looking “funny”,background_claim
the directors can have higher level control over the motion,background_claim
changing the style of the motion,data
Obtaining motion demands involves specifying constraints on the motion,background_claim
the length of the motion,data
where the body or individual joints should be,data
what the body needs to be doing at particular times,data
"These constraints can come from an interactive editing system used by animators, or from a computer game engine itself",background_claim
Generating motion involves obtaining a rough motion that satisfies the demands,background_claim
we describe a technique that cuts and pastes bits and pieces of example motions together to create such a motion,own_claim
Post processing involves fixing small scale offensive artifacts,background_claim
we present a framework that allows synthesis of new motion data meeting a wide variety of constraints,own_claim
The synthesized motion is created from example motions at interactive speeds,own_claim
fixing constraint violations,data
lengthening or shortening strides,data
fixing the feet so that they do not penetrate or slide on the ground,data
motion demands are usually generated by animators,background_claim
In the movie industry,data
automatic generation of motion demands is required for autonomous intelligent robots and characters,background_claim
Funge et al. 1999,data
An overview of the automatic motion planning can be found,background_claim
Latombe 1999,data
O’Rourke 1998,data
Example based motion synthesis draws on an analogy with texture synthesis,background_claim
Efros and Leung 1999,data
Heeger and Bergen 1995,data
used this approach to create cyclic motions by sampling motion signals in a “signal pyramid”,background_claim
Pullen and Bregler,data
2000,data
They also used a similar approach to fetch missing degrees of freedom in a motion from a motion capture database,background_claim
Pullen and Bregler 2002,data
The sampling can also be done in the motion domain to pick clips of motions to establish certain simple constraints,background_claim
Lamouret and van de Panne 1996,data
Schodl et al. 2000,data
a new texture (or motion) that looks like an example texture (or motion example) needs to be synthesized,data
A roadmap of all the motion examples can be constructed and searched to obtain a desired motion,background_claim
Choi et al. 2000,data
Lee et al. 2002,data
Kovar et al. 2002,data
The clips in this roadmap can also be parameterized for randomly sampling different motion sequences,background_claim
Li et al. 2002,data
The motion signals can also be clustered,background_claim
The resulting Markov chain can be searched using dynamic programming to find a motion that connects two keyframes,background_claim
Molina-Tanco and Hilton 2000,data
used in a variable length Markov model to infer behaviors,background_claim
directly sampled from to create new motions,background_claim
Galata et al. 2001,data
Bowden 2000,data
This is similar to our work,own_claim
our clustering method does not operate on body configurations,own_claim
our probabilistic search strategy is more effective than dynamic programming,own_claim
Types of probabilistic search algorithms have also been used in physically based animation synthesis,background_claim
and rendering,background_claim
Chenney and Forsyth 2000,data
Veach and Guibas 1997,data
Controller based approaches use physical models of systems and controllers that produce outputs usually in the form of forces and torques as a function of the state of the body,background_claim
These controllers can be designed specifically to accomplish particular tasks,background_claim
they can be learned automatically using statistical tools,background_claim
Brogan et al. 1998,data
Hodgins et al. 1995,data
Grzeszczuk and Terzopoulos 1995,data
Grzeszczuk et al. 1998,data
Generating motion largely follows two threads,background_claim
using examples,background_claim
using controllers,background_claim
Mataric 2000,data
The motion data can also be post processed to fix problems such as feet sliding on the ground or some constraints not being satisfied,background_claim
Gleicher 1998,data
Lee and Shin 1999,data
Popovic 1999,data
Rose et al. 1996,data
This usually involves optimization of a suitable displacement function on the motion signal,background_claim
modifying motions appropriately is an interesting research problem,background_claim
Hodgins and Pollard 1997,data
motion cannot simply be transferred from one body size to another,background_claim
Different body sizes move according to different time scales,data
This graph is not a particularly helpful representation,own_claim
The collection of motion sequences could be represented as a directed graph,own_claim
it is extremely large,data
it obscures the structure of the sequences,data
the cost attached to the edge is high,own_claim
cutting from one sequence to another along an edge introduces a discontinuous motion,data
any sequence of edges e 1 · · · e n,own_claim
is a valid path and defines a legal sequence of splices,own_claim
tells us the cost of connecting the incident frames,own_claim
the edges in G are attached a cost value,own_claim
edges connect frames,data
they are labelled with the frames in the incident nodes,own_claim
that they originate from and they point to,own_claim
toMotion(e i ) = f romMotion(e i+1 ),data
toFrame(e i ) &lt; f romFrame(e i+1 ),data
∀i,data
1≤i &lt; n,data
figure 1,data
In this setting,data
We wish to construct paths in the motion graph that satisfy constraints,own_claim
Many constraints cannot be satisfied exactly,own_claim
"Typically, a hard constraint involves using a particular frame in a particular time slot",background_claim
We define hard constraints to be those that can (and must) be satisfied exactly,own_claim
given two positions,data
there may not be any sequence of frames in the collection that will get us from the first position to the second position exactly,own_claim
we can restrict ourselves to valid paths that pass through particular nodes at particular times,own_claim
we can constrain the moving figure to be at a specific pose at a specific time,own_claim
"This enables us to search for motions such as jumping, falling, or pushing a button at a particular time",own_claim
A soft constraint cannot generally be met exactly,own_claim
we score sequences using an objective function that reflects how well the constraint has been met,own_claim
attempt to find extremal sequences,own_claim
Finding paths in the motion graph that satisfy the hard constraints and optimize soft constraints involves a graph search,own_claim
even a small collection of motions,data
Unfortunately,own_claim
the graph G has a large number of edges,own_claim
straightforward search of this graph is computationally prohibitive,own_claim
many perfectly satisfactory motions that satisfy the constraints equally well,background_claim
The main reason is the need to enumerate many paths,own_claim
There are,background_claim
Example soft constraints include,own_claim
The total number of frames should be a particular number,own_claim
To appear in the ACM SIGGRAPH conference proceedings,own_claim
The motion should not penetrate any objects in the environment,own_claim
The body should be at a particular position and orientation at a particular time,own_claim
at a specific time,own_claim
A particular joint should be at a particular position,own_claim
at a particular time,own_claim
The motion should have a specified style,own_claim
the squared distance between the position of the constraint and the actual position of the body at the time of the constraint.,data
there are many motions that satisfy these constraints,own_claim
we require only that the person be at one end of a room at frame 0 and near the other end at frame 5000,data
The motion graph is too hard to search with dynamic programming,own_claim
there are many valid paths that satisfy the constraints equally well,own_claim
There may be substantial differences between equally valid paths,own_claim
whether you dawdle at one side of the room or the other is of no significance,data
This suggests summarizing the graph to a higher level and coarser presentation that is easier to search,own_claim
Branch and bound algorithms are of no help here,own_claim
very little pruning is possible,data
"In such a representation, every level is a summary of the one finer level",own_claim
Coarser levels should have less complexity while allowing us to explore substantially different portions of the path space,own_claim
to search the graph G in practical times,data
we need to do the search at a variety of levels where we do the large scale motion construction first and then “tweak” the details,own_claim
the motion is continuous and satisfies the constraints as well as possible,own_claim
there be at least one edge between the corresponding nodes in G,own_claim
there is a cut between two sequences represented by an edge between two nodes in G,data
this were not the case,data
our summary would rule out potential paths,own_claim
most probably their preceding and succeeding frames also look similar,own_claim
two frames are similar,data
The cost function,own_claim
causes the P matrices to have non-infinite entries to form nearly elliptical groups,own_claim
section A,data
figure 2,data
"We would like to have a tree of graph representations whose root is G , and whose leaves are G",own_claim
This is an instance of Tree-Structured Vector Quantization,background_claim
Gersho and Gray 1992,data
in our summarized graph G,data
each edge is the root of a binary tree and represents all the edges in close neighborhood in terms of the edge labels,own_claim
we would like to be able to generate different alternative motions that achieve the same set of constraints,own_claim
While searching this graph,data
This motivates a random search,own_claim
"During the search, we need to find paths close to optimal solutions but do not require exact extrema",own_claim
they are too hard to find,data
better one,own_claim
Intuitively the first mutation strategy replaces a clip with a,own_claim
the second mutation strategy adjusts the detailed position of cut boundaries,own_claim
we start new random “seed” paths at every iteration,own_claim
the algorithm does not get stuck at a local optimum forever,own_claim
Section 4.2.2,data
Hard constraints are easily dealt with,own_claim
we restrict our search to paths that meet these constraints,own_claim
hard constraints specify the frame,background_claim
to be used at a particular time,background_claim
"We do this by ensuring that “seed” paths meet these constraints, and mutations do not violate them",own_claim
a graph search can also be performed between the constraint nodes,own_claim
the path is sampled at the coarse level,data
the underlying motion graph is connected,own_claim
this algorithm is similar to MCMC search,own_claim
Gilks et al. 1996,data
Such mutations are rejected immediately,own_claim
"it is difficult to compute proposal probabilities for the mutations we use, which are strikingly successful in practice",own_claim
This is an online algorithm which can be stopped at anytime,own_claim
edges in intermediate graphs G · · · G n also represent connections and are valid edges,data
we do not have to reach the leaf graph G to be able to create a path,own_claim
"We can stop the search iteration, take the best path found so far, and create a motion sequence",own_claim
the sequence is not good enough,data
we can resume the search from where we left off to get better paths through mutations and inclusion of random paths,own_claim
This allows an intuitive computation cost vs. quality tradeoff,own_claim
these constraints are always satisfied,own_claim
during the search all the paths live in a subspace implied by the hard constraints,data
we score the path using the imposed soft constraints,own_claim
Given a sequence of edges e 1 · · · e n,data
we compute a cost where the cost is indicative of the satisfaction of the constraint,own_claim
For each constraint,data
The weights can be manipulated to increase/decrease the influence of a particular soft constraint,own_claim
The first body constraint is always satisfied,own_claim
we always start putting the motions together from the first body constraint,data
Doing this mutation on two edges simultaneously allows us to compensate for the errors that would happen if only one of them was demoted,own_claim
this step is not very expensive,own_claim
the summary has significantly fewer edges than the original graph,data
we can obtain multiple motions that satisfy the same set of constraints,own_claim
This way,data
"at the frames corresponding to the edges in the path, we will have C 0 discontinuities",background_claim
the finite number of motions sampling an infinite space,data
In practice these discontinuities are small and we can distribute them within a smoothing window around the discontinuity,own_claim
these “smoothing” steps can cause artifacts like feet penetrating or sliding on the ground,own_claim
usually the errors made in terms of constraints and the discontinuities are so small that they are unnoticeable,own_claim
we are able to synthesize human looking motions interactively,own_claim
Using iterative improvements of random paths,data
This allows interactive manipulation of the constraints,own_claim
This is important,own_claim
motion synthesis is inherently ambiguous as there may be multiple motions that satisfy the same set of constraints,data
The algorithm can find these “local minimum” motions that adhere to the same constraints,own_claim
The animator can choose between them or all the different motions can be used to create a variety in the environment,own_claim
the animator can also see the ambiguity and guide the search by putting extra constraints,own_claim
figure 6,data
the algorithm is interactive,data
"Currently, we can constrain the length of the motion, the body’s position and orientation at a particular frame",own_claim
a joint,own_claim
to a particular state at a particular frame,own_claim
constrain the entire body’s pose at a particular frame,own_claim
figure 5,data
6,data
head,data
hand,data
figure 7,data
figure 8,data
we can synthesize multiple interacting motions independently using hard constraints,own_claim
figure 9,data
"we simply select the poses, position and orientation at which the figures interact",data
this framework fills in the missing motion,own_claim
interpolating the constraints,own_claim
These are only a few of the constraints that can be implemented,own_claim
many more constraints can be implemented,own_claim
the user specifies a cost function that evaluates a motion,data
attaches a score that is indicative of the animator’s satisfaction with the path,data
we can also constrain the style of the desired motion by penalizing motions that do not have the particular style,own_claim
the motions in our database are marked with their individual stylistic attributes,data
we can constrain the synthesized motion to avoid obstacles in the environment,own_claim
body position/orientation constraints can also come from an underlying path planner,own_claim
In a computer game environment,data
In such a case,data
human looking motions can be generated automatically,own_claim
given high level goals,data
We have presented a framework that allows interactive synthesis of natural looking motions that adhere to user specified constraints,own_claim
the motion looks human,own_claim
the motions generated by the method do not have unnatural artifacts such as slipping feet on the ground or jerky movement,own_claim
the user specified constraints are satisfied,own_claim
the motion passes through the required spot at the required time,data
the character falls to a particular position,data
figure 8,data
motions are generated interactively,own_claim
an acceptable 300 frame motion is found in between 3 and 10 seconds on an average PC,background_claim
depending on the quality of the path desired,data
This speed allows interactive motion authoring,own_claim
The average precomputation time required for this many motions,background_claim
is 5 hours on the same computer,background_claim
This framework is completely automatic,own_claim
the computation of the hierarchic motion graph does not require any user intervention,own_claim
the input motions are selected,data
For many kinds of constraints the motion synthesis problem is underconstrained,own_claim
the resulting representation is searched in real-time,own_claim
there are many possible combinations of motion pieces that achieve the same set of constraints,data
Randomized search is well suited to find many different motions that satisfy the constraints,own_claim
"some constraints, may not be met by any motion",own_claim
randomized search will try to minimize our objective motion and find the “closest” motion,own_claim
In this case,data
the algorithm will tend to put fast running motions together but not necessarily satisfying the constraints,own_claim
the user asks for 100 meters in 5 seconds,data
the algorithm will perform searches confined to the unconnected graphs,own_claim
the set of motions to begin with do not form a connected graph,data
there are hard constraints in different unconnected components,data
we will not even be able to find starting seed paths,own_claim
the selection of the database to work with is important,own_claim
the randomized search has no problem finding rare motions that turn back to satisfy the constraints,own_claim
"On average, the results shown in the video contain 3-30 motion pieces cut from the original motions",data
figure 9,data
The motion databases that we used were unorganized,own_claim
The randomized search scales linearly as a function of the database size with a very small constant,own_claim
We have tried datasets of 50-100 motions without a noticeable change in the running time of the algorithm,own_claim
The linearity in the running time comes from the linear increase in the number of alternative mutations at every step,own_claim
the database size gets larger,data
the constant τ,own_claim
that is used to create the edges can get lower,own_claim
Appendix A,data
"more motions mean that we expect to find better connections between motions, decreasing the number of edges",own_claim
This will lead to a sublinear increase in the running time,own_claim
The framework can work on any motion dataset,own_claim
"it can be created by traditional key framing, physically based modelling or motion capture",own_claim
we can take the motion data for “Woody”,own_claim
from “Toy Story” and create new “Woody” motions automatically,own_claim
The framework is also appli- cable to non-human motion synthesis,own_claim
this framework can be used to generate control signals for robots to achieve a particular task by generating the motion graph for previously known motion-control signal pairs,own_claim
the resulting motions will also carry the underlying style of the data,own_claim
During the synthesis we can not only synthesize the final robot motion but also the associated control signals that achieve specific goals,own_claim
the generated motions are obtained by putting pieces of motions in the dataset,data
"we can take the motion data for one character, and produce more motions with the intrinsic style of the character",own_claim
"During the construction of the final motion, better ways of smoothing between adjacent motions could be used to improve realism",background_claim
Popovic 1999,data
motions could also be synthesized on non-uniform surfaces which the current framework cannot handle,own_claim
Using better post processing,data
Additional post processing may involve physically based modelling to make sure the synthesized motions are also physically correct,own_claim
"By analyzing patterns in the motion dataset, we might also infer these styles or obtain higher level descriptions",background_claim
"Automatic integration of higher level stylistic constraints could be incorporated into the framework, avoiding the arduous job of labelling every motion with the intrinsic style by hand",own_claim
Brand and Hertzmann 2001,data
The synthesized motions are strictly bound to the motions that were available in the original dataset,own_claim
it is conceivable that the motions that are very close to the dataset could also be incorporated in the synthesizable motions using learned stylistic variations,own_claim
The integrity of the original dataset directly effects the quality of the synthesized motion,own_claim
we will not be able to synthesize motions that involve “turning left”,own_claim
the incoming motion dataset does not contain any “turning left” motions,data
An automatic way of summarizing the portions of the “possible human motions” space that have not been explored well enough by the dataset could improve the data gathering and eventually the synthesized motions,own_claim
This could also serve as a palette for artists,own_claim
the animator could interactively select the motions that need to be used during the synthesis,own_claim
some portions of the precomputed motion graph can be paged in and out of memory depending on the required motion.,data
This would give animators a tool whereby they can select the set of motions to work with in advance,own_claim
this encourages comprehensive re-use of motion data,own_claim
only the portion of the motion graph involving the desired motions could be loaded,own_claim
the new motions will be created only from the artist selected set,own_claim
creating effective tools for synthesis of realistic human motion remains an open problem in computer animation,background_claim
This is particularly true for synthesis of highly dynamic character motion,background_claim
running,data
leaping,data
jumping,data
other athletic and acrobatic maneuvers that frequently occur in feature special effects and video games,data
Synthesizing such motions can be challenging,background_claim
any physical inaccuracies in these motions are particularly noticeable,data
Both spacetime optimization and controller synthesis approaches have been proposed for direct synthesis of dynamic character motion,background_claim
these methods do satisfy physical laws,background_claim
they tend to appear overly smooth and at times robotic,background_claim
these methods do not provide interactive control,background_claim
often requiring considerable offline processing time before the animation sequence is generated,data
it is difficult to achieve a graceful degradation of realism for the purpose of greater control,background_claim
"In contrast to direct synthesis, methods based on adaptation of motion capture data produce highly realistic motion, especially in the neighborhood of captured motion samples",background_claim
They also run at interactive speeds,background_claim
they employ data interpolation techniques,data
these methods require a large number of motion samples,background_claim
the animator wants to interactively control a specific parameter of the animation,data
the landing foot position in a particular acrobatic stunt,data
the interpolation techniques would require an already existing family of motion sequences where the only difference in motion is the landing foot position,background_claim
the need for a large dataset is particularly pronounced,background_claim
"Gathering such a datataset is not only laborious, but it also requires that the captured family of motions is similar in all other respects",background_claim
other landing points,data
initial and final state,data
overall style,data
an aspect that is quite hard to reproduce by real actors,background_claim
the process of generating such parameterized motions is the most challenging aspect of data acquisition for video game production,background_claim
Buc,data
the animators often wish to create non-realistic motions that defy the laws of physics,background_claim
a space where motion capture simply fails to provide any samples,background_claim
We take the approach to acquiring similar motions is to adapt a single motion sequence several times to synthesize a family of motions that preserve physics constraints,own_claim
Motions created in this manner can satisfy an animator’s exact specifications with a minimum of deviation from the initial motion sequence,own_claim
"Ideally, we would like to use a minimal source of motion data",own_claim
to create a wide range of additional motions,own_claim
perhaps a single captured movement,data
Recently a number of dynamic motion adaptation methods have been proposed,background_claim
PW99,data
ZH99,data
TSK02,data
SP04,data
SHP04,data
the work presented in this paper falls into this category,own_claim
"In contrast to the existing methods, our proposed framework is particularly robust to large-scale motion modifications",own_claim
"In this paper, we describe the momentum-based motion editing technique",own_claim
"we can adapt a forward leaping movement, to a collection of leaping movement in different directions including a backward leap, or a 360 ◦ leaping spin",data
"Using our motion editing framework, we show how a family of dynamic movements can be synthesized based on the animator’s needs for interactive control",own_claim
we can use simple interpolation techniques to allow real-time exploration of this synthetic motion space,own_claim
our family of motions samples the space widely,data
satisfies exact constraints,data
deviates minimally from the original source sequence,data
We describe a number of real-time animation tools that can be constructed using these synthetic motion families,own_claim
interactive displacement of constraints,own_claim
inverse control examples,own_claim
the determination of the natural volleyball spike that would hit the ball arriving at a specific position in space,data
varying foot landing position,data
"we describe how the same synthetic sampling/interpolation approach can be used to develop realtime controllers for leaping character motion, all synthesized from a single motion-captured leap",own_claim
Recent research in computer animation focused on techniques for remapping existing data to given specifications of a new scenario,background_claim
we build on the research in both physicsand interpolation-based motion editing methods,own_claim
Optimal trajectory methods,background_claim
provide a powerful framework for enforcing dynamic constraints while searching for the most favorable motion judged by the objective function,background_claim
WK88,data
has presented a significant challenge,background_claim
Extending physicsbased optimization to a full human figure,background_claim
the nonlinearity of the dynamic constraints,data
sensitivity to the starting point of the optimization,data
The dependency on the initial point has been somewhat alleviated by starting out with the captured motion sequence,background_claim
a first method that transforms motion capture data while preserving physical properties,background_claim
PW99,data
They found solutions by performing optimizations on the reduced character model,background_claim
"More recently, editing motion capture data based on spacetime optimization has become a popular strategy for producing realistic character animations",background_claim
RGBC96,data
SP04,data
SHP04,data
These methods provide control for modifying data while retaining physically plausible properties of captured motion by restricting the optimization space with additional kinematic constraints,background_claim
or by solving within the PCA-reduced space of motions,background_claim
RGBC96,data
SHP04,data
relying on simplifications of dynamic constraints is not necessary,background_claim
"proper scaling and estimation of joint angles, torques, and Lagrange multipliers are provided",data
SP04,data
Our work uses a similar spacetime optimization framework,own_claim
"In contrast to other approaches, we formulate significantly simpler momentum constraints on a complex character model, without solving for muscle forces explicitly",own_claim
LP02,data
scaling and convergence issues are less critical in our optimization framework,own_claim
we do not compute internal torques for joints,data
Our physics-based motion editing approach is based on the momentum constraints,own_claim
LP02,data
"In that work, momentum constraints were used for synthesis of highly dynamic motion from simple animations that did not contain sufficient information to synthesize the full motion",background_claim
"As a result, transition poses had to be introduced to further restrict the optimization space",background_claim
There are two main advantages of momentum constraints over the full dynamics constraints,own_claim
"we are solving for a much smaller set of unknowns, and over a much “better behaved” set of constraints",own_claim
since dynamic constraints are reduced to only global momentum patterns,data
This allows us to find solutions quickly,own_claim
enabling us to find solutions significantly further away from the original motion,own_claim
these constraints do not suffer from many local minima,data
they encode more about the natural motion than just physical correctness,background_claim
"in natural motion, passive elements such as tendons and ligaments store and release energy during ballistic motion",data
"To model this with a full dynamic system, one would have to include a complex muscle model",background_claim
Momentum constraints effectively record the aggregate effect of the natural torque usage and energy storage/release in a specific momentum pattern,background_claim
"This additional information embedded within the momentum constraints ensures that adapted motion is not just physically correct, but that it also constrains the motion within the momentum exchange patterns observed in nature",background_claim
our method applies momentum constraints directly on the motion capture data,own_claim
Our algorithm does not require any additional pose constraints at the transition points between flight and ground phases,own_claim
we introduce a novel spline-based representation for the momentum patterns that can be used to intrinsically enforce the similarity between the resultant motion and the input motion,own_claim
dynamic filtering is an efficient alternative for motion editing of smaller amplitude,background_claim
providing an interactive editing interface to the user,background_claim
Per-frame based frameworks largely reduce the computation time,data
TSK02,data
SKG03,data
"the per-frame approach means that animators can modify the spatial position of constraints, but not their position in time",background_claim
applied Kalman filter to estimate an optimal pose for the current frame subject to the given constraints,background_claim
Tak et al.,data
The result of the estimation is then rectified by least-square-fit to ensure a physically sound motion,background_claim
TSK02,data
approximated the adjustment made to the original motion capture data by correcting the momentum of the character during flight and using the balance constraints on the ground,background_claim
SKG03,data
these methods are geared toward the local modification compared to the overall motion,background_claim
improving the balance,data
our approach is able to handle global changes of the motion,own_claim
transforming a forward jump to a 360 ◦ backward spin jump,data
Another branch of dynamic filtering employs dynamic tracking,background_claim
ZH99,data
PR01,data
These methods combine motion capture data and dynamic simulation to retain human-like details from the data while presenting interaction with the environment,background_claim
These methods produce motions that do not deviate significantly from the input motion,background_claim
relying on the existence of captured motion that is similar to what the user intends to do,background_claim
Straightforward interpolation of joint angles usually fails to preserve physical realism from the original data,background_claim
many methods have shown that small modification of the motion can be easily done by linear interpolation of joint angles,background_claim
BW95,data
WP95,data
WH97,data
Gleicher adapted original motion to a new character while maintaining environmental constraints,background_claim
foot contacts on the floor,data
Combining interpolation with kinematics constraints,data
Gle98,data
A more sophisticated interpolation was presented using radial basis functions to blend motion sequences with various inverse-kinematic goals,background_claim
or different style,background_claim
RSC01,data
RCB98,data
data acquisition and post-processing for these methods present a significant challenge,background_claim
motion sequences need to be carefully crafted so that they contain the same content yet different in style,data
Our approach only requires one single motion capture sequence as the seed,own_claim
This seed is used to generate a family of motion sequences that parameterize the dynamic space,own_claim
a multi-level B-spline representation by which they transform existing motion to satisfy desired constraints adaptively through direct manipulation,background_claim
LS99,data
"Using B-spline representation, the motion edits can be limited to user-specified frequency bands",background_claim
providing a more effective optimization framework,background_claim
Our work adapts the idea of using spline-based representation to constrain the search of the optimization,own_claim
We model the momentum curves by a B-spline representation which are fitted to the original motion so that the search space in the optimization is limited to solutions that have similar dynamic behavior of the original motion,own_claim
Our system is based on an optimization algorithm that can transform the captured motion to satisfy high-level user constraints while preserving physical realism,own_claim
"As input, the system takes a single motion capture sequence and the userspecified modification",own_claim
The pre-fitting optimizes a set of coefficients used to model momentum curves so that they are constrained to the similar shapes of the original motion,own_claim
"The system then formulates a spacetime optimization that solves for a new motion, where both high-level physical constraints and the user specification are met",own_claim
"With a family of such optimized motions that parameterize certain dynamic space, we can apply a simple linear interpolation to generate arbitrary new motion within the dynamic space in real-time",own_claim
for the task of motion editing,own_claim
Our algorithm adapts the momentum-based constraints,own_claim
LP02,data
"Instead of filling in missing data, motion editing must solve the converse problem of preserving the original data while still satisfying animator-imposed constraints",own_claim
There is no need for keyframing of any kind,own_claim
the motion already starts in a good initial state,data
"Any underlying physical model employed by the system must be flexible enough to precisely describe the initial state of the motion and, at the same time, rigid enough to maintain a semblance of the original motion throughout the editing process",own_claim
At the heart of our algorithm is a set of full-body angular and linear momentum curves,own_claim
These curves constrain the edited motion to the realm of physical realism without the need to simulate expensive dynamical properties,own_claim
joint torques,data
contact forces,data
The advantage of this approach is twofold,own_claim
a good initial state of the momentum coefficients results in rapid convergence of the optimization,own_claim
the coefficients that control the shape of the curves can be fixed throughout the editing process,own_claim
effectively performing a biased search for similar motions in the momentum space,own_claim
the motion is captured using an optical system and processed to fit the character’s skeletal structure,own_claim
we employ the constraint detection technique described,own_claim
to partition the motion into ground-contact and flight stages,own_claim
LP02,data
we also need to determine the time interval between two animation frames,own_claim
the animator may at times wish to produce physically impossible jumps that are not constrained to the earth’s gravity,data
the sampling rate varies for each input motion sequence,data
Gravity and time step are directly related,own_claim
we can equivalently choose to find the right gravitational constant that makes the motion realistic for a given unit time step,data
the angular momentum remains constant,own_claim
"During free-fall stages, the linear momentum is only affected by gravity",own_claim
A defining characteristic of motion is the shape and magnitude of its momentum curve,own_claim
Figure 2,data
this formulation can capture a greater variability of momentum patterns than the previously used hardwired patterns,own_claim
LP02,data
This is especially important when dealing with motion capture data,own_claim
wide range of different maneuvers possible in the real world,data
There are few exceptions to the problem described above,own_claim
In this section we discuss the process of editing motions using our system,own_claim
we model motion as an optimal dynamic process with a set of realistic constraints,own_claim
LP02,data
"our condition for optimality is that the output motion be both as smooth, and as similar, to the original motion as possible",own_claim
"Constraints on the solution ensure that the character’s limb do not bend unnaturally, that the character’s feet do not pass through the ground, and that the character’s full-body momentum curve follows the path of the pre-fit momentum splines",own_claim
In addition to the constraints and objectives used,own_claim
we also introduce a similarity objective and a pseudo balance objective,own_claim
following sections,data
LP02,data
The similarity objective is intended to keep the optimized motion as similar to the original as possible,own_claim
there are some instances when the resulting motion would leave the character unnaturally leaning without a means of support,own_claim
we do not model the specific human preference to stay out of extreme leaning movements that in real life can often cause foot slipping on the ground,data
"To pull the optimized solution away from these unstable regions, we include a pseudo balance objective",own_claim
We find that the correct weight of these objectives do not vary much from motion to motion,own_claim
other parts of the objective function,own_claim
one value tends to “fit all”,own_claim
as long as the weight is well scaled w.r.t,data
Our system provides several high level motion specification tools,own_claim
the animator never has to think of editing in terms of constrained optimization,own_claim
The optimization enforces two types of constraints,own_claim
"environment constraints, K e",own_claim
"momentum constraints, K m",own_claim
feet positions on the ground,data
The following spacetime formulation finds the unknowns Q and G that minimize the objective function while satisfying all the constraints,own_claim
"min Q,G E s (Q) + E b (Q) subject to K K e m (Q) (Q, G) = = 0 0",data
This is particularly useful when creating non-realistic motion that defies gravity,own_claim
"Alternatively, several motions can be generated together in a batch mode",own_claim
"Once the user is satisfied with the edits, the optimization process takes between 1 to 5 minutes per motion",own_claim
provides a good initial state for the spacetime optimization,own_claim
The resulting motion is a crude approximation of the final result,own_claim
we describe a technique for generating a continuous ranges of physically plausible motions from a single motion capture sequence,own_claim
The technique constructs an output motion in real-time by performing a simple weighted average over the DOFs values from a set of sample motions,own_claim
A family of motions can be populated from the input motion by systematically varying the position and orientation of one or more ground stages and then performing a sequence of similar optimization,own_claim
We provide a user interface for the three most useful types of motion families,own_claim
Figure 3,data
Other types of motion families can be easily added,own_claim
the algorithm is very fast and well suited to any application where the output motion must be generated “on the fly”,own_claim
they can be as densely populated as necessary to increase the accuracy of the interpolation,own_claim
motion families are produced offline,data
they blend very well and need not be sampled very densely at all,own_claim
"since the members of a motion family are produced by the same optimization setup, varying only in specific dimensions",data
9 samples is the most we ever required to adequately sample the dynamic space of a motion,data
We chose to use a simple linear blending method for several reasons,own_claim
The size of the sample space as well as the density at which it is sampled can both be adjusted as necessary,own_claim
The first type varies the translation of a ground stage along a line,data
the second type varies the translation of the ground stage along a 2 dimensional grid,data
the third type varies both the translation and orientation of the ground stage along a semi-circle such that the orientation of the character is consistently aligned along the normal vector of the arc,data
foot glide is among the most troublesome artifacts for most motion blending techniques,background_claim
we find that it is imperceptible for both the line and grid motion families,own_claim
a very miniscule amount of foot glide becomes perceptible,own_claim
"the global orientation and the translation of the motion are interpolated simultaneously, as is the case in the circle motion family",data
A simple fix is to apply a per-frame inverse kinematic (IK) solver to slightly adjust the lower body to satisfy the positional constraints on each foot,own_claim
Solving IK on the lower body not only has the effect of planting the foot firmly on the ground without changing the overall looks of the motion,own_claim
"is also light-weight enough to converge in real-time, as the motion is being displayed",own_claim
we have shown how to populate the space of dynamic motion by interpolating between samples,own_claim
In many applications the most important aspect to control is the position and time at which the character makes contact with an object in the environment,own_claim
"a soccer header motion, where it is required that the character’s head always makes contact with the soccer ball at the correct moment in time",data
One advantage of our motion generation algorithm is that it provides for a wide range of physically plausible animations in real-time,own_claim
"To demonstrate the full benefit of this approach, we have created a video game interface where the user controls the trajectory of a jumping character with a multi-directional control pad",own_claim
Figure 6,data
The interesting aspect of this motion is that the character must exhibit foresight in the motion of the first jump,own_claim
"the correct contact forces can be generate in the intermediate ground stage, to create the necessary momentum for the second jump",own_claim
The spacetime approach is,own_claim
ideal for editing such a motion,own_claim
the way it intrinsically models the interdependencies between different stages of a motion,data
Our approach inherits the same key benefit from spacetime,own_claim
allow us generate motions in realtime,own_claim
Our system provides a set of UI tools to help the user rapidly specify modifications to existing motions,own_claim
the resultant motion remains stylistically similar to the original,own_claim
our system is capable of making drastic changes from the original motion,own_claim
we edited the same hopping motion to exhibit a 360 ◦ spin followed by a 180 ◦ spin in the opposite direction,data
"In a hopping example, the animator interactively manipulates the position, height, and orientation of each ground stage",data
"she must lower her center of mass, lean farther to the right, and pivot slightly in preparation for the take-off",own_claim
"The character must cover a longer distance, reach a greater height and assume a new orientation in the modified hopping motion",data
Figure 5,data
we are able to generate a jumping motion with arbitrary takeoff and landing positions within the parameterized space in an interactive fashion,own_claim
the interpolation can be performed in real-time,data
"we are able to generate arbitrary intermediary motions where the character contacts the ball at any location within the sampled space, in real-time",own_claim
interpolating between the optimal motions,data
A more intuitive way to edit motion capture data with arbitrary positional constraints is to use our real-time inverse control mechanism,own_claim
Our system can also be used to create a class of nonrealistic motions that allow the character to exhibit superhuman strength and to defy the laws of physics,own_claim
In our system it is easy to alter the gravitational constant in one or more ground stages,own_claim
our system can easily handle these imaginary circumstances,own_claim
the character must gain the momentum required to achieve the specified height on takeoff and,own_claim
absorb the same amount of momentum on landing,own_claim
This requires a super-human muscle strength,own_claim
we place no limits on their magnitude,data
we do not directly model muscle forces,data
the system increases the length of the time-step in each frame of the flight stage and then continues the editing process as normal,own_claim
the animator chooses to leave the gravity unaltered,data
editing non-realistic motion is the same as editing any other motion,own_claim
the animators perspective,data
This work builds on the research in both physics-based motion synthesis and interpolation-based motion editing approaches,own_claim
"we suggest that using physics-based adaptation to create motion samples for the purpose of data interpolation is perhaps a ""sweetspot"" between these two approaches",own_claim
"Once the dataset is created, this paradigm allows animators to interactively edit the realistic dynamic motion",own_claim
The primary contribution of this work is a new momentum-based method for adaptation of ballistic character movement,own_claim
our framework can produce an wide range of motions that are significantly different from the original motion,own_claim
"Our method does not require model reduction, or a reduced motion space",own_claim
our method is also significantly faster than other physics-based transformation methods,own_claim
we do not solve for the generalized forces for each joint angle,data
This speed allows us to create a large number of motions within a reasonable time,own_claim
the family of parameterized motion samples has been generated,data
we describe an interactive framework where the animator can explore the space of realistic motions,own_claim
we show how real-time data-driven controllers for realistic human motion can be constructed from a single motion capture sequence,own_claim
our framework does not handle all realistic character motions,own_claim
We also show how the same framework can be adapted for inverse control,own_claim
It specifically applies to highly-dynamic motions with ballistic stages,own_claim
We suspect that momentumbased approach would not be well suited for less energetic motions such as walking,own_claim
the number of samples required is exponentially proportional to the number of dimensions,own_claim
the current framework is hindered by the offline computation of a large dataset,own_claim
There are several ways to facilitate the computation by taking advantage of the fact that we are solving a sequence of very similar problems,own_claim
A more intelligent sampling strategy is essential for generalizing our approach to a multi-dimensional dynamic space,own_claim
there are some extreme cases which do not produce realistic motion,own_claim
our model does not account for realistic muscle strength,data
Adding heuristics such as balance during contact can to a large extent eliminate these problems,own_claim
friction during ground contact,data
Realistic human motion is an important part of media like video games and movies,background_claim
More lifelike characters make for more immersive environments and more believable special effects,background_claim
realistic animation of human motion is a challenging task,background_claim
people have proven to be adept at discerning the subtleties of human movement and identifying inaccuracies,data
One common solution to this problem is motion capture,background_claim
motion capture is a reliable way of acquiring realistic human motion,background_claim
by itself it is a technique for reproducing motion,background_claim
Motion capture data has proven to be difficult to modify,background_claim
editing techniques are reliable only for small changes to a motion,background_claim
the data on hand isn’t sufficiently similar to what is desired,data
"often there is little that can be done other than acquire more data, a time-consuming and expensive process",background_claim
This limits the utility of motion capture,background_claim
This in particular is a problem for applications that require motion to be synthesized dynamically,background_claim
interactive environments,data
Our goal is to retain the realism of motion capture while also giving a user the ability to control and direct a character,own_claim
we would like to be able to ask a character to walk around a room without worrying about having a piece of motion data that contains the correct number of steps and travels in the right directions,data
This paper presents a method for synthesizing streams of motions based on a corpus of captured movement while preserving the quality of the original data,own_claim
We also need to be able to direct characters who can perform multiple actions,own_claim
we compile a structure called a motion graph that encodes how the captured clips may be re-assembled in different ways,own_claim
Given a set of motion capture data,data
The motion graph is a directed graph wherein edges contain either pieces of original motion data or automatically generated transitions,own_claim
users needn’t capture motions specifically designed to connect to one another,own_claim
our methods automatically detect and create transitions between motions,data
the user can tune the high-level structure of the motion graph to produce desired degrees of connectivity among different parts,own_claim
"Motion graphs transform the motion synthesis problem into one of selecting sequences of nodes, or graph walks",own_claim
"By drawing upon algorithms from graph theory and AI planning, we can extract graph walks that satisfy certain properties",own_claim
giving us control over the synthesized motions,own_claim
is critical to successful application of motion capture data,background_claim
carefully plan out each movement,background_claim
It is possible to place additional constraints on the desired motion,own_claim
Washburn 2001,data
Much previous work with motion capture has revolved around editing individual clips of motion,background_claim
can be used to smoothly add small changes to a motion,background_claim
Motion warping,background_claim
Witkin and Popović 1995,data
Retargeting,background_claim
maps the motion of a performer to a character of different proportions while retaining important constraints like footplants,background_claim
Gleicher 1998,data
Lee and Shin 1999,data
Various signal processing operations,background_claim
"Our work is different from these efforts in that it involves creating continuous streams of motion, rather than modifying specific clips",own_claim
Bruderlin and Williams 1995,data
can be applied to motion data,background_claim
"One strategy for motion synthesis is to perform multi-target blends among a set of examples, yielding a continuous space of parameterized motion",background_claim
used linear interpolation to create parameterizations of walking at various inclinations and reaching to various locations,background_claim
Wiley and Hahn,data
1997,data
used radial basis functions to blend among clips representing the same motion performed in different styles,background_claim
Rose et al.,data
1998,data
These works have a focus complementary to ours,own_claim
they are mainly concerned with generating parameterizations of individual clips,background_claim
we are concerned with constructing controllable sequences of clips,own_claim
Another popular approach to motion synthesis is to construct statistical models,background_claim
used kernel-based probability distributions to synthesize new motion based on the statistical properties of example motion,background_claim
Pullen and Bregler,data
2000,data
Coherency was added to the model by explicitly accounting for correlations between parameters,background_claim
processed motion capture data by constructing abstract “states” which each represent entire sets of poses,background_claim
Bowden,data
2000,data
Galata et al.,data
2001,data
Brand and Hertzmann,data
2000,data
they risk losing important detail,background_claim
Transition probabilities between states were used to drive motion synthesis,background_claim
these statistical models synthesize motion based on abstractions of data rather than actual data,data
In our work we have tighter guarantees on the quality of generated motion,own_claim
We generate motion by piecing together example motions from a database,own_claim
these systems did not focus on the satisfaction of high-level constraints,background_claim
Numerous other researchers have pursued similar strategies,background_claim
used a rulebased system and simple blends to attach procedurally generated motion into coherent streams,background_claim
Perlin,data
used support vector machines to create motion sequences as compositions of actions generated from a set of physically based controllers,background_claim
Perlin and Goldberg,data
we require different approaches to identifying and generating transitions,own_claim
1995,data
1996,data
"our system involves motion capture data, rather than procedural or physically based motion",data
Faloutsos et al.,data
2001,data
these systems were mainly concerned with appropriately generating individual transitions,background_claim
we address the problem of generating entire motions,own_claim
that meet user-specified criteria,own_claim
developed a system that used a database to extract motion meeting high-level constraints,background_claim
Lamouret and van de Panne,data
1996,data
their system was applied to a simple agent with five degrees of freedom,background_claim
we generate motion for a far more sophisticated character,own_claim
used a state-based statistical model similar to those mentioned in the previous paragraph to rearrange segments of original motion data,background_claim
These segments were attached using linear interpolation,background_claim
Molina-Tanco and Hilton,data
2000,data
"The user could create motion by selecting keyframe poses, which were connected with a highprobability sequence of states",background_claim
Our work considers more general and sophisticated sets of constraints,own_claim
Work similar to ours has been done in the gaming industry to meet the requirements of online motion generation,own_claim
Many companies use move trees,background_claim
Mizuguchi et al. 2001,data
which,background_claim
are graph structures representing connections in a database of motion,background_claim
move trees are created manually,background_claim
blends are created by hand using interactive tools,data
short motion clips are collected in carefully scripted capture sessions,data
Motion graphs are constructed automatically,own_claim
move trees are typically geared for rudimentary motion planning,background_claim
The generation of transitions is an important part of our approach,own_claim
presented a simple method for smoothly interpolating between two clips to create a blend,background_claim
Perlin,data
1995,data
2000,data
orientation filters that allowed these blending operations to be performed on rotational data in a more principled fashion,background_claim
a more complex method for creating transitions that preserved kinematic constraints and basic dynamic properties,background_claim
Lee,data
Rose et al.,data
Our main application of motion graphs is to control a character’s locomotion,own_claim
1996,data
This problem is important enough to have received a great deal of prior attention,background_claim
synthesis is required,background_claim
Procedural and physically based synthesis methods have been developed for a few activities,background_claim
a character’s path isn’t generally known in advance,data
walking,data
running,data
Multon et al. 1999,data
Sun and Metaxas 2001,data
Hodgins et al. 1995,data
Bruderlin and Calvert 1996,data
techniques such as these can generate flexible motion paths,background_claim
the current range of movement styles is limited,background_claim
these methods do not produce the quality of motion attainable by hand animation or motion capture,background_claim
a method for editing the path traversed in a clip of motion capture,background_claim
2001,data
Gleicher,data
it did not address the need for continuous streams of motion,background_claim
nor could it choose which clip is correct to fit a path,background_claim
Our basic approach,own_claim
has been applied previously to other problems,own_claim
detecting transitions,data
constructing a graph,data
using graph search techniques to find sequences satisfying user demands,data
a similar method for synthesizing seamless streams of video from example footage and driving these streams according to high-level user input,background_claim
2000,data
Schödl et al.,data
"Since writing this paper, we have learned of similar work done concurrently by a number of research groups",own_claim
used a randomized search algorithm to extract motion that meets user constraints,background_claim
also constructed a graph and generated motion via three user interfaces,background_claim
This resulted in sequences of short clips forming complete motions,background_claim
keyframed a subset of a character’s degrees of freedom and matched small segments of this keyframed animation with the lower frequency bands of motion data,background_claim
generated a two-level statistical model of motion,background_claim
This model was used both to generate new motion based on user keyframes and to edit existing motion,background_claim
Arikan and Forsythe,data
2002,data
constructed from a motion database a hierarchical graph similar to ours,background_claim
Lee et al.,data
2002,data
a list of choices,data
a sketch-based interface similar to what we use for path fitting,data
Pullen and Bregler,data
Section 5,data
a live video feed,data
2002,data
Li et al,data
2002,data
At the lower level were linear dynamic systems representing characteristic movements called “textons”,data
the higher level contained transition probabilities among textons,data
A motion graph is a directed graph where all edges correspond to clips of motion,own_claim
A more interesting graph requires greater connectivity,own_claim
we need to create clips expressly for this purpose,own_claim
it is unlikely that two pieces of original data are sufficiently similar,data
a node to have multiple outgoing edges,data
there must be multiple clips that can follow the clip(s) leading into the node,own_claim
we can create a wellconnected structure with a wide range of possible graph walks,own_claim
inserting transition clips between otherwise disconnected nodes,data
introducing nodes within the initial clips,data
Figure 2,data
creating transitions is a hard animation problem,own_claim
the problem of automatically creating such a transition is arguably as difficult as that of creating realistic motion in the first place,own_claim
if two motions are “close” to each other then simple blending techniques can reliably generate a transition,own_claim
our strategy is to identify portions of the initial clips that are sufficiently similar that straightforward blending is almost certain to produce valid transitions,own_claim
motion capture data is typically represented as vectors of parameters specifying the root position and joint rotations of a skeleton on each frame,background_claim
One might attempt to locate transition points by computing some vector norm to measure the difference between poses at each pair of frames,background_claim
such a simple approach is ill-advised,own_claim
it fails to address a number of important issues,own_claim
Simple vector norms fail to account for the meanings of the parameters,own_claim
there is no meaningful way to assign fixed weights to these parameters,own_claim
the effect of a joint rotation on the shape of the body depends on the current configuration of the body,data
in the joint angle representation some parameters have a much greater overall effect on the character than others,data
comparing two motions requires identifying compatible coordinate systems,own_claim
the motion is fundamentally unchanged if we translate it along the floor plane or rotate it about the vertical axis,own_claim
A motion is defined only up to a rigid 2D coordinate transformation,own_claim
Smooth blends require more information than can be obtained at individual frames,own_claim
"A seamless transition must account not only for differences in body posture, but also in joint velocities, accelerations, and possibly higher-order derivatives",own_claim
"To motivate it, we note that the skeleton is only a means to an end",own_claim
"In a typical animation, a polygonal mesh is deformed according to the skeleton’s pose",background_claim
For this reason we measure the distance between two frames of animation in terms of a point cloud driven by the skeleton,own_claim
This mesh is all that is seen,background_claim
it is a natural focus when considering how close two frames of animation are to each other,background_claim
The use of windows of frames effectively incorporates derivative information into the metric,own_claim
Ideally this point cloud is a downsampling of the mesh defining the character,own_claim
is similar to the approach,background_claim
Schödl et al. 2000,data
"To make our transition model more compact, we find all the local minima of this error function",own_claim
extracting the “sweet spots” at which transitions are locally the most opportune,own_claim
Schödl et al. 2000,data
A local minimum in the distance function does not necessarily imply a high-quality transition,own_claim
it only implies a transition better than its neighbors,own_claim
The simplest approach is to only accept local minima below an empirically determined threshold,own_claim
This can be done without user intervention,own_claim
often users will want to set the threshold themselves to pick an acceptable tradeoff between having good transitions,own_claim
and having high connectivity,own_claim
low threshold,data
high threshold,data
Different kinds of motions have different fidelity requirements,own_claim
walking motions have very exacting requirements on the transitions,data
people have seen others walk nearly every day since birth and consequently have a keen sense of what a walk should look like,data
most people are less familiar with ballet motions and would be less likely to detect inaccuracies in such motion,data
we allow a user to apply different thresholds to different pairs of motions,own_claim
Other transition schemes,background_claim
may be used in place of this one,background_claim
Rose et al. 1996,data
The use of linear blends means that constraints in the original motion may be violated,own_claim
one of the character’s feet may slide when it ought to be planted,data
This can be corrected by using constraint annotations in the original motions,own_claim
We treat constraints as binary signals,own_claim
on a given frame a particular constraint either exists or it does not,data
In this ¡ manner each transition is automatically annotated with constraint information,own_claim
these constraints may later be enforced as a postprocessing step when motion is extracted form the graph,own_claim
In its current state there are no guarantees that the graph can synthesize motion indefinitely,own_claim
there may be nodes,data
that are not part of any cycle,data
Figure 4,data
Once such a node is entered there is a bound on how much additional motion can be generated,own_claim
may be part of one or more cycles but nonetheless only be able to reach a small fraction of the total number of nodes in the graph,own_claim
Other nodes,own_claim
arbitrarily long motion may still be generated once a sink is entered,own_claim
this motion is confined to a small part of the database,own_claim
"Finally, some nodes may have incoming edges such that no outgoing edges contain the same set of descriptive labels",own_claim
This is dangerous,own_claim
logical discontinuities may be forced into a motion,own_claim
a character currently in a “boxing” motion may have no choice but to transition to a “ballet” motion,data
"To address these problems, we prune the graph such that, starting from any edge, it is possible to generate arbitrarily long streams of motion of the same type such that as much of the database as possible is used",own_claim
By this stage we have finished constructing the motion graph,own_claim
Our algorithm involves solving an optimization problem,own_claim
a graph walk corresponds to a motion generated by placing these pieces one after another,own_claim
every edge on the motion graph is a piece of motion,data
The only issue is to place each piece in the correct location and orientation,own_claim
each frame must be transformed by an appropriate 2D rigid transformation,own_claim
"the use of linear blends to create transitions can cause artifacts, the most common of which is feet that slide when they ought to be planted",own_claim
Section 3.3,data
every graph walk is automatically annotated with constraint information,own_claim
the foot must be planted,data
These constraints are either specified directly in the original motions or generated,own_claim
Section 3.3,data
depending on whether the frame is original data or a transition,own_claim
These constraints may be satisfied using a variety of methods,background_claim
Gleicher 1998,data
Lee and Shin 1999,data
In our work we used the method described,own_claim
Kovar et al. 2002,data
We are now in a position to consider the problem of finding motion that satisfies user-specified requirements,own_claim
only very special graph walks are likely to be useful,own_claim
a random graph walk will generate a continuous stream of motion,own_claim
such an algorithm has little use other than an elaborate screen saver,own_claim
This is less useful than it might appear at first,own_claim
there are no guarantees that the shortest graph walk is short in an absolute sense,own_claim
In our larger test graphs,data
the average shortest path between any two nodes was on the order of two seconds,data
there were on average only five or six transitions separating any two of the thousands of nodes,own_claim
the transitions were about one-third of a second apiece,data
This is not because the graphs were poorly connected,own_claim
there is no control over what happens during the graph walk,own_claim
we can’t specify what direction the character travels in or where she ends up,own_claim
the sorts of motions that a user is likely to be interested in probably don’t involve minimizing metrics as simple as total elapsed time,own_claim
for complicated metrics there is typically no simple way of finding the globally optimal graph walk,own_claim
we focus instead on local search methods that try to find a satisfactory graph walk within a reasonable amount of time,own_claim
Branch and bound is most successful when we can attain a tight lower bound early in the search process,own_claim
it is worthwhile to have a heuristic for ordering the edges we explore out of a particular node,own_claim
the number of possible graph walks grows exponentially with the average size of a complete graph walk,own_claim
A naıve solution is to use depth-first search to evaluate f for all complete graph walks and then select the best one,own_claim
Our goal is find a complete graph walk w that minimizes f,own_claim
branch and bound reduces the number of graph walks we have to test against f,own_claim
it does not change the fact that the search process is inherently exponential,own_claim
it merely lowers the effective branching factor,own_claim
Sometimes it is useful to have a degree of randomness in the search process,own_claim
one is animating a crowd,data
There are a couple of easy ways to add randomness to the search process without sacrificing a good result,own_claim
The first is to select a start for the search at random,own_claim
The second is retain the r best graph walks at the end of each iteration of the search and randomly pick among the ones whose error is within some tolerance of the best solution,own_claim
it is worth considering what sorts of functions are likely to produce desirable results,own_claim
the motion extracted from the graph is determined by the function g,data
it’s conceivable that given a larger database we would have found a better motion,own_claim
the problem here is with the function we passed into the search algorithm,own_claim
The error of a complete graph walk,own_claim
was determined by how far away this kicking clip was from being in a particular position and orientation,own_claim
"We can formally state this problem as follows: given a starting node N in the graph and a target edge e, find a graph walk this section",own_claim
The character spends approximately seven seconds making minute adjustments to its orientation in an attempt to better align itself with the final clip,data
The character turns around in place several times in an attempt to better line up with the target clip,data
it gives no guidance as to what should be done in the middle of the motion,own_claim
all that matters is that the final clip be in the right position and orientation,own_claim
the character is allowed to do whatever is possible in order to make the final fit,own_claim
the motion is nothing that a real person would do,data
the goal is probably more specific than necessary,own_claim
it doesn’t matter what kick the character does,data
it should be allowed to choose a kick that doesn’t require such effort to aim,own_claim
there are two lessons we can draw from this example,own_claim
g should give some sort of guidance throughout the entire motion,own_claim
guiding the search toward a particular result must be balanced against unduly preventing it from considering all available options,own_claim
arbitrary motion is almost never desirable,data
g should be no more restrictive than necessary,own_claim
"To demonstrate that it is nonetheless possible to come up with optimization criteria that allow us to solve a real problem, we apply the preceding framework to path synthesis",own_claim
"This problem is simple to state: given a path P specified by the user, generate motion such that the character travels along P",own_claim
The basic idea is to estimate the actual path P travelled by the character during a graph walk and measure how different it is from P,own_claim
"A simple way to determine P is to project the root onto the floor at each frame, forming a piecewise linear curve 1",own_claim
The graph walk is complete when P is sufficiently long,own_claim
The halting condition for path synthesis is when the current total length of P meets or exceeds that of P,own_claim
it is efficient to compute,own_claim
"The error function g(w, e) was chosen for a number of reasons",own_claim
is important in making the search algorithm practical,own_claim
the character is given incentive to make definite progress along the path,own_claim
it would have no reason not to alternate between travelling forwards and backwards,own_claim
we were to have required the character to merely be near the path,data
this metric allows the character to travel at whatever speed is appropriate for what needs to be done,own_claim
a sharp turn will not cover distance at the same rate as walking straight forward,own_claim
One potential problem with this metric is that a character who stands still will never have an incentive to move forward,own_claim
both actions are equally important for accurate path synthesis,data
it is important that one not be given undue preference over the other,own_claim
it can accrue zero error by remaining in place,data
we have not encountered this particular problem in practice,own_claim
it can be countered by requiring at least a small amount of forward progress γ on each frame,own_claim
"we can replace in Equation 9 the function s(e i ) with t(e i ) = max(t(e i−1 ) + s(e i ) − s(e i−1 ),t(e i−1 ) + γ )",own_claim
Typically the user will want all generated motion to be of a single type,own_claim
walking,data
"More interestingly, one can require different types of motion on different parts of the path",own_claim
The necessary modifications to accomplish this are simple,own_claim
the character is currently fitting P 2,data
the algorithm is identical to the single-type case,own_claim
This corresponds to confining the search to the subgraph containing the appropriate set of descriptive labels,own_claim
we only allow this switch to occur once on any given graph walk,own_claim
prevents the resulting motion from randomly switching between the two actions,own_claim
our technique is viable,own_claim
Figure 1,data
we were able to find accurate fits to the given paths,own_claim
the input motion had a fair amount of variation,own_claim
upper portion of the,data
figure,data
straight-ahead marches,data
sharp turns,data
smooth changes of curvature,data
our algorithm is still useful when the input database is not as rich,own_claim
Figure 6,data
our approach works even on motions that are not obviously locomotion,own_claim
the second uses martial arts motions,data
in our test cases the duration of a generated motion was either greater than or approximately equal to the amount of time needed to produce it,own_claim
the character follow the path well,own_claim
transitions between action types occur quite close to their specified locations,own_claim
approximately twenty-five minutes were needed to compute the locations of all candidate transitions points,own_claim
Figure 8,data
our largest graph,data
Approximately five minutes of user time were required to select transition thresholds,own_claim
it took less than a minute to calculate blends at these transitions and prune the resulting graph,own_claim
Directable locomotion is a general enough need that the preceding algorithm has many applications,background_claim
We can use path synthesis techniques to give a user interactive control over a character,own_claim
when the user hits the left arrow key the character might start travelling east,data
we can draw a path with subsections requiring the appropriate action types,own_claim
we want a character to perform certain actions in a specific sequence and in specific locations,data
This allows us to generate complex animations without the tedium of manual keyframing,own_claim
the motion graph may be used to “dump” motion on top of the algorithm’s result,own_claim
an AI algorithm is used to determine that a character must travel along a certain path or start performing certain actions,data
motion graphs may be used as a back-end for animating non-player characters in video games and interactive environments,own_claim
the paths and action types can be specified by a high-level process and the motion graph would fill in the details,data
there’s no reason why it couldn’t be applied to several characters in parallel,own_claim
Motion graphs may be used as a practical tool for crowd generation,own_claim
we can use the techniques described,own_claim
to add randomness to the generated motion,own_claim
end of Section 4.2,data
a standard collision-avoidance algorithm could be used to generate a path for each individual,own_claim
the motion graph could then generate motion that conforms to this path,own_claim
"we have presented a framework for generating realistic, controllable motion through a database of motion capture",own_claim
Our approach involves automatically constructing a graph that encapsulates connections among different pieces of motion in the database,own_claim
then searching this graph for motions that satisfy user constraints,own_claim
our largest examples used a database of several thousand frames of motion,own_claim
we had limited access to data,data
we believe this was sufficient to show the potential of our method,own_claim
a character with a truly diverse set of actions might require hundreds or thousands of times more data,own_claim
the scalability of our framework bears discussion,own_claim
The principle computational bottleneck in graph construction is locating candidate transitions,own_claim
Section 3.1,data
This requires comparing every pair of the F frames in the database and therefore involves O,own_claim
operations,own_claim
this calculation is trivial to parallelize,own_claim
distances between old frames needn’t be recomputed,own_claim
additions are made to the database,data
motion graphs tend to be sparse,own_claim
It is the exception rather than the rule that two pieces of motion are sufficiently similar that a transition is possible,own_claim
the necessary amount of storage is approximately proportional to the size of the database,own_claim
The number of edges leaving a node in general grows with the size of the graph,own_claim
the branching factor in our search algorithm may grow as well,own_claim
we expect that future motion graphs will be larger mainly because the character will be able to perform more actions,own_claim
having increasing amounts of walking motion isn’t particularly useful once one can direct a character along nearly any path,data
the branching factor in a particular subgraph will remain stationary,own_claim
that subgraph is sufficiently large,data
we expect that the search will remain practical even for larger graphs,own_claim
We anticipate that typical graph searches will be restricted to one or two subgraphs,own_claim
One limitation of our approach is that the transition thresholds must be specified by hand,own_claim
different kinds of motions have different fidelity requirements,data
Section 3.2,data
Setting thresholds in databases involving many different kinds of motions may be overly laborious,own_claim
we are investigating methods for automating this process,own_claim
into our system,own_claim
A second area of future work is to incorporate parameterizable motions,own_claim
having every node correspond to a static piece of motion,own_claim
Wiley and Hahn 1997,data
Rose et al. 1998,data
This would add flexibility to the search process and potentially allow generated motion to better satisfy user constraints,own_claim
we are interested in applying motion graphs to problems other than path synthesis,own_claim
The dream of animating complex living creatures with pure computation,background_claim
proved impractical,background_claim
creatures are not free from physics,background_claim
their motion is not a direct consequence of physics,background_claim
inverse kinematics,data
dynamic control,data
Dynamic control can provide solutions based on simplified assumptions about human motion,background_claim
the result tends to look quite mechanical,background_claim
motion capture might be a most reasonable choice these days,background_claim
a high quality character animation has to be produced during a short period of time,data
it has to be retar- getted to account for the differences in the anthropometry and motion,background_claim
the data needs to be reused,data
The captured data itself is for a specific person in performing specific motion,background_claim
motion retargetting is emerging as an important technique in recent character animation,background_claim
the technique loses its merit over the above pure computation approaches,background_claim
the original motion characteristics are severely lost during motion retargetting,data
finding in real-time the motion retargetted to a new character that has different anthropometric proportions,own_claim
The problem we try to solve in this paper,own_claim
preserving the features of the original motion during the retargetting,own_claim
it is possible to use the above retargetting algorithm for enhancing motion capture data so that the errors in joint angles and end-effector positions are reduced,own_claim
On-line motion retargetting presented in this paper is based on inverse rate control,own_claim
is a way to implement inverse kinematics,background_claim
17,data
It computes the changes in joint angles corresponding to the changes in end-effector position,background_claim
"While tracking the multiple end-effector trajectories of the original subject or character, our on-line motion retargetting imitates the joint motion of the original character by exploiting the kinematic redundancies of the animated model",own_claim
jerky motion is prevented,own_claim
the next configuration is dependent on the previous configuration in inverse rate control,data
"the high frequency details of the original motion, which carries important characteristics of the motion, are also well preserved by our algorithm",own_claim
later experiments,data
Figure 1,data
the retargetting can be done in on-line,data
real-time performance can be mapped to another character,own_claim
the feedback of the retargetted animation can facilitate motion capture session,own_claim
satisfactory results can be obtained with fewer trials,own_claim
our algorithm can handle an infinitely long sequence of motion,own_claim
the memory required for on-line retargetting does not increase with time,data
The primary goal of our on-line motion retargetting,own_claim
is to track the given reference end-effector trajectory of joint x 1 angle t,own_claim
src t carries the content to be retargetted,own_claim
x 1 t carries the variations needed during the retargetting,own_claim
there is a bat-swing motion,data
we can obtain different swing motions aiming at different hit positions by specifying x 1 t appropriately,own_claim
our OMR algorithm can be used to reduce measurement errors in restoring captured motion,own_claim
we use captured position data for x 1 t,own_claim
this data enhancement,data
to recover from possible measurement errors in joint angles,own_claim
the errors can accumulate as the forward kinematic positioning propagates toward the end-effector,own_claim
the positioning of the pose is done from joint angles alone,data
The end-effector position data x 1 t can be utilized to limit the above error accumulation within a certain range,own_claim
motion warping,background_claim
and,background_claim
motion displacement mapping,background_claim
discuss motion editing technique based on direct manipulation of data curves,background_claim
19,data
4,data
utilized signal processing techniques for motion editing,background_claim
4,data
11,data
the interpolation synthesis algorithm that chooses and combines most relevant motions from the database to produce animation with a specific positional goals,background_claim
18,data
some of the techniques above can be used for motion retargetting problem with user’s extra efforts,background_claim
they don’t specifically address the motion retargetting problem,background_claim
the combined direct and inverse kinematic control technique for motion editing,background_claim
3,data
The concept called coach-trainee metaphor is very similar to the motion retargetting problem formulation,background_claim
The fundamental idea is to consider the joint motion of coach as a reference input to trainee motion for the secondary task exploiting the null space of the Jacobian,background_claim
solving inverse kinematics,data
and trajectory the secondary   src t goal as much is to as imitate possible. the pattern,own_claim
The inverse kinematic constraint is given by half-space,background_claim
plane,data
cylinder,data
sphere,data
their approach shares the technique of utilizing the redundancy in inverse kinematic control with ours,own_claim
the problem they solved is not the motion retargetting,background_claim
is rather a motion correction technique,background_claim
the end-effector constraint specified by half-spaces is not general to solve the motion retargetting problem,data
A method which is devoted to the motion retargetting problem was proposed,background_claim
6,data
He used the spacetime constraint method that minimizes an objective function g x subject to the constrains of the form f x = c,background_claim
the whole interval has to be integrated to find the optimal solution,data
the method is intrinsically an off-line process,background_claim
The global method as above can correlate frames back and forth within the whole duration,background_claim
generally produces more smooth results compared to the local method,background_claim
our OMR technique,data
the look-ahead property of the global method is effective when the constraints are imposed only at sparse key frames,background_claim
Our OMR takes continuous trajectories of constraints as input,own_claim
it produces globally coherent motion in spite of local computation,own_claim
The global coherence is also achieved from the effort to exploit the redundancy of the system in resembling the original motion,own_claim
The local coherence of the motion comes from the fact that the adjacent frames are inter-related by the inverse rate control,own_claim
"without significant degradation of quality, our algorithm provides much faster and interactive way of motion retargetting",own_claim
"Their algorithm detects significant events and abstracts constraints from the motion, and imposes those constraints to other character",background_claim
a method to abstract and edit motion capture data,background_claim
2,data
The constraints abstracted from the motion is solved by inverse kinematics at significant frames and then those frames are interpolated,background_claim
the constraint abstraction is an improvement compared to the other techniques,background_claim
the interpolation technique might fail to preserve the high frequency details,background_claim
the key frames are sparsely spaced,data
"In an articulated figure, the joint configuration can be related to the position and orientation of the end effector by a kinematic mapping f : !",own_claim
"X , which maps the joint space to Cartesian space X",own_claim
The mapping is usually a nonlinear equation given by,background_claim
2,background_claim
dimensional where x 1 is vector,background_claim
m =3,own_claim
we,data
are interested,data
only,data
in position,data
m =6,own_claim
we are interested in both position and orientation of the end-effector,data
m can be 12 or 18,own_claim
we want to impose multiple end-effector constraints,data
we differentiate the above equation,data
we obtain,own_claim
3,own_claim
"where x _ 1 and   _ denote the end-effector positional velocity and joint angle velocity, respectively",own_claim
we can get joint angle velocity by inverting the Jacobian,own_claim
most articulated figures have kinematic redundancy,own_claim
the inverse of Jacobian is not unique,own_claim
there are an infinite number of possible solutions that satisfy Equation 3,own_claim
Given the end effector velocity,data
Some criteria can be specified to pick one that best fits for our purpose,own_claim
One of popular criteria is called the minimal norm solution,own_claim
4,own_claim
"where J 1 + = J 1 T J 1 J 1 T , 1 is the pseudo inverse 1 of J 1",own_claim
Equation 4 gives a particular solution,own_claim
can be generalized to include all possible solutions by adding a term from the null space of J 1,own_claim
5,data
the primary goal is accurately achieved in the case of continuous domain 2,own_claim
the secondary goal is also achieved in an optimal sense,own_claim
the equation,data
6,data
is used for Equation 5,data
"Another way to utilize the redundancy of the system is to set y to the gradient , r g of a criterion function g   in Equation 5",own_claim
integration of Equation 5 tries to reduce the value of g   while the end-effector is made to track the given trajectory,own_claim
9,data
To control the articulated figure to follow given reference end-effector to give the value trajectory of   t x 1,own_claim
t should,own_claim
Equation,data
4,data
"this be open-loop integrated fashion of integration can not eliminate the initial tracking error e 1 t 0 = x 1 t 0 , x des 1 t 0",own_claim
proposed the closed-loop inverse kinematics,background_claim
scheme based on Jacobian pseudoinverse,background_claim
13,data
14,data
15,data
1,data
CLIK,data
the error is exponentially convergent to zero for a fixed target position,background_claim
CLIK leads to zero steady state error,background_claim
Equation 4 has to be modified to,own_claim
CLIK,data
7,own_claim
where K 1 is a positive definite matrix we can provide,own_claim
the smallest eigen value of K 1 becomes large,data
the convergence rate increases accordingly,own_claim
the error dynamics is governed by the relation e 1 + K 1 e 1 =0,data
In a continuous time formulation,own_claim
a large value of K 1 is desirable,own_claim
Equation 7,data
an arbitrarily large K 1 doesn’t guarantee convergence in implementing the discrete version of Equation 7,own_claim
Equation 8 is implicit,own_claim
to compute   n we need to know in turn the requires value of the e 1 value n,own_claim
e 1 n should be estimated,own_claim
"in practice, we found that instability rarely occurs at a usual sampling rate",own_claim
in dealing with human motion,own_claim
"Even with K 1 = I the stability that is J 1 not n , guaranteed 1   n is",own_claim
approximated to the nonlinearity as x des 1 of n f 1 in,data
any estimation scheme based on the old values can not completely eliminate the era ror higher caused order by the estimation nonlinearity for e 1 of n f 1 than,own_claim
"it can e 1 n be , reduced 1 ,",own_claim
consequently can give better tracking performance,own_claim
the estimation rule described below gives satisfactory results,own_claim
The above procedures complete the discrete implementation of the CLIK algorithm with a secondary task,own_claim
The serial chain is not suitable for modeling creatures,own_claim
underlying articulated structures contain branches,data
the spine angles will differ in the solutions,own_claim
inverse kinematics is solved for these cases separately,data
both hands have their own goals to reach,data
"solved this problem by a weighted sum of independently obtained gradients, each of which directs its corresponding end-effector to a goal position",own_claim
22,data
the effects of different weights are not easily predictable,own_claim
"Depending on the weight assignment, their algorithm can fail to find an inverse kinematic solution even if all the constraints can be actually met",own_claim
"Intrinsically, the problem of finding inverse kinematic solution of multiple constraints doesn’t require any weight or priority assignment",own_claim
it should be possible without considering weights or assigning priorities to each end-effector constraint,own_claim
all the end-effector constraints can be met,data
"Compared with Zhao and Badler’s algorithm, Jacobian based inverse rate control gives a quite simple and intuitive solution to the problem",own_claim
"In inverse rate control, the above conflict of the spine angles is resolved during the computation of the pseudo inverse of the Jacobian",own_claim
an obvious and useful choice for the secondary task might be to imitate the joint motion of the source character,own_claim
joint angle trajectories contain important characteristics of a motion,data
the end-effector movements are already tracked by the primary task,data
( 20 ),data
A popular dexterity measure is min = max,background_claim
among the singular values of the Jacobian,background_claim
The adaptive scheme can be also useful,own_claim
we apply the OMR algorithm to motion transition,data
Smaller gain,own_claim
will produce sluggish tracking,own_claim
smooth transition can be obtained by adjusting the gain matrix K 1 and K 2 appropriately,own_claim
the animated model switches to another motion,data
produces smooth motion,own_claim
there exists a large discrepancy at the motion boundary,data
K 1 = K 2 = 0 : 1 I,data
K,own_claim
1 =   _ I,own_claim
does,own_claim
not guarantee,own_claim
stability,own_claim
The non-linear,data
function,data
is,data
linearly,data
approxi,data
mated,data
by,data
J 1 + x,data
system,data
can,data
become,data
unstable,data
when,data
"x _ 1 gets very large, or the sampling rate is very low",data
another provision for enforcing stability might be to clamp the value that goes into the box of J 1 +,own_claim
it is over a certain threshold,data
Figure 4,data
The provision might be effective,own_claim
there is an excessively large acceleration,data
the model is fully stretched and almost no manipulative redundancy is left in the system,data
we often measure the joint angles and use forward kinematics to reconstruct the motion,own_claim
we capture a motion,data
the method can introduce large end-effector position errors,own_claim
the joint angle error near the base is amplified when it comes to the end-effector,data
joint angle errors are accumulated as the forward kinematic positioning propagates toward the end-effector,data
interpolation/regression method,background_claim
applies inverse kinematics at sparse keyframes and the resulting joint angles are interpolated with cubic spline curves,background_claim
5,data
the characteristics of the original joint angle data is preserved in the resulting motion,background_claim
The interpolation is combined with least square fitting,data
The OMR algorithm described in the previous section can be used to reduce measurement errors in restoring the captured motion,own_claim
The new method is an improvement over the above interpolation/regression method in three aspects,own_claim
inverse kinematics is done at every frame,data
promises much closer end-effector tracking,own_claim
the high frequency component of the original motion is preserved much better in the new method,own_claim
the joint angle imitation is done by exploiting redundant degrees of freedom rather than depending on the least square fit,own_claim
the destination character has to be same with the source character,own_claim
pure data enhancement needs to be done,data
Compared to the forward kinematic motion reconstruction our OMR algorithm reduces end-effector errors remarkably,own_claim
our algorithm also reduces the errors in joint angle measurements,own_claim
the joint angle errors can accumulate in forward kinematic reconstruction,background_claim
the total amount of accumulated error is limited by the amount of end-effector position error,own_claim
it is processed by our OMR,data
the joint angle error due to the end-effector position error is distributed among all the joints,own_claim
our OMR produces more accurate result than the unprocessed data,own_claim
unless the amount of end-effector position error is excessively larger than that of joint angle errors,data
the above does not mean the retargetting and data enhancement should be done separately,own_claim
the two things are actually achieved at the same time,own_claim
This is especially useful,own_claim
a different destination character is used,data
a real-time performance is retargetted,data
our OMR based on inverse rate control is not inferior in the quality to the retargetting based on spacetime constraints,own_claim
we show a retargetting example in which our OMR is applied to retarget a walking motion,data
the first experiment,data
there can be discontinuities at the boundary,own_claim
the tracking error is large,data
At the boundaries of steps the base and end-effector were switched,data
The tracking error of the swing foot was negligible,data
the produced motion was smooth at the step boundaries,own_claim
"After adding the constraint, we could obtain a satisfactory result",own_claim
video clips #3,data
#4,data
"Even with the extra constraints, the end-effector trajectories of the source and the destination made an accurate match",own_claim
Figure 7,data
Other than that the original joint angle pattern was quite well preserved,own_claim
"After the retargetting, the sharp corner of the trajectory was well preserved",own_claim
our OMR preserves the high frequency content of the motion quite well,own_claim
inverse rate control is directed by Jacobian values,data
the tracking error is kept small,own_claim
the error increases,own_claim
the velocity is nearly constant,data
the velocity makes sudden changes,data
Figure 8,data
Big mountains or valleys are never missed,own_claim
a high sampling rate is needed to avoid aliasing,own_claim
To recover tiny fluctuations as well,own_claim
they can be prevented by adjusting the gain matrix K 2 or clamping some of the control input,own_claim
Section 4,data
The adjustment of K 2 does not affect the end-effector tracking performance,own_claim
the sharp corners are undesirable,data
the retargetted motion does not contain any noticeable difference from the source motion,own_claim
the body dimensions of Character B and the real performer are similar,data
the performance can be potentially improved further,own_claim
The code was not fully optimized,own_claim
the OMR is fast enough to process motion capture data collected at a usual sampling rate,own_claim
in real-time for the models of reasonable complexity,own_claim
"At this sampling rate, not a single frame was lost even with the visualization included",own_claim
The slower rate of the bat swing motion is due to the bigger size of the Jacobian matrix compared to the walking motion,own_claim
table,data
The method is an improvement over the off-line retargetting based on spacetime constraints,own_claim
real-time performances can be retargetted without degradation of retargetting quality,data
The OMR technique greatly helps to get more satisfactory results in motion capturing with fewer trials by giving the real-time feedback to the performer,own_claim
the captured data are enhanced in both end-effector positions and joint angles by going through our OMR filter,own_claim
One minor unsolved problem is that there is no easy way to guarantee full-proof stability of the system due to the non-linearity,own_claim
the model goes near the kinematic singularity,data
very little manipulative redundancy is left,own_claim
at a very low sampling rate,data
the system can became unstable,own_claim
experiments proved that the system never become unstable at 30Hz or higher sampling rate,own_claim
two remedies are recommended,own_claim
the source motion is available only at a low sampling rate,data
"by interpolating the source motion curves, first produce more samples, and then use them as the input to the OMR filter",own_claim
scale down the end-effector trajectory to avoid the singular configuration,own_claim
use both of ( 1 ) and ( 2 ),own_claim
The above remedies are for an excessively bad situation,own_claim
it can be very useful to people in character animation and game industries,own_claim
Our on-line motion retargetting produces satisfactory results in retargetting most human or creature motion,own_claim
the technique is well utilized,data
"The development of physics-based locomotion controllers de novo, independent from stock motion data, has been a long-standing objective in computer graphics research and has seen resurgence in recent years",background_claim
"Despite impressive progress, the gaits produced by existing controllers fall short of the natural appearance of human locomotion",background_claim
"Biological control systems output neural excitation signals, which then generate musculotendon forces that lead to joint torques",background_claim
The mapping from excitation to torque is highly complex,background_claim
physics-based walking controllers that do not rely on motion capture data commonly produce walking motion with exaggerated hip flexion which appears more crouched and less fluid than typical human walking,data
One likely cause of these differences is the control force generation mechanism,background_claim
the dependence of musculotendon forces on fiber length and contraction velocity,data
biarticular muscles,data
variable moment arms,data
Zajac 1989,data
"state-of-the-art bipedal locomotion control methods directly output joint torques, which ignore constraints and energetic costs imposed by muscle anatomy and physiology",background_claim
"to accomplish a motion task, controllers often employ torque patterns that are inefficient or even impossible for humans",background_claim
These biologically implausible torque patterns diminish the naturalness of the resulting gaits,background_claim
The goal of our work is to enhance the realism of locomotion gaits exhibited by physically-simulated humanoids without dependence on motion capture data,own_claim
These musculotendon units generate torques for the most important degrees-of-freedom,own_claim
during locomotion,own_claim
the sagittal plane hip,data
knee,data
ankle DOFs,data
many sets of parameters are capable of achieving this task,own_claim
the quality of the resulting motion varies significantly among them,own_claim
"In living humans and animals, metabolic energy expenditure can be estimated by oxygen consumption",background_claim
it is less clear how metabolic energy expenditure should be modeled for simulated characters,background_claim
choosing the most effortless gait that achieves the task,background_claim
"To produce gaits that have a high degree of realism, we employ an objective based on minimization of metabolic energy expenditure",own_claim
Alexander 2003,data
A common substitute is the sum of squared joint torques,background_claim
"does not account for the different effort levels required to generate torques in different joints, directions, and body configurations",background_claim
Schultz and Mombaur 2010,data
More nuanced objectives can be learned from inverse optimization,background_claim
are dependent on training data,background_claim
Liu et al. 2005,data
"by simply changing the initialization and target velocity, the same optimization procedure leads to running controllers",own_claim
Our use of biologically-based actuators enables the estimation of metabolic energy expenditure based on the internal state of the MTUs,background_claim
Anderson 1999,data
"Much like human locomotion, our controllers utilize significant ankle torque and generate smooth torque trajectories",own_claim
The resulting gaits match human ground truth to a greater extent than state-of-the-art walking controllers that do not rely on motion capture data,own_claim
The result is a locomotion control optimization procedure that minimizes a physiologically-based objective within a parameter space restricted to biologically plausible torque patterns,own_claim
Animation researchers have been interested in the control of locomotion for 3D humanoid characters for almost 20 years,background_claim
Hodgins et al. 1995,data
Laszlo et al. 1996,data
Faloutsos et al. 2001,data
One important recent contribution is SIMBICON,background_claim
a remarkably robust 3D humanoid locomotion controller based on the balance control,data
Yin et al. 2007,data
Raibert and Hodgins,data
1991,data
A num- ber of projects have since focused on expanding the controller repertoire for simulated bipeds,background_claim
and on locomotion in complex environments,background_claim
Jain et al. 2009,data
Coros et al. 2010,data
de Lasa et al. 2010,data
Mordatch et al. 2010,data
Wu and Popović 2010,data
"efforts have been made to make the synthesized motions more human-like, or “natural",background_claim
Wang et al.,data
the original SIMBICON-style controllers tend to produce gaits lacking hip extension with a constant foot orientation,background_claim
2009,data
"Knee angles lack flexion during swing, but lack extension at heelstrike",data
More recent controllers improve motions by designing better target trajectories in joint or feature space,background_claim
Coros et al. 2009,data
Coros et al. 2010,data
de Lasa et al. 2010,data
more human-like ankle motions have been produced,background_claim
differences in the hip and knee angles persist,background_claim
Figure 6a,data
"Perhaps more importantly, controllers relying on hand-tuned trajectories cannot be easily used to investigate how the control strategies change with respect to new constraints",background_claim
how would the character’s motion style change given a physical disability?,data
Can we synthesize appropriate gaits for older or younger characters?,data
Impressive results have also been achieved by controllers based on tracking motion capture data,background_claim
da Silva et al. 2008,data
Muico et al. 2009,data
Kwon and Hodgins 2010,data
Lee et al. 2010,data
Ye and Liu 2010,data
"as with methods that tune joint trajectories or controller parameters by hand, motion capture driven controllers have a limited ability to predict changes in gait",background_claim
de novo controller optimization has been used to capture features of human walking,background_claim
Wang et al. 2009,data
Wang et al. 2010,data
these methods were shown to produce gaits for a variety of characters and environmental conditions,background_claim
they do not employ realistic effort measures or biologicallyplausible control torques,background_claim
The resulting torque patterns are highly unnatural,background_claim
leading to artifacts such as excessive plantarflexion and sharp changes in kinematics,background_claim
Figure 6b,data
Figure 6a,data
our approach is to actuate key DOFs using Hill-type MTUs and to measure effort based on metabolic energy expenditure,own_claim
We demonstrate significantly more human-like kinematic and torque trajectories,own_claim
show that the same control parameterization and effort objective produce both walking and running,own_claim
locomotion controllers discussed above all operate on joint-actuated models,background_claim
musculoskeletal models have also been investigated in computer graphics,background_claim
Such models have been used in facial animation,background_claim
simulation of the human hand,background_claim
neck,background_claim
torso,background_claim
and the complete upper body,background_claim
Waters 1987,data
Lee et al. 1995,data
Sifakis et al. 2005,data
Sueda et al. 2008,data
Lee and Terzopoulos 2006,data
Zordan et al. 2006,data
Lee et al. 2009,data
optimize a CPG-based,background_claim
locomotion controller,background_claim
for 3D musculoskeletal models without tendon or activation dynamics,background_claim
their results were not compared to human kinematic and dynamic gait patterns,background_claim
Hase et al.,data
2003,data
Taga 1995,data
full musculoskeletal models are significantly more difficult to construct than joint-actuated models,background_claim
Our work demonstrates that measurable increase in locomotion realism can be produced by employing musculotendon actuators for a small subset of the body DOFs,own_claim
"In the biomechanics literature, abstract planar models have been used to study high-level principles of human locomotion",background_claim
energy minimization has been suggested as the criterion for humans in determining step length given walking speed,background_claim
as well as in selecting between walking and running,background_claim
Kuo 2001,data
Srinivasan and Ruina 2006,data
The spring-loaded inverted pendulum,background_claim
model,background_claim
has been used as a basis for predicting center-of-mass,background_claim
movements of human runners,background_claim
"in the absence of knee joints, these models cannot be used to simulate accurate gait pat- terns",background_claim
Blickhan 1989,data
Full and Koditschek 1999,data
Using a 2D model with knees and musculotendon actuators,background_claim
patterns of human walking can be generated by a set of simple control laws motivated by muscle reflexes,background_claim
Geyer and Herr,data
2010,data
which inspired our work,own_claim
their basic ideas can be embedded in a 3D humanoid model and extended to running,own_claim
Similar 2D models have been used for gait prediction,background_claim
and to generate human-like responses to disturbances,background_claim
Ackermann and van den Bogert 2010,data
Murai and Yamane 2011,data
Simulation studies on detailed 3D musculoskeletal models have been employed to understand muscle functions during locomotion tasks,background_claim
Anderson and Pandy 2001,data
Liu et al. 2008,data
Hamner et al. 2010,data
human-like lower body motor patterns can be found by minimizing metabolic energy expenditure per distance travelled,background_claim
2001,data
Anderson and Pandy,data
we adopt their proposed model of metabolic energy in our work,own_claim
these biomechanical simulations only recovered muscle activation trajectories,background_claim
did not produce locomotion controllers that can function beyond the duration of input data,background_claim
our work is complementary of the recent work,own_claim
who showed that simulating soft tissue deformation at contact sites could lead to more robust and realistic character motion,own_claim
"We demonstrate how musculotendon actuators, biologicallymotivated control laws, and a more realistic effort term can be used to produce more human-like locomotion gaits",own_claim
Jain and Liu,data
2011,data
key DOFs for gait analysis,background_claim
are exclusively generated by eight MTUs in each leg,own_claim
"control torques for the hip, knee, and ankle joint DOFs in the sagittal plane",own_claim
allows for some amount of foot rolling after heel-strike,own_claim
Perry and Burnfield 2010,data
We use cylinders to approximate the heel and ball of the foot,data
The choice of muscles is based on the planar model proposed,own_claim
Geyer and Herr,data
2010,data
"Conceptually, the contractile element",own_claim
models muscle fibers that can actively generate force,own_claim
depending on the current activation level,own_claim
"Intuitively, f l models the fact that muscles can generate force more efficiently near l opt",own_claim
the serial-elastic element,own_claim
models the tendon,own_claim
generated by the muscle fibers,own_claim
models passive forces,own_claim
the nonlinearity introduced by these relations is crucial for how simple control laws for muscle excitation can lead to complex force and torque trajectories,own_claim
f v captures how the muscle loses its ability to generate force as the contraction velocity increases,own_claim
The parallel-elastic element,own_claim
Section 4.1,data
The controller outputs neural excitation signals,own_claim
which are converted to muscle activations,own_claim
The conversion does not occur instantaneously,own_claim
The total lower extremity joint torques in the sagittal plane are obtained by summing over contributions from all relevant muscles,own_claim
"The main part of our control algorithm consists of functions that determine muscle excitation values for each of the lower body MTUs, which actuate the hip, knee, and ankle DOFs in the sagittal plane",own_claim
we rely on a pose-graph controller,own_claim
the upper body and the remaining DOFs in the lower body,data
Yin et al. 2007,data
Our control laws for the actuators are based on the muscle-reflex controller introduced by,own_claim
Geyer and Herr,data
2010,data
"Depending on the input feature, three different mappings are defined",own_claim
positive force feedback,data
"Two different sets of control laws apply for each muscle, depending on whether the leg is in stance or swing phase",own_claim
foot is on the ground or not,data
positive length feedback,data
muscle-driven proportional derivative,data
control,data
These mappings serve as building blocks for the control laws,own_claim
F  ̃ m MTU cannot increase indefinitely,own_claim
the muscle’s force generation capacity depends nonlinearly on the length and contraction velocity of the muscle fiber,data
u GAS F produces a positive feedback during mid-stance,own_claim
the foot is planted on the ground,data
reduces force output and the activation through u F GAS,own_claim
the same muscle activation rapidly shortens the fiber length,own_claim
the heel loses ground contact in late stance,data
the muscle activation does not produce a significant change in muscle fiber length,own_claim
"The positive length feedback effectively models a stretch reflex, which activates the muscle when the fiber is stretched beyond a fixed length",own_claim
u L m is most useful during the swing phase,own_claim
the TA must be activated to dorsiflex so that toe-stubbing can be avoided,data
"the HFL relies on length feedback to generate hip flexion torque during early swing, especially during running",own_claim
"Much like the standard torquebased PD-controller, the muscle-driven PD control aims to adjust θ towards the target angle θ m while damping its velocity",own_claim
"unlike the standard PD-controller, muscles can only activate after a time-delay",own_claim
each muscle can only generate forces to rotate the angular DOF in one direction,own_claim
The PD-control laws are employed by the hip muscles during the stance phase to maintain the global upper body orientation,own_claim
during stance preparation to prepare for ground contact,own_claim
"Each muscle has an initial constant excitation, or pre-stimulation value p m",own_claim
"These values are initialized close to zero, but are then optimized",own_claim
The SOL and GAS both rely on positive force feedback,own_claim
are the main sources of torque during walking,own_claim
The TA ensures foot clearance during swing using a length feedback,own_claim
the activation is suppressed during stance in proportion to the current force generated from SOL,own_claim
The suppression prevents hyperextension of the knee during mid-stance,own_claim
The suppression allows the generated TA activation patterns to better match human data during locomotion,own_claim
Two main differences between our stance phase control laws compared to,own_claim
lie in how the swing initiation state functions,own_claim
"we found it necessary to enter into swing initiation using the d  ̃ &gt; d  ̃ SI condition, rather than just wait for double stance",own_claim
Geyer and Herr,data
2010,data
running,data
the responsibility to maintain upper body orientation is always assigned to the lead leg,own_claim
we found it unnecessary to modulate the muscle-driven PD-control laws in the hip by ground reaction forces,own_claim
each muscle has an initial constant excitation value (q m ),own_claim
The leg motion relies significantly on passive dynamics during the swing phase,background_claim
most muscles are only excited at low levels,data
Collins et al. 2005,data
We found the addition of the stance preparation state to be important for discovering running gaits,own_claim
"The main exceptions are the TA, which maintains the length feedback",own_claim
to avoid toestubbing,own_claim
"and the HAM, which is activated at late swing phase to prevent the knee from being overextended before landing",own_claim
The amount of excitation in the HFL also depends on the value of upper body lean at the beginning of the swing phase,own_claim
the further the upper body leans forward compared to the reference lean angle,data
the more excitation is supplied from the HFL during the swing phase,data
Θ d is the same as the target angle in u Θ HFL,own_claim
The balance feedback law allows robust control strategies to be found in difficult environments,background_claim
being pushed by random forces,data
The rest of the DOFs are controlled using standard joint-space PDcontrollers with state-dependent parameters,own_claim
"the target features for the ankle and hip joints in the coronal plane are the global foot and pelvis orientations, respectively",background_claim
Wang et al.,data
2010,data
The coronal swing hip target angles follow the same feedback law as θ h,own_claim
only two are needed,own_claim
triggered by left/right foot-strike,data
Unlike in previous work,own_claim
DOFs with the most complex activities are actuated by muscles,data
Our upper body control also largely follows,own_claim
Wang et al,data
2010,data
a gait cycle is broken down into four states,data
the target feature of our back joint in the coronal plane is the global orientation of the torso instead of the local joint angle between the torso and the pelvis,own_claim
This global target allows our model to better keep the head upright during locomotion,own_claim
This formulation captures the tendency to rotate the shoulder backwards and inwards while bending the elbow,own_claim
The scale constant and the desired elbow angle are among the parameters set by optimization,own_claim
next section,data
The control algorithm,own_claim
"has a large number of parameters, which we set by optimization",own_claim
Section 4,data
Wang et al. 2010,data
"each of the u m F , u m L , and u m θ laws have one, two, and three parameters, respectively",own_claim
There are 56 parameters in total,own_claim
for the MTU control laws,own_claim
30 stance,data
26 swing,data
124 parameters (w) fully define a simulated motion {s 1 .,own_claim
s T } over T timesteps.,own_claim
combined with 33 free parameters describing the initial state of the simulation,data
The optimization aims to maximize the following return function: T R (w) = r(s t ) − w e J effort,own_claim
"The reward is defined as the negative sum of a number of task terms (i.e., r(s t ) = − i K i (s t ))",own_claim
high-priority goals that the controller must satisfy while minimizing effort,data
"In practice, these terms are weighed more heavily than the effort term",own_claim
"unlike in previous work, we did not need to include human-like speed to step-length ratio and minimal angular momentum about the COM as task terms",own_claim
"The tasks include moving the COM forward at a target velocity while not falling down for 10 seconds, and maintaining head stability and upper body orientation",own_claim
The task terms are based on,background_claim
Wang et al.,data
2010,data
defined in the supplemental material,data
The main contribution to our effort measurement is the total rate of metabolic energy expenditure,own_claim
over all MTUs,own_claim
we implement a model described by,own_claim
which is later expanded by,own_claim
Anderson,data
To quantify E,data
1999,data
Bhargava et al.,data
2004,data
The muscle activation heat rate models the rate of energy that is converted to heat by a muscle given a certain level of activation,own_claim
is a function of both the mass of the muscle and the excitation signal,own_claim
The maintenance heat rate similarly models the heat rate for the muscle to maintain contraction at a certain level,own_claim
depends additionally on the current fiber length,own_claim
A  ̇ = mass · f A (u),own_claim
M  ̇ = mass · g(  ̃ l CE )f M (a),own_claim
 ̃ l CE is the normalized muscle fiber length,data
mass is the muscle mass,data
larger muscles are generally capable of generating more force,own_claim
they are also more costly to use,own_claim
An optimized controller can be simulated at interactive rates using standard hardware,own_claim
"we are particularly interested in comparing our results to the mean and standard deviation curves for the sagittal hip, knee, and ankle joints for multiple subjects over multiple walking and running speeds",own_claim
data for walking is readily available,background_claim
curves during locomotion can be computed from motion capture and ground reaction force data,own_claim
Human joint moment,own_claim
Perry and Burnfield 2010,data
only scattered data are available for running,background_claim
we acquired our own ground truth data using an instrumented treadmill with 20 subjects,own_claim
Novacheck 1998,data
Yokozawa et al. 2007,data
Hamner et al. 2010,data
http://graphics.stanford.edu/projects/bio-locomotion,data
the range of hip angles in our subjects during walking increased by approx◦ imately 10,own_claim
the location of maximum ankle plantarflexion shifted slightly earlier in the gait cycle,own_claim
Comparing the mean curves for walking speeds from 1.0 m/s to 1.75 m/s,data
More pronounced differences are present between running data at different speeds,own_claim
running speed increased from 2.0 m/s to 5.0 m/s,data
locations of both the maximum hip extension and ankle plantarflexion shifted earlier by 5% and 10%,own_claim
The hip ◦ angle range and maximum knee flexion both increased by 30,own_claim
Both the hip and ankle torque outputs increased with speed,own_claim
the ankle torque curves did not differ significantly between 4.0 m/s and 5.0 m/s,own_claim
Supplemental figures indicate that our kinematic patterns generally agree with data over a range of speeds and especially at lower speeds,own_claim
"Two main discrepancies are the timing of knee flexion during stance, and ankle dorsiflexion before heel-strike",own_claim
the maximum knee flexion angle is lower than human data,own_claim
the location of maximum ankle plantarflexion occurs earlier in the gait cycle,own_claim
higher speeds,data
we found time-delays to be important for generating human-like motion given our control model,own_claim
Optimizing without activation dynamics and with ∆t m = 0 for all MTUs results in a solution where ankle torques build up too quickly in the stance phase,own_claim
leading to shorter step-lengths compared to human data,own_claim
A major artifact from all of the previous works is the lack of hip extension during mid-gait,background_claim
does not occur in our result,own_claim
is robust and flexible,background_claim
The feature-based controller of,background_claim
2010,data
Mordatch et al.,data
their basic walking gait shows an obvious crouch,background_claim
Our result also exhibits a range of knee motion more similar to humans compared to previous works,own_claim
all four controllers show excessive dorsiflexion before heel-strike,own_claim
An important advantage of optimization over hand-tuning is the ability to create controllers based on high-level objectives,own_claim
walking speed,data
our controllers generate more human-like gaits compared to optimized controllers from,own_claim
at faster walking speeds,own_claim
as well,own_claim
supplemental material,data
Wang et al.,data
2010,data
Wang10f,data
Wang10vf,data
An obvious artifact of all controllers from,background_claim
is the excessive plantarflexion in the early swing phase,background_claim
is not present in our result,own_claim
Wang et al.,data
2010,data
"Examining differences in torque generation, we can see that the controller presented by",background_claim
does not employ a human-like torque distribution between the joints,background_claim
Coros et al.,data
2009,data
Figure 6b,data
the gait is largely hip-driven,background_claim
SIMBICON,data
can be seen by the large hip torques and small ankle torques compared to human data,data
Yin et al. 2007,data
controllers from,background_claim
generated larger amounts of ankle torque by optimizing for a human-like torque ratio,background_claim
did not come close to matching the shapes of human torque data,background_claim
Wang et al.,data
2010,data
our work does not exhibit unnatural torque spikes,own_claim
state switching that are present in the previous works,data
our results show the lowest average standard score for all speeds,own_claim
The gait resulting from torque minimization exhibits too much knee flexion during the swing phase and too much dorsiflexion before heel-strike,own_claim
the actual magnitude of the dorsiflexion torque is not large even when the TA is fully activated,own_claim
it does not incur a large penalty in the torque objective,own_claim
the foot is a relatively light link,data
the metabolic energy objective captures the fact that activating and maintaining contraction of TA generates significant heat and should therefore be discouraged,own_claim
large ankle plantarflexion torques can be generated with relative ease,own_claim
Simply increasing the penalty on ankle torques does not account for the effort difference between generating torques in different directions,own_claim
"A simple objective that could approximate effort given a musculoskeletal model is the sum of squared muscle activations, which is commonly used in static optimization",own_claim
a technique for recovering activations given motion capture and force plate data,background_claim
Anderson 1999,data
this objective also does not lead to faithful walking kinematics,own_claim
demonstrated in the accompanying video,data
"Controllers optimized using the torque and activation objectives both exhibit large errors compared to nwalk, especially at the ankle joint",own_claim
noticeable kinematic differences are seen in the gaits produced by different objectives,own_claim
the torque curves are smooth due to the muscle model and the control parameterization,own_claim
the TA muscle,own_claim
is highly activated throughout the gait,own_claim
only torque is being minimized,data
responsible for dorsiflexion,data
are largely responsible for forward propulsion in normal walking,background_claim
The plantarflexors,background_claim
Liu et al. 2008,data
the mild crouch gait may be metabolically efficient compared to other gait choices,own_claim
under the condition of weakened plantarflexors,data
"weakening the GAS and SOL to a quarter of their original strength, while keeping all other objectives identical",own_claim
results in a mild crouch gait characterized by excessive knee flexion,own_claim
accompanying video,data
target speed 1.25 m/s,data
The crouch gait is commonly found in cerebral palsy patients,background_claim
weakness in the plantarflexors is one of many factors thought to contribute to the gait abnormality,background_claim
Steele et al. 2010,data
causes patients to vault the body forward over the extended stance limb,background_claim
Knee hyperextension,background_claim
can result from hamstring lengthening surgery in cerebral palsy patients,background_claim
common gait abnormality,data
Kay et al. 2002,data
"our optimization indeed results in a mild hyperextension gait after weakening HAM to a quarter of its original strength, with a mini◦ mum knee flexion angle of 2",own_claim
accompanying video,data
"Another cause of knee hyperextension is weakened quadriceps, which can be simulated by weakening the VAS in our model",own_claim
weakening the VAS to one-tenth of its original strength leads to a motion similar to quadriceps avoidance gait,own_claim
is seen in patients with quadriceps weakness and anterior cruciate ligament,background_claim
deficiency,background_claim
Timoney et al. 1993,data
Our controller architecture and objective function is not limited or specific to walking alone,own_claim
By simply changing the target velocity and initialization,own_claim
"the same procedure yields running controllers, without any modifications to the control parameterization",own_claim
previous optimization-based control synthesis methods required including torque ratios specific to walking as part of the objective,background_claim
changing the initial velocity from 1.3 m/s to 3.05 m/s,data
doubling the initial force feedback gains for GAS and SOL,data
bending the elbow,data
Wang et al. 2009,data
or adding spring elements for running,background_claim
Wu and Popović 2010,data
Our unified approach to both walking and running is consistent with the view that humans select between walking and running by minimizing energy at different speeds,own_claim
Srinivasan and Ruina 2006,data
Our running kinematic results do not match human data as well as walking,own_claim
the basic features of the curves are still present,own_claim
A main discrepancy is that our hip and knee joints both reach maximum extension earlier than human running data,own_claim
"Similar to our walking results, our knee joint flexes less during the stance phase compared to humans",own_claim
Our maximum knee flexion is also lower than human data,own_claim
"Our knee extension torque reaches maximum earlier than human data, which can cause the knee to extend too quickly during the stance phase",own_claim
our plantarflexion torques have a lower peak than human data,own_claim
resulting in a strategy that relies on the knees more than the ankles,own_claim
finding a satisfactory local minimum appears more difficult,own_claim
the target velocity increases,data
our controllers cannot tolerate nearly as much external force as recently developed controllers for purely joint-actuated characters,own_claim
our modeling of human-like torque generation and activation delays,data
Mordatch et al. 2010,data
Wang et al. 2010,data
we can still follow,own_claim
and optimize explicitly for controllers that can deal with external forces,own_claim
Wang et al.,data
2010,data
"we optimized controllers that can tolerate 100 N, 0.4 s pushes to the torso",data
the corresponding 100 N controller presented by,background_claim
did not employ a gait that is significantly different from the undisturbed baseline controller,background_claim
did not model biological torque generation constraints,data
Wang et al.,data
2010,data
We have presented a biologically-motivated control parameterization that can be used to automatically generate 3D human-like walking and running controllers of different speeds,own_claim
Controllers are optimized to satisfy a set of high-level task terms while minimizing an effort term based on modeling the rate of metabolic energy expenditure,own_claim
walking and running emerge from the same optimization process simply by changing the target velocity and initialization,own_claim
we show that our results adopt a human-like torque generation strategy while producing kinematic data significantly closer to humans than previous work,own_claim
comparisons to kinematic and torque data of human walking,data
"Our work demonstrates the importance of modeling constraints on torque generation due to muscle physiology, both in restricting the space of possible torque trajectories and in providing a realistic model of effort",own_claim
A natural extension is to investigate whether our control parameterization and effort term can be combined with the popular task-space controllers,background_claim
and higher-level planning,background_claim
to create humanlike motions on uneven terrains,background_claim
or obstacle courses,background_claim
scenarios that have only been addressed using purely joint-actuated characters,background_claim
Wu and Popović 2010,data
de Lasa et al. 2010,data
Coros et al. 2010,data
Coros et al. 2009,data
Mordatch et al. 2010,data
Wu and Popović 2010,data
"an exciting area for future work is to automatically synthesize locomotion controllers for more detailed, fully muscle-actuated human models",background_claim
Weinstein et al. 2008,data
Mordatch et al. 2010,data
Ye and Liu 2010,data
Lee et al. 2009,data
our approach can be used to develop predictive biomechanical models to investigate the effects of muscle and control properties on gait,own_claim
Section 6.2,data
more scientific validation of our simulation results is needed before we can conclude that our results apply to real humans,own_claim
One clear aspect for improvement is to adopt a more physically-accurate simulation engine,background_claim
Sherman et al. 2011,data
ODE “emphasizes speed and stability over physical accuracy”,data
Smith 2006,data
More accurate simulations and detailed models present additional computational challenges both in simulation speed and in parameter optimization,own_claim
are crucial for potential scientific and medical applications,own_claim
A central goal in human motion modeling and generation is to construct a generative motion model to predict how humans move,background_claim
The problem has attracted the attention of a large number of researchers because of both its theoretical and applied consequences,background_claim
can be used to generate realistic movement for animated human characters,data
A generative motion model,data
constrain the solution space for modeling 3D human motion in monocular video streams,data
Decades of research in computer animation have explored two distinctive approaches for human motion modeling,background_claim
statistical motion,data
physics-based motion modeling,data
modeling,data
accurate modeling of human motion remains a challenging task,background_claim
Statistical motion models are often represented as a set of mathematical equations or functions that describe human motion using a finite number of parameters and their associated probability distributions,background_claim
Statistical models are desirable for human motion representation,background_claim
they can model any human movement as long as relevant motion data are available,data
A fundamental limitation is that they do not consider the dynamics that cause the motion,background_claim
they fail to predict human motion that reacts to external forces or changes in the physical quantities of human bodies and in the interaction environments,background_claim
the results are often physically implausible and thereby display noticeable visual artifacts,background_claim
motion data are generalized to achieve new goals,data
unbalanced motions,data
foot sliding,data
motion jerkiness,data
Physics-based motion models could overcome the aforementioned limitations by applying physics to modeling human movements,background_claim
physical laws alone are often insufficient to generate natural human movement,background_claim
a motion can be physically correct without appearing natural,data
One way to address the problem is to define a global performance criterion based on either the smoothness of the movement or the minimization of needed controls or control rates,background_claim
minimal muscle usage,data
These heuristics show promise for highly dynamic motions,background_claim
it remains challenging to model low-energy motion or highly stylized human actions,background_claim
it is unclear if a single global performance objective,background_claim
is appropriate to model heterogeneous human actions,background_claim
minimal torque,data
running→walking→jumping,data
statistical modeling techniques can be combined with physics-based modeling techniques to address the limitations of both techniques,own_claim
Physical motion models and statistical motion models are complementary to each other,background_claim
they capture different aspects of human movements,data
physical models can utilize statistical priors to constrain the motion to lie in the space of natural appearance,background_claim
"more significantly, learn an appropriate performance criterion to model natural-looking human actions",background_claim
"statistical motion models can rely on physical constraints to generate physically correct human motion that reacts to external forces, satisfies friction limit constraints, and respects physical quantities of human bodies or interaction environments",background_claim
"By accounting for physical constraints and statistical priors simultaneously, we not only instill physical realism into statistical motion models",own_claim
extend physics-based modeling to a wide variety of human actions,own_claim
stylized walking,data
The key idea of our motion modeling process is to learn nonlinear probabilistic force field functions from prerecorded motion data with Gaussian Process,own_claim
models and combine them with physical constraints in a probabilistic framework,own_claim
We demonstrate the power and effectiveness of our motion model in constraint-based motion generation,own_claim
we can create a natural-looking animation that reacts to changes in physical parameters,own_claim
"a force field function u = g(q, q)  ̇ maps kinematic states",own_claim
inertias of human bodies,data
 ̇ to generalized forces (u),own_claim
masses,data
and friction properties of environments,own_claim
Figure 1(a),data
or external forces,own_claim
resistance forces,data
Figure 1(b),data
a single physically valid statistical model is sufficient to create physically realistic animation for a wide range of style variations within a particular human action,own_claim
“sneaky” walking,data
or transitions between heterogeneous human actions,own_claim
Figure 1(c),data
running→walking→jumping,data
Figure 1(d),data
We introduce a physically valid statistical motion model that combines physical laws and statistical motion priors,own_claim
use it to create physically realistic animation that achieves the goals specified by the user,own_claim
Statistical models are desirable for human motion modeling and synthesis,background_claim
they are often compact and can be used to generate human motions that are not in prerecorded motion data,data
a wide variety of statistical motion models have been developed,background_claim
their applications include inverse kinematics,background_claim
human motion synthesis and editing,background_claim
human motion style interpolation and transfer,background_claim
Grochow et al. 2004,data
Chai and Hodgins 2005,data
Li et al. 2002,data
Chai and Hodgins 2007,data
Lau et al. 2009,data
Min et al. 2009,data
Brand and Hertzmann 2000,data
Ikemoto et al. 2009,data
Min et al. 2010,data
the motions generated by statistical motion models are often physically invalid,background_claim
existing statistical motion models do not consider the forces that cause the motion,data
Another limitation is that they do not react to perturbations,background_claim
or changes in physical quantities,background_claim
external forces,data
masses,data
inertias of human bodies,data
Physics-based motion models could overcome the limitations of statistical motion models by applying physics to modeling human movement,background_claim
physics-based motion modeling is a mathematically ill-posed problem,background_claim
"there are many ways to adjust a motion so that physical laws are satisfied, and yet only a subset of motions are natural-looking",data
One way to address this limitation is by adopting the “minimal principle” strategy,background_claim
Witkin and Kass,data
1988,data
"an individual would determine a movement in such a way as to reduce the total muscular effort to a minimum, subject to certain constraints",background_claim
a major challenge in physics-based motion modeling is how to define an appropriate performance criterion for the “minimal principle.”,background_claim
Decades of research in computer animation,background_claim
introduced numerous performance criteria for human motion modeling,background_claim
Witkin and Kass 1988,data
Cohen 1992,data
Liu et al. 1994,data
Fang and Pollard 2003,data
minimal energy,data
minimal torque,data
minimal jerk,data
minimal joint momentum,data
minimal joint acceleration,data
minimal torque change,data
These heuristics show promise for highly dynamic motions,background_claim
it remains very difficult to model low-energy motions and highly stylized human movements,background_claim
A number of researchers have recently explored the potential of using prerecorded motion data to improve physics-based optimization methods,background_claim
editing motion data with the help of simplified physical models,background_claim
Popović and Witkin 1999,data
initializing optimization with reference motion data,background_claim
Sulejmanpasic and Popović 2005,data
learning parameters of motion styles from prerecorded motion data,background_claim
Liu et al. 2005,data
reducing the search space for physicsbased optimization,background_claim
Safonova et al. 2004,data
Ye and Liu 2008,data
"Similar to these methods, our system utilizes both motion data and physics for human motion analysis and generation",own_claim
there are two important distinctions,own_claim
we rely on statistical motion models rather than a predefined global performance objective,own_claim
to reduce the ambiguity of physics-based modeling,own_claim
minimal muscle usage,data
This enables us to extend physics-based modeling to stylistic human motions,own_claim
“sneaky walking”,data
Another attraction of our model is that it learns the mapping from the kinematic states to generalized forces using Gaussian process models,own_claim
"Unlike reference trajectories or linear subspace models adopted in previous work, GP models are capable of modeling both stylistic variations within a particular human action and heterogeneous human behaviors",own_claim
Our research draws inspiration from the large body of literature on developing control strategies for physics-based simulation,own_claim
our nonlinear probabilistic force field functions are conceptually similar to control strategies used for physics-based simulation,own_claim
both representations aim to map kinematic states to driving forces,data
researchers in physics-based simulation have explored two approaches for control design,background_claim
manually designed control strategies,background_claim
tracking a reference trajectory while maintaining balance,background_claim
Hodgins et al. 1995,data
Zordan and Hodgins 2002,data
Sok et al. 2007,data
Yin et al. 2007,data
da Silva et al. 2008,data
Muico et al. 2009,data
our approach is different in that we automatically learn nonlinear probabilistic mapping functions from large sets of motion data,own_claim
our goal is different because we aim to generate a desired animation that matches user constraints,own_claim
Physics-based simulation approaches are not appropriate for our task,own_claim
forward simulation techniques often do not provide accurate control over simulated motions,data
Our approach uses Gaussian process to model a nonlinear probabilistic function that maps from kinematic states to generalized forces,own_claim
have recently been applied to modeling kinematic motion for many problems in computer animation,background_claim
GP and its invariants,background_claim
GPLVM,data
nonlinear dimensionality reduction for human poses,background_claim
motion interpolation,background_claim
motion editing,background_claim
motion synthesis,background_claim
Grochow et al. 2004,data
Mukai and Kuriyama 2005,data
Ikemoto et al. 2009,data
Ye and Liu 2010,data
learned the kinematic mapping from pose information of the source motion to pose and acceleration information of the target motion,background_claim
applied them to transferring a new source motion into a target motion,background_claim
Ikemoto and her colleagues,data
2009,data
used GPLVM to construct a second-order dynamic model for human kinematic data,background_claim
used them to synthesize kinematic walking motion after a perturbation,background_claim
we focus on modeling the relationship between kinematic data and generalized forces rather than kinematic motion data itself,own_claim
Ye and Liu,data
2010,data
We construct a physically valid statistical model that leverages both physical constraints and statistical motion priors,own_claim
utilize it to generate physically realistic human motion that achieves the goals specified by the user,own_claim
Our motion model considers both Newtonian dynamics and contact mechanics for a full-body human figure,own_claim
Our dynamics models approximate human motion with a set of rigid body segments,own_claim
"To keep the body balanced, contact forces should not require an unreasonable amount of friction",own_claim
the center of pressure must fall within the support polygon of the feet,own_claim
Enforcing Newtonian dynamics equations and friction limit constraints would allow us to generate physically correct motion that satisfies friction limit constraints,own_claim
physical constraints alone are insufficient to model natural-looking human movement,own_claim
a motion can be physically correct without appearing natural,data
Our system automatically extracts force field priors embedded in prerecorded motion data,own_claim
Our idea of force field modeling is moti-,own_claim
vated by recent findings in neuroscience,own_claim
the complex spatiotemporal characteristics of the muscle patterns for particular actions can be modeled by a weighted combination of a small number of force fields,background_claim
Bizzi et al. 2008,data
D’Avella et al. 2006,data
a force field can predict how humans move by sequentially advancing a Newtonian dynamics model over time,own_claim
Given an initial kinematic state,data
of a human figure,data
Constructing force field priors from motion capture data,own_claim
is difficult,own_claim
current motion capture technologies cannot directly measure generalized forces,data
Our solution is to compute generalized forces from prerecorded kinematic poses using the following Newtonian dynamics equation,own_claim
"u = M (q)q + C(q, q)  ̇ + h(q)",own_claim
the generalized forces computed from kinematic motion data are often very noisy,own_claim
they are related to second derivatives of kinematic poses,data
Figure 2,data
Our approach follows the spacetime formulation in computer graphics literature,own_claim
Witkin and Kass 1988,data
Cohen 1992,data
"A force field is a nonlinear probabilistic function u = g(q, q) that maps the kinematic state (q, q)  ̇ to the generalized forces u",own_claim
We propose to use Gaussian process model to construct a force field from the training data sets,own_claim
it can efficiently model nonlinear property of the force fields,data
its learning process involves very few manual tuning parameters,data
"In practice, human motion is highly coordinated",own_claim
"the number of dimensions of joint poses, joint velocities, or generalized forces is often much lower than the number of dimensions of the character’ poses",own_claim
significantly speeds up the learning and evaluation process of GP models,own_claim
Subspace learning not only reduces the memory space for GP modeling,own_claim
"the learned force field priors pr(u|q, q)  ̇ can produce a physically realistic motion sequence by sequentially advancing a Newtonian dynamics model over time",own_claim
"Given an initial state (q 1 , q  ̇ 1 )",data
Figure 3(b),data
Figure 3(c),data
dynamics models adopted in physics-based modeling are often inconsistent with observed data,background_claim
simplified dynamics/contact models,data
Muico et al. 2009,data
In practice,background_claim
Sok et al. 2007,data
discretization of physics constraints,data
approximate modeling of physical quantities of human bodies,data
masses,data
inertias,data
dynamics equations are often not satisfied precisely,background_claim
"In our formulation, we assume Newtonian dynamics equations are disturbed by Gaussian noise of a standard deviation of σ physics",own_claim
"pr physics ∝ pr(q t |q t , q  ̇ t , u t ) ∝ exp − M ( q t ) q  ̈ t +C( q t , q  ̇ 2σ t )+h( 2 q t )−τ t − f c ( q t ,λ t )− f e 2 physics",data
the standard deviation σ physics shows our confidence of physics-based dynamics models,own_claim
"the Gaussian probability distribution has a narrow peak, indicating high confidence in the physical constraints",own_claim
the standard deviation is small,data
a large standard deviation indicates low confidence,own_claim
Such a motion model would allow us to generate an infinite number of physically realistic motion instances,own_claim
we can employ the motion model pr(x) to generate physically realistic animation x that best matches the user’s input c,own_claim
we can sample the initial prior distribution pr init to obtain an initial state for joint poses and velocities,own_claim
sequentially predict joint torques using the force field priors pr f orcef ield to advance the Newtonian dynamics model pr physics over time,own_claim
the system allows the user to specify various forms of kinematic constraints throughout the motion or at isolated points in the motion,own_claim
Similar to,own_claim
Chai and Hodgins 2007,data
the user can define a sparse set of key frames as well as contact constraints to generate a desired animation,background_claim
The user could also specify a small number of key trajectories to control fine details of a particular human action,background_claim
stylized walking,data
The motion synthesis problem can now be solved by nonlinear optimization methods,own_claim
One possible solution to incorporating the force field priors is to perform the optimization in the reduced subspaces,own_claim
performing the optimization in the subspaces can hurt the generalization ability of our model and often cannot match user-specified constraints accurately,own_claim
"To avoid this issue, we choose to perform the optimization in the original configuration space while imposing “soft” subspace constraints on both kinematic states and generalized forces",own_claim
The combined motion models are desirable for human motion generation,own_claim
they measure both statistical consistency and physical correctness of the motion,data
"With the physical term, our model can react to changes in physical parameters",own_claim
the external force in the physics term E physics,own_claim
will force the system to modify kinematic motion and joint torques as well as contact forces in order to satisfy Newtonian dynamics and contact mechanics,own_claim
a character is pushed by an external force,data
elastic forces in resistance running,data
Equation 7,data
"without force field priors, the modified motion could be unnatural",own_claim
"there are many ways to adjust a motion so that physical laws are satisfied, and yet only a subset of motions are natural-looking",data
"With force field priors, our system pushes the modified motions towards regions of high probability density in order to be consistent with force field priors",own_claim
We solved the optimization problem using sequential quadratic programming,own_claim
where each iteration solves a quadratic programming subproblem,own_claim
Bazaraa et al. 1993,data
The performance of our optimization algorithm highly depends on the initialization of the optimization,own_claim
The incorporation of physics into probabilistic motion models significantly improves the generalizability of statistical motion models,own_claim
"the system can generate physically realistic motion that reacts to changes in physical quantities of human bodies and interaction environments, a capability that has not been demonstrated in previous statistical motion models",own_claim
Our system can react to changes in physical quantities,own_claim
masses,data
inertias of human bodies,data
the simulated character maintained balance by adapting the gait and leaning the body to the right side in order to offset the additional weigh caused by the left shoe,data
the character moved the upper body forward in order to offset the effect of resistance force,own_claim
We can generate an animation that reacts to changes in friction properties of environments,own_claim
we show a simulated character walking on a slippery surface by reducing the friction coefficient to 0.05,data
We can edit an animation by changing the gravity of interaction environments,own_claim
we generated “moon” walking by setting gravity at 1.62 m/s 2,data
"we can extend physics-based modeling techniques to stylized walking, detailed walking variations, and heterogeneous human actions with the help of statistical motion priors",own_claim
Such actions are often difficult or even impossible to generate with previous physics-based modeling techniques,own_claim
Our approach can generate physically-realistic animation for highly stylized human actions,own_claim
The system constructed a single motion model from the training data sets and used it to generate various forms of stylized walking,own_claim
“sneaky” walking,data
“proud” walking,data
Figure 1(c),data
The synthesized motion displayed a wide variety of walking variations,own_claim
walking along a straight line,data
walking with a sharp turn,data
walking with a big step,data
walking on a slope,data
climbing over an obstacle,data
transitionings between different walking examples,data
Figure 5,data
We have observed that the generated motions achieve similar quality to the ground truth motion data,own_claim
This comparison shows the importance of force field priors for human motion generation,own_claim
optimizing the motion with the remaining terms,own_claim
is ambiguous,own_claim
E c and E physics,data
there are an infinite number of physically correct motions that satisfy user constraints,data
"Without the force field priors, the “sneaky” walking appears ballistic",own_claim
the,data
“minimal torque principle” is not suitable for stylized low-energy motion,data
"With the force field priors, our system can successfully generate physically realistic stylized walking motion",own_claim
This experiment demonstrated the importance of physical constraints to our motion model,own_claim
"With the physics term, the character reacted appropriately to external elastic forces by leaning the body forward to compensate for the resistance forces",own_claim
the character did not respond to external forces without the physics term,own_claim
Figure 6(b),data
Figure 6(a),data
subspace optimization produces uncoordinated human movements,own_claim
accompanying video,data
the walking gait appeared very stiff,data
the walking character did not swing the right arm properly,data
This indicates that a global subspace model for kinematic poses is not sufficient to model heterogeneous human actions,own_claim
the motions generated by subspace methods often cannot accurately match the trajectory and contact constraints specified by the user,own_claim
this might be due to compression errors caused by reduced subspace representation,own_claim
the GP-based statistical motion priors can accurately model spatial-temporal patterns in heterogeneous human actions and allow for generating physically realistic animation that matches userdefined constraints,own_claim
Our model combines the powers of physics-based motion modeling and statistical motion modeling,own_claim
We have demonstrated the effectiveness of the new model by generating a wide variety of physically realistic motions that achieve the goals specified by the users,own_claim
The incorporation of physical constraints into statistical motion models ensures generalized motions are physically plausible,own_claim
removing noticeable visual artifacts,own_claim
in an output animation,own_claim
unbalanced motions,data
motion jerkiness,data
it enables us to create motions that react to changes in physical parameters,own_claim
the system can generate new motions,own_claim
resistance running,data
moon walking,data
walking on slippery surfaces,data
"“walking with a heavy foot”, a capability that has never been demonstrated in any previous statistical motion synthesis methods",data
the use of force field priors for human motion modeling not only ensures that generated motions are natural looking,own_claim
also extends physically-based modeling techniques to stylized and heterogeneous human actions,own_claim
we have constructed a single generative model for modeling a wide variety of physically realistic walking variations,data
the system can generate physically realistic motion for stylized walking,own_claim
sneaky walking,data
and for heterogeneous human actions,own_claim
running→walking→jumping,data
Such actions are often difficult or even impossible to be synthesized by previous physics-based motion models,own_claim
We model the force field priors using Gaussian process models because GP can efficiently capture nonlinear properties of the force fields and its learning process involves very few manual tuning parameters,own_claim
Gaussian process needs to retain all of the training data to make predictions,own_claim
its computational demands grow as the square and cube respectively of the number of training examples,own_claim
might not scale up for use in very large data sets,own_claim
The sparse approximation strategy works well for the current size of training data sets,own_claim
"less than 8,000 frames",data
One possibility is to learn a probabilistic regression function for force fields using parametric statistical analysis techniques,own_claim
the mixture of experts mode,background_claim
its variants,background_claim
Jacobs et al. 1991,data
Jordan 1994,data
Another limitation of our system is that it cannot generate a motion that is very different from motion examples,own_claim
our approach is data-driven,data
the system is still unable to handle arbitrary external forces,own_claim
the force field priors prevent the generated motion from moving away from prerecorded motion data,data
We choose to model the force field priors based on generalized forces rather than joint torques because we can conveniently compute the generalized forces from current kinematic motion capture databases,own_claim
the CMU online mocap database 2,data
the learned force field priors can only predict resultant forces of join torques and contact forces,own_claim
we could construct more accurate force field priors that explicitly predict joint torques or contact forces,own_claim
both joint torque data and contact force data are available,data
"In the future, we plan to measure ground-reaction forces with force plates and use them along with the captured kinematic motion data to compute joint torques via inverse dynamics techniques",own_claim
the optimization problem is high-dimensional and highly nonlinear,own_claim
it might be subject to local minima,own_claim
the initialization process is critical to the success of our optimization,own_claim
It not only speeds up the optimization process but also alleviates the local-minimum problem,own_claim
"In the future, we plan to explore alternative techniques to address the local minimum problem",own_claim
One possibility is the employment of a Markov chain Monte Carlo,own_claim
"which comes to its solutions by efficiently drawing samples from the posterior distribution, using a Markov chain based on the Metropolis-Hastings algorithm",own_claim
"imilar to other constraint-based animation systems, our system requires the user to specify a sparse number of constraints",own_claim
to generate a desired animation,own_claim
key frames,data
contact constraints,data
specifying such constraints,own_claim
is not trivial for a novice user,own_claim
trajectory constraints,data
contact constraints,data
we are interested in extending our system to searching the positions and timings of contact events as part of the optimization variables,own_claim
avoiding the necessity of contact constraints required for constraint-based motion synthesis,own_claim
Trajectory and contact constraints were either directly modified from reference motion data or rotoscoped from video streams similar to the technique described,own_claim
Wei and Chai,data
2010b,data
we describe a technique for animating the behavior of materials,own_claim
that exhibit a combination of both fluid and solid characteristics,own_claim
Figure 1,data
"Often referred to as viscoelastic fluids, these materials initially respond to strain elastically like a solid",background_claim
when subjected to increasingly large stresses they flow like a fluid,background_claim
A tremendous variety of materials exhibit this type of behavior,background_claim
mucus,data
egg white,data
dough,data
gelatin,data
unset cement,data
liquid acrylic,data
toothpaste,data
gels,data
clay,data
liquid soap,data
"Like a solid, these materials can bounce and jiggle",background_claim
they will also flow like a fluid,background_claim
For some of these materials,background_claim
the combination of elastic and fluid behavior is quite apparent,background_claim
egg white,data
clay,data
For others,background_claim
the elastic behavior manifests less obviously as predominately fluid behavior that differs subtly from that of a simply viscous fluid,background_claim
liquid soap,data
The technique we present builds on prior Eulerian methods for animating incompressible fluids with free surfaces,own_claim
these methods can efficiently produce results that are realistic enough for applications in the demanding visual effects industry,background_claim
evidenced by their widespread use,data
Our method computes viscoelastic fluid behavior by supplementing the basic Navier-Stokes equations with additional terms for elastic body forces,own_claim
These terms can be,own_claim
readily computed on rectilinear grids using a staggered discretization scheme,own_claim
the use of an Eulerian formulation easily accommodates modeling large flows,own_claim
These elastic terms require computing the material strain throughout the fluid,own_claim
strain is computed by integrating strain-rate and advecting the results,own_claim
the fluid simulations do not make use of an explicit reference configuration,own_claim
The transition from elastic resistance to viscous flow is controlled by von Mises’s yield condition,own_claim
subsequent behavior is then governed by a quasi-linear plasticity model,own_claim
the mechanics describing the behaviors exhibited by solids and fluids may seem distinct,background_claim
they are actually quite similar,own_claim
both resist changes to their volume,own_claim
The physical reasons for why they conserve volume may differ,background_claim
the mathematical expressions capturing the behaviors are essentially the same,own_claim
many fluid methods assume incompressibility,own_claim
most solid methods assume that volume changes will be negligible,own_claim
"the internal damping force for a solid and the viscous force for a fluid are not just similar, they are identical",own_claim
One can easily start with the expression for strain-rate-proportional damping and derive the viscous terms of the Navier-Stokes equations,own_claim
The key difference between an ideal solid and an ideal fluid is the presence or absence of an elastic term that attempts to restore the material to its original shape,own_claim
Many materials cannot be classified clearly as a solid or fluid,own_claim
These materials elastically resist deformation up to a certain point after which they begin to flow,own_claim
even materials that are clearly solids behave this way,own_claim
they act elastically over some regime and then begin to flow plastically,data
some materials that are clearly fluids can withstand very small strains elastically,own_claim
The continuous variable that spans the space between solid and fluid materials is this limit on how much stress can be tolerated before flow occurs,own_claim
"Other properties such as damping/viscosity, density, and elastic stiffness are largely orthogonal",own_claim
the material behaves like a solid,own_claim
the elastic limit is set to a high value,data
it is zero,data
the material behaves like a fluid,own_claim
"intermediate values correspond to materials like mucus, liquid soap, toothpaste, or clay",own_claim
"These intermediate materials are often referred to as viscoelastic fluids or as elastoplastic solids, depending on whether their behavior is closer to that of an ideal fluid or ideal solid",own_claim
"In the field of computer graphics, the technique described in",background_claim
is perhaps closest in intent to the method we describe here,background_claim
"Carlson et al., 2002",data
they were interested in modeling materials with properties intermediate between solids and fluids using an Eulerian grid-based fluid simulation method,background_claim
they opt to map the continuum between fluids and solids to varying viscosity,background_claim
In their system a solid is simply a fluid with very high viscosity,background_claim
This approach ignores the elastic behavior demonstrated by many materials,background_claim
they do generate nice results for highly viscous fluids,background_claim
they describe an implicit integration method for coping with stability issues arising from very high viscosities,background_claim
Other graphics researchers have used particle-based methods for modeling highly viscous fluids and for modeling fluids with some form of elasticity,background_claim
the authors modeled melting thermoelastic materials,background_claim
"Terzopoulos et al., 1989",data
"By varying the elastic properties of the materials, this method could model a range of behaviors",background_claim
"without plasticity, it could not model materials",background_claim
that flow into a new configuration and then resist changes from that configuration,background_claim
clay,data
Similar approaches using different particle formulations have appeared,background_claim
"Desbrun and Gascuel, 1995",data
"Desbrun and Cani, 1996",data
"Cani and Desbrun, 1997",data
"Stora et al., 1999",data
The method,background_claim
used elastic forces with dynamically determined neighbors to allow behavior that is similar to plastic flow,background_claim
"Desbrun and Gascuel, 1995",data
Perhaps the greatest limitation on the level of realism achievable by these particle methods was the relatively small number of particles used,background_claim
"as processor speeds have increased, particle-based methods have been able to achieve increasingly impressive results",background_claim
Compelling real-time results for modestly sized systems appear,background_claim
"Müller et al., 2003",data
demonstrates off-line results that are comparable to the current best grid-based methods,background_claim
"Premo ze et al., 2003",data
both of these recent methods focus on strictly liquid behavior,background_claim
they could be extended along lines similar to what we propose here,own_claim
Some methods for modeling solids have dealt with limited amounts of plastic flow,background_claim
describe transition to plastic flow based on von Mises’s yield condition,background_claim
"Terzopoulos and Fleischer, 1988a",data
"Terzopoulos and Fleischer, 1988b",data
used a similar plasticity model for ductile fracture behavior,background_claim
"O’Brien et al., 2002",data
We use the same yield condition of von Mises,own_claim
we do not assume that plastic flow occurs instantaneously,own_claim
we use a more complex model that accommodates phenomena such as creep,own_claim
these prior methods used Lagrangian meshes with largely fixed topology,background_claim
they would have encountered “tangling” difficulties,background_claim
inverting elements,data
large amounts of plastic flow,data
"Another, rather interesting, approach to combining solid and fluid behaviors appears in",background_claim
"Nixon and Lobb, 2002",data
The result is an object that behaves somewhat like a water balloon,background_claim
"Our work builds directly on previous grid-based, Eulerian methods for animating fluids with free surfaces",own_claim
Details on these methods can be found in,background_claim
"Foster and Metaxas, 1996",data
"Stam, 1999",data
"Foster and Fedkiw, 2001",data
"Enright et al., 2002",data
our work essentially extends,own_claim
to include the behavior of viscoelastic fluids,own_claim
"Enright et al., 2002",data
"Outside the graphics field, viscoelastic materials have been studied extensively",background_claim
for detailed descriptions of several different models for viscoelastic and elastoplastic materials,background_claim
"Bird et al., 1987",data
"Han and Reddy, 1999",data
"Fung, 1965",data
"The general approaches we use for introducing elastic forces into the Navier-Stokes equations, and integrating and advecting strain are not completely novel",own_claim
fluid simulation outside the graphics literature that involve elastic forces include,background_claim
"Gerritsma, 1996",data
"Tomé et al., 2002",data
"Bonito et al., 2003",data
A detailed analysis of two-dimensional simulations of viscoelastic fluids on staggered rectilinear grids appears in,background_claim
"Gerritsma, 1996",data
The three-dimensional method we use for storing rank-two tensor quantities on a staggered grid is a generalization of their two-dimensional method,own_claim
a combination of rectilinear grids and finite elements are used with a volume-of-fluid method to model three-dimensional fluids with elastic properties,background_claim
"Bonito et al., 2003",data
They do not include plasticity and they store all quantities at cell centers,background_claim
The marker-andcell based method,background_claim
is another example solving viscoelastic free-surface flows,background_claim
"Tomé et al., 2002",data
They address issues relating to elastic-stress based boundary conditions at rigidbody and free-surfaces,background_claim
they use a staggered grid for the velocity field,background_claim
they still store their tensor values at cell centers,background_claim
The framework we use for fluid simulation is based on the method described in,own_claim
"Enright et al., 2002",data
This framework consists of two primary components which work together to produce useful results,background_claim
The first is a rectilinear grid that stores the values that define the fluid’s state,background_claim
The second component is a function whose levelset at zero locates the boundaries of the fluid,background_claim
we focus on the changes we make to accommodate viscoelastic behavior,own_claim
We suggest the following references for a more complete description of this simulation methodology,background_claim
"Foster and Metaxas, 1996",data
"Stam, 1999",data
"Foster and Fedkiw, 2001",data
"Enright et al., 2002",data
A full description of this type of system is beyond the scope of this paper,own_claim
Behavior of the viscoelastic fluid is governed by a modified version of the Navier-Stokes equations that includes an additional term for elastic stress,own_claim
We refer the reader to,background_claim
for a discussion on efficiently modeling the above equations,background_claim
"Stam, 1999",data
"Foster and Fedkiw, 2001",data
The fourth term of Equation (1) computes acceleration due to elastic forces,own_claim
it requires knowing the elastic strain throughout the fluid,own_claim
we could use its spatial derivatives to compute strain,own_claim
we had an explicit deformation function,data
with the Eulerian formulation we are using there is no deformation function available,own_claim
the large deformation and flow experienced by the material makes tracking deformation impractical,own_claim
we compute strain by integrating strain-rate,own_claim
we also require rules concerning how the elastic strain changes due to plastic yielding,own_claim
we do not wish to model a perfectly elastic material,data
We use von Mises’s criterion for determining when plastic flow should occur,own_claim
This criterion depends on the elastic,background_claim
strain deviation,background_claim
which is the elastic strain with any dilation removed,background_claim
no plastic flow occurs,own_claim
the magnitude,data
of the strain deviation remains below the yield point,data
flow occurs at a rate proportional to the amount the limit has been exceeded by,own_claim
the limit is exceeded,data
Equation (9) does not take into account the movement of the material through space,own_claim
"Like velocity or any other fluid property, the elastic strain must be advected with the fluid",own_claim
"The well known staggered grid method, originally described by",background_claim
elegantly avoids problems,background_claim
plague methods that store collocated pressure and velocity values,background_claim
"Harlow and Welch, 1965",data
on the simulation grid,own_claim
we also need to store the elastic strain,own_claim
and rank-one tensors,own_claim
in addition to scalars,own_claim
a rank-two tensor,data
velocity,data
pressure,data
the different components of the strain tensor are stored at different locations,own_claim
velocity components are stored separately on faces,data
The diagonal entries are stored at the cell centers,own_claim
The off-diagonal entries are stored at the center of edges perpendicular to the component directions,own_claim
the xy components are stored on the edges parallel to the z axis,data
This approach is a generalization of the 2D method described in,own_claim
"Gerritsma, 1996",data
they describe its merits in detail,background_claim
We use a particle-level-set method for tracking the fluid’s free surface,own_claim
"with the substantially faster, though less accurate, method detailed in",own_claim
"Enright et al., 2002",data
"Enright et al., 2004",data
The authors note that the method is susceptible to volume loss,background_claim
"we found this behavior to be problematic for some of our examples that involve fixed, small amounts of fluid",own_claim
"We were able to ameliorate this problem somewhat by using a level-set grid with twice the fluid grid’s resolution, and that is staggered with respect to the fluid grid",own_claim
"This scheme places level-set grid centers on the cell centers, face centers, edge centers, and nodes of the fluid grid",own_claim
the higher resolution also benefits the rendered surfaces,own_claim
helping to prevent volume loss by locating level-set values where velocity boundary constraints are enforced,own_claim
The motion of the pure fluid example differs substantially from the viscoelastic examples,own_claim
the surfaces of the viscoelastic examples retain evidence of the impact even after motion has stopped,own_claim
the behavior of simple and viscoelastic fluids differ substantially,own_claim
jets of different fluids sprayed into a closed container,data
Figure 4,data
several splashes that are generated when a fluid sphere is hurled into a tank containing the same material,data
Figures 1,data
3,data
A simply viscous fluid would merely flow out to fill the container,own_claim
show similar behavior that occurs when cubes of different materials are dropped onto a hard surface,own_claim
Some of the images,own_claim
Figure 2,data
The examples with high yield strain,own_claim
behave like deformable solids and bounce,own_claim
large γ,data
"we can also model highly deformable, sticky objects that interact with each other",own_claim
Figure 9,data
their level-set surfaces merge so that they adhere,own_claim
the spheres collide,data
"The fluid retains its momentum, generating the resulting spinning and stretching motion",own_claim
the spheres slightly anticipate their collision,own_claim
This error occurs because the surfaces begin to interact through shared ghost cells,own_claim
ray marching produces nice results,background_claim
we think they might be improved using the method described in,own_claim
"Heckbert, 1987",data
Some of our examples suffer from noticeable volume loss,own_claim
"This occurs because, while the particle level-set method does a nice job modeling moderately thick volumes of fluids, very thin surfaces, or strands, still have a tendency to vanish",own_claim
These effects are particularly noticeable visually when the fluid is moving in orderly fashion,own_claim
It is difficult to say if this behavior is a deficiency in our implementation or a limitation of the surface tracking method,own_claim
The speed of this simulation method is approximately the same with and without the addition of elastic forces,own_claim
one of the falling cube examples on a 40 3 grid requires about half an hour of computation per second of animation on a single 3 GHz Pentium 4 processor,data
so very high viscous or elastic coefficients would probably cause stability problems and force smaller time steps,own_claim
We are using an explicit integration method for the viscous and elastic forces,own_claim
that difficulty could be ameliorated somewhat with an implicit integration scheme,own_claim
The material can be made to adhere to or slip off of boundary surfaces by adjusting the velocity or pressure constraints enforced along closed boundaries,own_claim
in our current implementation all fluids will stick to each other,own_claim
different surface components merge when they collide,data
this behavior is a desirable feature,own_claim
the fluids we show in our examples,data
it would be undesirable,own_claim
"non-sticky materials, like cold gelatin",data
"To a large extent, our method for incorporating elastoplastic terms does not depend on the underlying fluid simulation method",own_claim
one could easily adapt the method to other fluid simulation techniques,own_claim
smoothed-particle hydrodynamics,data
adding the elastoplastic terms was fairly easy,own_claim
we already had a working fluid simulation,data
the method we present can model a wide range of phenomena,own_claim
many real materials can demonstrate behaviors not captured by this model,own_claim
can exhibit many interesting effects that arise from their microscopic structure,own_claim
Biological fluids,own_claim
blood,data
Even relatively simple polymer suspensions can demonstrate behavior that can only be roughly captured with this model,own_claim
The fundamental problem of tracking a surface as it is advected by some velocity field arises frequently in applications,background_claim
surface reconstruction,data
image segmentation,data
fluid simulation,data
"Unfortunately, the na ̈ ive approach of simply advecting the vertices of a polygonal mesh, or other explicit representation of the surface, quickly encounters problems such as tangling and self-intersection",background_claim
a family of methods,background_claim
has been developed for surface tracking,background_claim
level-set methods,data
These methods represent the surface implicitly as the zero set of a scalar field defined over the problem domain,background_claim
The methods are widely used,background_claim
the texts by,background_claim
provide an excellent introduction to the topic,background_claim
Sethian,data
1999,data
Osher and Fedkiw,data
2003,data
Osher and Sethian’s,data
1988,data
"One of the key issues that distinguishes various level-set and similar approaches is the representation of the scalar field, which must capture whatever surface properties are important to a given application",background_claim
we present a surface tracking method that explicitly represents the surface as a set of polygons,own_claim
we update the surface in time with an implicit representation,own_claim
"an advected signed-distance function, ψ, whose",data
zero set defines the surface,data
A new polygonal surface is generated by contouring or extracting the zero set of ψ,own_claim
"Using adaptive octree data structures, we can efficiently and reliably construct the new surface and corresponding signed-distance function",own_claim
The theoretical framework for this method comes from a series of articles,background_claim
that described and analyzed a method for contour tracking in two dimensions,background_claim
Strain,data
1999b,data
1999c,data
1999a,data
2000,data
2001,data
going from twoto three-dimensional problems,data
the semi-Lagrangian procedure for backward advection does not change significantly,background_claim
significant surface tracking issues arise when moving to three dimensions,background_claim
demonstrates how semi-Lagrangian surface contouring can be useful for animating the complex and interesting behavior of fluids,own_claim
This article,own_claim
One of the primary advantages of this method is that it enables tracking surface characteristics,own_claim
color,data
texture coordinates,data
These properties can be easily stored directly on the polygonal mesh and efficiently mapped onto the new surface during semi-Lagrangian advection,own_claim
The explicit surface representation also facilitates other common operation,own_claim
rendering,data
reconstruction from a scalar function allows operations that rely on an implicit representation,own_claim
"the method produces detailed, well-defined surfaces that are suitable for realistic animation and that do not jitter or exhibit other undesirable behaviors",own_claim
Our method pulls together solutions to a number of well-studied problems to arrive at a method for tracking surfaces,own_claim
the topic has received a significant amount of attention,background_claim
surface tracking arises in a variety of contexts,data
"Even in the limited context of fluid animation, there has been a great deal of excellent work on simulating fluids with free surfaces",background_claim
Foster and Metaxas,data
1996,data
The methods available for tracking free surfaces of liquids can be roughly sorted into four categories,background_claim
Foster and Fedkiw,data
2001,data
level-set methods,background_claim
Enright et al.,data
2002b,data
Carlson et al.,data
2002,data
particle-based methods,background_claim
2004,data
particle level-set methods,background_claim
Losasso et al.,data
2004,data
Goktekin et al.,data
2004,data
semi-Lagrangian contouring,background_claim
Hong and Kim,data
2005,data
Wang et al.,data
2005,data
Guendelman et al.,data
2005,data
Zhu and Bridson,data
2005,data
"Many of the most successful solutions to the surface tracking problem are based on level-set methods, which were originally introduced by",background_claim
Osher and Sethian,data
1988,data
A complete review of level-set methods is beyond the scope of this article,own_claim
we recommend the excellent surveys by,own_claim
Sethian,data
Osher and Fedkiw,data
1999,data
2003,data
"By using this implicit representation, level-set methods avoid dealing with complex topological changes",background_claim
Level-set methods represent a surface as the zero set of a scalar function which is updated over time by solving a partial differential equation,background_claim
level-set equation,data
This equation relates change of the scalar function to an underlying velocity field,background_claim
the scalar function is defined and maintained in the embedding three-dimensional space,background_claim
"In practice, scalar function values need only be accurately maintained very near the surface",background_claim
resulting in a cost that is roughly linear in the complexity of the surface,background_claim
One difficulty with level-set methods is that they generally require very high-order conservation-law solvers,background_claim
fast semi-Lagrangian methods have been shown to work in some cases,background_claim
Strain 1999b,data
Enright et al. 2005,data
"The most significant drawback to using level-set methods to track liquid surfaces is their tendency to lose volume in underresolved, high-curvature regions",background_claim
an excellent discussion of the reasons for this volume loss,background_claim
Enright et al.,data
2002a,data
"Like us, they used adaptive grid structures to store the scalar field",own_claim
they used a two-level structure rather than a full octree,background_claim
They also used semi-Lagrangian methods to update their level-set function,background_claim
built a sculpting system using a level-set surface representation which could be manipulated by a user with a variety of sculpting tools,background_claim
Bærentzen and Christensen,data
2002,data
they interpolated distance values stored on a regular grid,background_claim
our explicit surface representation allows us to compute exact distances near the surface,own_claim
evaluating the distance function after the semi-Lagrangian path tracing,data
coupled volume-of-fluid and level-set methods to model droplet dynamics in ink-jet devices,background_claim
Sussman and Puckett,data
2000,data
"techniques represent the surface by storing, in each voxel, a volume fraction",background_claim
Volume-of-fluid,background_claim
Hirt and Nichols 1981,data
the proportion of the voxel filled with liquid,data
Any cell whose fraction is not one or zero contains surface,background_claim
"Unfortunately, this representation does not admit accurate curvature estimates, which are essential to surface tension computations",background_claim
accurate curvature estimates are easily computed from level-set representations,background_claim
the authors combined volume-of-fluid and level-set representations to model surface tension in ink droplets,background_claim
Some volume-of-fluid methods build an explicit surface representation from the volume fractions stored in each voxel,background_claim
The key difference between our method and volume-of-fluid methods is that we never compute volume fractions,own_claim
our explicit representation is generated by contouring an advected signed-distance function,own_claim
A number of researchers,background_claim
have used particles to track surfaces,background_claim
Terzopoulos et al. 1989,data
Desbrun and Gascuel 1995,data
Foster and Metaxas 1996,data
Desbrun and Cani 1996,data
Cani and Desbrun 1997,data
Stora et al. 1999,data
M uller  ̈ et al. 2003,data
2004,data
Premo ze et al. 2003,data
Zhu and Bridson 2005,data
Pauly et al. 2005,data
"In many of these methods, the simulation elements are particles, which are already being tracked throughout the volume of the deforming liquid or solid",background_claim
used particle positions and velocities to guide a level-set solution,background_claim
Premo ze et al.,data
2003,data
Mueller et al.,data
2004,data
Pauly et al.,data
used special particles,background_claim
to represent the surface,background_claim
2005,data
surfels,data
Surfels store a surface normal as well as position,background_claim
there are generally many more surfels than simulation particles,background_claim
The principal drawback of these methods is that generating high-quality time-coherent surfaces can be difficult,background_claim
directly visualizing the particles is insufficient for high-quality animations,data
methods which convert the particles to some other representation on a per-frame basis often lack temporal coherence,data
methods which must run sequentially through the frames or run during the simulation are often quite costly,data
Additional difficulties arise when trying to ensure a good sampling of the surface,background_claim
To address the volume loss of level-set methods,background_claim
built on the work of,background_claim
to develop particle level-set methods,background_claim
Enright and his colleagues,data
2005,data
2002b,data
2002a,data
Foster and Fedkiw,data
2001,data
"These methods track the characteristics of the fluid flow with Lagrangian particles, which are then used to fix the level-set solution",background_claim
essentially increasing the effective resolution of the method,background_claim
these methods have been extended to work with octrees,background_claim
allowing for very high-resolution surface tracking,background_claim
Enright et al. 2005,data
Losasso et al. 2004,data
These methods represent the current state of the art on tracking liquid surfaces for animation,background_claim
do have some drawbacks,background_claim
the method is extremely susceptible to high-frequency temporally incoherent perturbations of the surface,background_claim
there is no guarantee that the same particle will be chosen at subsequent timesteps,data
"The artifacts are most noticeable when the surface thins out below the grid resolution and particles happen to be near some of the sample points, but not others",background_claim
the method has a large number of parameters and rules,background_claim
"which need to be decided, often in an application-specific way",background_claim
the number of particles per cell,data
the reseeding strategy,data
applications,background_claim
"the method tends to produce very smooth surfaces with very little detail, which is desirable in some",background_claim
the particle level-set methods have been very successful and represent a significant step forward in the area of surface tracking for liquid simulations,background_claim
has written a series of articles building a theoretical framework culminating in the formulation of surface tracking as a contouring problem,background_claim
Strain,data
He demonstrated his semi-Lagrangian contouring method on a variety of two-dimensional examples,background_claim
1999b,data
1999c,data
1999a,data
2000,data
2001,data
Our method is based on the method presented by,own_claim
with variations and extensions to deal with problems that arise in three-dimensional computer animation,own_claim
Strain,data
2001,data
our method bears a number of similarities to level-set methods,own_claim
takes advantage of many techniques developed for those methods,own_claim
we are not directly solving the level-set equation,own_claim
"By formulating surface tracking as a contouring problem, we avoid many of the issues that complicate level-set methods",own_claim
we do not have the same volume loss issues which prompted the particle levelset methods,own_claim
we do not explicitly conserve volume,own_claim
our semi-Lagrangian path tracing tends to conserve volume in the same way as the Lagrangian particles in the particle level-set method,own_claim
The octree structure we use to build and index the polygonal mesh is quite similar to adaptively sampled distance fields,own_claim
Frisken et al. 2000,data
The key difference between adaptively sampled distance fields and our surface representation is that we store a polygon mesh in addition to distance samples,own_claim
These structures adaptively sample distance fields according to local detail and store samples in a spatial hierarchy,background_claim
"Additionally, our splitting criterion is different from that presented by",own_claim
Frisken et al.,data
2000,data
An alternative structure for storing narrow-band level-set functions is the dynamic tubular grid of,background_claim
Nielsen and Museth,data
2006,data
This structure can be combined with run-length encoding schemes,background_claim
Houston et al. 2006,data
"providing extremely compact, high-resolution representations of level-set functions",background_claim
they are able to exploit cache coherence to provide extremely fast run times for most level-set operations,background_claim
the asymptotic times for their structure match ours,own_claim
Integrating the methods presented here with this data structure is a promising area for future work,own_claim
we formulate surface tracking as a contouring problem,own_claim
The contouring problem has been well studied in computer graphics,background_claim
a number of approaches have been suggested,background_claim
was first presented by,background_claim
and later named and popularized by,background_claim
Wyvill et al.,data
1986,data
Lorensen and Cline,data
The oldest and most widely used is marching cubes,background_claim
1987,data
Marching cubes suffers from a tendency to create ill-shaped triangles,background_claim
This problem is fixed to some degree by dual contouring,background_claim
which also provides adaptive contouring and an elegant means of preserving sharp boundaries,background_claim
Ju et al. 2002,data
Dual contouring depends on normal estimates at edge crossings and is very sensitive to inaccuracies in these normal estimates,background_claim
"Unfortunately, in our method we do not have accurate normal information until after the contouring step",own_claim
we have the triangle mesh,data
presented a contouring technique which uses Delaunay triangulation methods to generate provably good triangulations,background_claim
Boissonnat and Oudot,data
2003,data
this method appears to be prohibitively expensive for something which must run at every timestep,background_claim
Yet another alternative is marching triangles,background_claim
which takes a surface-based rather than volume-based approach to contouring,background_claim
Hilton et al. 1996,data
"Marching triangles requires significantly less computation time and fewer triangles, and produces higher-quality triangles than marching cubes",background_claim
"marching triangles is not guaranteed to produce closed, manifold meshes in the presence of sharp or thin features",background_claim
Semi-Lagrangian methods have been widely used in computer graphics,background_claim
to solve the nonlinear advection term of the Navier-Stokes equations,background_claim
1999,data
Stam,data
These methods provide the foundation for our surface tracking method,own_claim
Our discussion follows that of,own_claim
Strain,data
1999b,data
This observation forms the basis of the backward characteristic or CIR scheme developed by,background_claim
"Courant, Isaacson, and Rees",data
1952,data
which is the simplest semi-Lagrangian scheme,background_claim
linear PDEs,data
Equation (1),data
the Lax-Richtmyer equivalence theorem,background_claim
guarantees that CIR will converge to the exact solution,background_claim
LeVeque 1990,data
"t, x → 0",data
it is stable and consistent,data
The stability properties of the CIR scheme are excellent,background_claim
unconditional stability is guaranteed in any norm where the interpolation does not increase norms,own_claim
"Each new value φ(x, t n+1 ) is a single interpolated value of φ at time t n",own_claim
CIR with linear interpolation is unconditionally stable in the 2-norm,data
"semi-Lagrangian schemes satisfy the CFL condition by shifting the stencil, rather than restricting the timestep",background_claim
information propagates over long distances in one timestep,own_claim
CIR is consistent to O( t),own_claim
a condition t ≥ O( x) is satisfied,data
This condition is extremely convenient,own_claim
t = O( x) balances time and space resolution in this first-order accurate scheme,data
CIR still converges when the solution is smooth,own_claim
nonlinear PDEs,data
nonsmooth shock solutions of conservation laws move at the wrong speed,own_claim
CIR is not in conservative form,data
level-set solutions have no shocks,data
CIR is a natural scheme for moving interfaces,own_claim
would quickly encounter significant topological difficulties,own_claim
advect the mesh points through the flow field,data
we avoid topological issues by updating the surface using an implicit representation,own_claim
One of the key differences between our method and other surface tracking methods is that we build an explicit representation of the surface at every timestep,own_claim
The explicit representation provides our method with several advantages,own_claim
it allows us to compute exact signeddistance values near the mesh,own_claim
it allows us to store properties on mesh vertices,own_claim
it allows us to take advantage of the many tools and algorithms which have been developed in computer graphics for manipulating and rendering triangle meshes,own_claim
"In solving this advection term, our method differs from the simple CIR scheme discussed earlier in two ways",own_claim
we use a second-order Runge-Kutta scheme,own_claim
the midpoint method with an Euler predictor,data
we do not interpolate values stored on a grid,own_claim
evaluating φ at points near the surface,data
we compute exact distance values,own_claim
of our method and do not affect the unconditional stability,own_claim
These changes only improve the accuracy,own_claim
detailed a method for computing the distance from a point to a triangle,background_claim
Schneider and Eberly,data
2002,data
"many triangles can be pruned, especially when x is very close to the surface, by using standard bounding-box techniques and our octree data structure",background_claim
This operation is relatively expensive,background_claim
Section 6,data
Signing the distance values turns out to be somewhat difficult near sharp corners,own_claim
the triangles do not always agree on the sign,own_claim
the nearest point in the mesh lies on more than one triangle,data
on an edge or vertex of the mesh,data
provided a proof that this procedure results in accurate signing,background_claim
These situations can be resolved by computing an angle-weighted pseudonormal for each edge and vertex of the mesh and using these pseudonormals to determine the sign when the nearest point is on an edge or vertex of the mesh,own_claim
Bærentzen and Aanæs,data
2002,data
The ability to compute exact distances is one of the chief advantages of having an explicit surface representation,own_claim
Interpolation can produce substantial errors,own_claim
which are compounded over time,own_claim
Figure 3,data
this interpolation error is one of the most significant drawbacks to semi-Lagrangian methods,background_claim
interpolation produces such significant smoothing that researchers have proposed a number of methods to add detail back to the flow,background_claim
or avoid semi-Lagrangian advection altogether,background_claim
used for velocity advection,data
Fedkiw et al. 2001,data
Zhu and Bridson 2005,data
"we are able to leverage the advantages of semi-Lagrangian advection, without incurring the interpolation error that would otherwise undesireably smooth surface detail",own_claim
Our implementation makes heavy use of a structure we call the distance tree,own_claim
The distance tree is a balanced octree subdivision of the spatial domain,data
The distance tree serves three purposes,own_claim
It provides a fast spatial index for the mesh so that nearby triangles can be found quickly,own_claim
"It provides a fast, approximate signed-distance function, which is sufficient when evaluating the signed distance far from the surface",own_claim
contain triangles,own_claim
"It guides the contouring algorithm, quickly identifying cells which have vertices of different sign",own_claim
the distance is guaranteed to be exact,own_claim
the computed distance is less than C’s edge length,data
"Otherwise, the computed distance is a very good estimate but may be slightly larger than the actual distance",own_claim
we do not require an exact distance,own_claim
x is not near the surface,own_claim
C is not at the finest level of the octree,data
there are no triangles in the concentric triple of C,data
An approximation with the correct sign is sufficient,own_claim
it is also useful to build a distance tree from an existing triangle mesh,own_claim
"Most often, we wish to build a distance tree to resolve the zero set of our field function ψ",own_claim
Our octrees are always built in a top-down manner where each cell is split based on some variation of the following splitting criterion,own_claim
Split any cell whose edge length exceeds its minimum distance to the surface,data
11,data
results in a three-color octree,background_claim
11,background_claim
"where each cell of the octree has one of three types: interior, exterior, and boundary",background_claim
Samet,data
1990,data
Figure 4,data
Criterion,background_claim
builds octrees with several useful properties,background_claim
11,background_claim
Adjacent cells differ in size by no more than a factor of 2,background_claim
Criterion,background_claim
producing a smooth mesh and simplifying procedures,background_claim
neighbor finding,data
triangulation of the vertices,data
A cell’s size is proportional to its distance to the surface,background_claim
φ will be discontinuous,background_claim
φ is the signed distance to the surface at vertices,data
we extend φ into each cell by trilinear interpolation,data
cells vary in size,data
the jumps in φ decrease in size in cells near the surface,background_claim
the triangle inequality,data
the interpolated φ is nearly continuous near the surface,background_claim
there are N childless cells touching the surface,data
the entire tree contains only O(N log N ) cells,background_claim
Cells coarsen very rapidly away from the surface,background_claim
the surface is resolved accurately at minimal cost,background_claim
we are essentially trying to resolve our approximation,own_claim
"ψ n+1 (x) = φ n (x − ( t)v(x n−1/2 , t n ))",own_claim
12,own_claim
to the signed-distance function φ n+1 (x),own_claim
building a new octree at the beginning of each timestep,data
"is an instance of the contouring problem, which has been well studied in computer graphics",background_claim
Creating this explicit representation,background_claim
Our implementation is based on,own_claim
Bloomenthal’s,data
1994,data
The marching-cubes algorithm works well for our purposes,own_claim
each triangle generated by marching cubes sits strictly inside a single cell of the distance tree,data
making the distance tree an especially effective spatial index,own_claim
each vertex in our polygon mesh can be mapped to some point on some triangle in the mesh at the previous timestep,own_claim
"we use the distance tree we have already built to guide the marching cubes, avoiding the need to build a second structure to determine the topology of the new mesh",own_claim
we need not worry about patching the marching-cubes solution,own_claim
Our choice of contouring algorithm does result in some limitations,own_claim
"In addition to creating poorly shaped triangles, marching cubes is nonadaptive",own_claim
the sampling is as dense in flat regions as in regions of high curvature,data
"the nonadaptive nature of marching cubes limits the resolution we can achieve in high-curvature areas, but is necessary to ensure compatibility",own_claim
To address this lack of resolution in high-curvature areas,background_claim
"split line segments whose centers were far from the surface, yielding arbitrarily high accuracy",background_claim
Strain,data
2001,data
this splitting technique is not easily extended to three dimensions,own_claim
splitting a triangle either creates an incompatible triangulation or produces even more poorly shaped triangles,data
It is also very difficult to guarantee that we will still have a manifold when the inserted vertices are moved to the surface,own_claim
several adaptive contouring methods,background_claim
seek to use adaptive grids and regain compatibility through various crack-patching techniques,background_claim
Shu et al. 1995,data
Shekhar et al. 1996,data
Poston et al. 1998,data
Such methods could easily be used here,own_claim
we plan to explore adaptive methods in future work,own_claim
This function is quite similar to the functions used in semi-Lagrangian level-set methods,background_claim
Strain 1999b,data
Enright et al. 2005,data
this smoothing technique may be quite useful in some applications,own_claim
we did not use this method for any of the results in this article,own_claim
this limitation is not significant,own_claim
This jittering limits the reusability of our octrees,own_claim
we build new octrees every timestep,data
This problem,background_claim
has been well studied by the level-set community and a number of methods have been suggested,background_claim
redistancing,data
suggested redistancing by performing an exact evaluation at every vertex of the octree,background_claim
This method is relatively efficient,background_claim
Strain,data
1999a,data
the tree coarsens rapidly away from the surface and works well in two dimensions,data
"in three dimensions, we have found it to be prohibitively expensive and unnecessary",own_claim
our octree,own_claim
does not necessarily coarsen away from the surface,own_claim
"To address this problem, we coarsen parts of the tree which have been refined but did not generate surface",own_claim
Our redistancing method comprises three steps,own_claim
coarsen the octree,data
compute exact distances at vertices of cells which contain triangles,data
run a fast marching method over the remaining vertices,data
One of the primary advantages of our method is the ability to track surface properties,own_claim
accurately at negligible additional cost,own_claim
color,data
texture coordinates,data
simulation variables,data
semi-Lagrangian advection provides a mapping between surfaces at adjacent timesteps,own_claim
every vertex in a polygon mesh corresponds to some point on some triangle in the previous mesh,own_claim
this property can be copied to v,own_claim
vertex v in the current mesh maps to point p in the old mesh,data
some surface property was stored at p,data
we can track surface properties on the actual surface as we build the surface,own_claim
we do not incur any significant additional cost,own_claim
Previous methods,background_claim
have been limited to tracking properties in the volume near the surface and interpolating them to the surface,background_claim
Rassmussen et al.,data
2004,data
"Such methods incur significant cost, introduce substantial smoothing, and blur properties between nearby surfaces",background_claim
we are having trouble because we are resampling the surface at every timestep,own_claim
this approach may introduce unwanted aliasing,own_claim
In many applications there is no value actually stored at p,own_claim
the properties are stored at the vertices of the triangle containing p,own_claim
In these cases the problem is slightly more involved,own_claim
In many cases it is sufficient to use barycentric interpolation to compute a value at p and copy this interpolated value to v,own_claim
for some applications this interpolation can produce unwanted smoothing,own_claim
A simple alternative is to set the value at pto the value stored at the vertex nearest p,own_claim
we may be able to “clean up” the blurred signal,own_claim
we know something about the property we are tracking,data
texture coordinates could be copied instead of reference coordinates,own_claim
image textures were preferred over procedural textures,data
There are still plenty of open problems in the area of texturing liquid surfaces,own_claim
"it is difficult to deal with large discontinuities in surface properties, which occur when two surfaces merge, or a surface splits",own_claim
Creating detail where a surface stretches is also an open problem,own_claim
All of our fluid examples used a standard regular-grid Eulerian fluid simulator with the elasticity model of,own_claim
Goktekin et al.,data
2004,data
"its resolution is notably coarser than the surface tracker, which uses an octree",own_claim
our fluid simulator has a regular grid,data
The idea of using different resolutions for the fluid and surface is not new,background_claim
used different timesteps for their fluid and surface calculations,background_claim
Foster and Fedkiw,data
2001,data
increasing the spatial resolution of the surface tracking grid dramatically reduced volume loss,background_claim
Goktekin et al.,data
2004,data
using different spatial resolutions can produce artifacts,background_claim
Losasso et al.,data
2004,data
pieces of surface could appear connected when the simulator thinks they are disconnected and vice versa,data
surface features may be maintained when a more detailed fluid simulator would smooth them away,data
we found the increased surface resolution to be worth these artifacts,own_claim
"Ideally we would use a multiresolution fluid simulation, like the octree method of",own_claim
Losasso et al.,data
2004,data
We plan to incorporate a multiresolution fluid simulator as part of our future work,own_claim
"given a perfect semi-Lagrangian path tracer, the method could take arbitrarily large timesteps",own_claim
"Decoupling the timesteps of the fluid simulator and surface tracker, so that the surface tracker runs only once per frame, is an interesting area of future work",own_claim
Similar effects can be seen in real-world footage,own_claim
All of our images were rendered with the open-source renderer Pixie,own_claim
Arikan 2005,data
we generated a polygonal mesh for each frame,data
we could take advantage of standard rendering techniques,own_claim
allowing for very fast rendering times,own_claim
most of our renderings took less than 3 min/frame,data
the method can be used to generate realistic results,own_claim
A number of our examples were also rendered with a glass shader,data
easily a variety of properties may be attached to the surface,own_claim
"In practice, we believe that advected properties could be used effectively with standard shading techniques to generate a wide range of interesting effects",own_claim
Our colored and textured examples,data
Semi-Lagrangian contouring offers an elegant and effective means for surface tracking,own_claim
has a number of advantages over competing methods,own_claim
we have an explicit representation,own_claim
"In addition to enabling exact evaluation, this explicit representation also allows us to leverage 30 years of computer graphics technology which has been optimized for polygonal meshes",own_claim
"Rendering, texture mapping, and a variety of other applications are all very straightforward",own_claim
we have an implicit representation,own_claim
This implicit representation allows us to update the surface without explicitly addressing any of the difficult topological issues which plague other approaches,own_claim
semi-Lagrangian advection gives us a mapping between surfaces at adjacent timesteps,own_claim
This mapping allows us to accurately track surface properties on the actual surface at negligible complexity and cost,own_claim
our method does not have any ad hoc rules or parameters to tune,own_claim
"most importantly, we are able to produce detailed, flicker-free animations of complex fluid motions",own_claim
"the only parameters to our system are the upper and lower corners of the domain, the maximum depth of the octree",data
and some resolution tolerances,data
"Computer graphics simulations of fluid behavior are in demand in filmmaking for depicting gases, liquids, smoke, dust, fire, and other natural phenomena",background_claim
"Methods for creating these simulations vary widely, depending on the requirements for realism, controllability, rendering style, and complexity",background_claim
"This paper describes a system, which utilizes numerical simulations of the full equations of fluid dynamics, that is being used at DreamWorks Feature Animation Studios in the production of traditionally-animated films",own_claim
The system employs techniques from both the scientific and computer graphics communities in order to be both efficient and accessible to animators,own_claim
" Of the many ways of incorporating simulation into the creation of fluids animations, one end of the spectrum in a traditional animation environment is to use no simulation at all, and draw every frame of the animation",background_claim
This approach gives a wide range of flexibility and control,background_claim
is a tedious process with realistic limits on the complexity that can be achieved,background_claim
"At the other extreme, there are many advantages to numerically solving the full equations of motion for fluids",background_claim
to create an- imations of fluid behavior,background_claim
the Navier-Stokes equations,data
"With simple user set-ups, the physically accurate equations take over",background_claim
"generating lots of high quality animation, rich in complexity and guaranteed realistic motion",background_claim
"Compared to computer graphics, the equations of fluid motion and solution methods for them have a long history",background_claim
"Equations expressing conservation of mass, momentum, and energy",background_claim
have been around since the early 1800’s,background_claim
Navier-Stokes equations,data
"from 1932, is still regarded as one of the best sources for fundamental theorems, equations, and solutions in fluid mechanics",background_claim
Hydrodynamics,background_claim
11,data
"The equations of motion cannot be solved analytically, except in simplified situations",background_claim
need to be solved numerically,background_claim
John von Neumann envisioned using the computer to solve the equations of motion for weather prediction in the 1940’s,data
Numerical integration methods for systems of equations predate the modern computer as well,background_claim
"Today, the use of computers to solve the Navier-Stokes equations is widespread, with descriptions of particular models and their solutions filling the pages of journals",background_claim
Journal of Fluid Mechanics,data
Journal of the Atmospheric Sciences,data
computational fluid dynamics is a fairly mature subject,background_claim
"the emphasis so far has been on accurately simulating physical situations for scientific purposes, rather than creating images and animations as the end goal, which has different concerns and motivations",background_claim
as a means of speeding up the calculations,data
the use of artificial compressibility,data
section 3,data
the non-physical compressibility effects introduced need to be rigorously justified,own_claim
scientific work,data
the creation of imagery and animation,data
the guiding standard is how the images look,own_claim
"there are new sets of concerns about how to control and modify the simulation dynamics, and what and how to render",own_claim
the emphasis is on the look of the final images,data
"These concerns move us into the territory of computer graphics, with the highly practical production environment driving the process forward",own_claim
has modeled various aspects of fluid behavior with an emphasis on efficiency and controllability issues,background_claim
Previous work in the graphics literature,background_claim
2,data
4,data
6,data
7,data
9,data
12,data
13,data
14,data
16,data
19,data
"Some of this work makes use of existing velocity fields or allows users to create their own in a variety of ways, rather than have a simulation determine the velocity field.",background_claim
The emphasis in this paper is on the use of the full NavierStokes equations to solve for the dynamic velocity and temperature fields numerically,own_claim
"solve the shallow water equations, which reduce the Navier-Stokes equations down to solving for an evolving height field for the surface of a shallow body of liquid",background_claim
9,data
used two-dimensional timedependent vorticity equations to model the atmosphere of Jupiter,background_claim
19,data
The strongest advocacy for use of the full Navier-Stokes equations so far in the graphics literature is from,background_claim
7,data
who solve the three-dimensional equations of motion to model smoke,background_claim
there is usually a decision making process based on the imagery needed to guide this choice,background_claim
There may be no right or wrong answer as to what level of physical modeling is appropriate,background_claim
Creative control and the level of realism desired are two of the main concerns,background_claim
The decision making process is well illustrated,background_claim
19,data
where the end goal,background_claim
guided aspects from the equations being solved to their final rendering method,background_claim
creating animations of Jupiter’s atmosphere for the film 2010,data
"This paper is of that same style, describing a system built at DreamWorks to support the use of fluid dynamics simulations in the creation of special effects for the animated feature film The Prince of Egypt",own_claim
Some of the unique features of the system,own_claim
a compressible version of the equations of motion,own_claim
the use of images and animations for controlling the dynamics,own_claim
fast accurate texture mapping features,own_claim
a complete production system,own_claim
"The compressible formulation, unlike any in the graphics literature, allows for the modeling of compressible effects",own_claim
shock waves,data
provides a mechanism for speeding up flow calculations by an order of magnitude or more,own_claim
"Another unique feature of the system is the use of images and animations as input devices, which allows animators to control initial conditions, source terms, and movable internal boundaries in an easy and flexible way",own_claim
"The inclusion of texture mapping differential equations, another new concept developed here, makes it possible to precalculate particle paths on a fixed grid which can be used in a straight-forward manner at render time",own_claim
The system also provides fast turn around time,own_claim
Fourth order accuracy allows animators to use coarser grids,own_claim
saving time,own_claim
"The use of two-dimensional simulations, the compressible formulation, and coarser grids, results in fast, useful simulations",own_claim
Simulations performed on a 100 by 100 grid are detailed enough for film work and can be calculated at a rate of one frame per second,own_claim
Additional production components make the overall process efficient for the animator,own_claim
Desirable characteristics of a useful production system which incorporates fluid dynamics simulations include the following,own_claim
The equations being solved and the solution method should be capable of modeling a wide variety of flow situations,own_claim
shear flow instabilities,data
vortex motions,data
buoyant instabilities,data
Coriolis effects,data
gravity waves,data
compressible effects,data
Users should have easy access to setting up the various flow situations,own_claim
The biggest difference between simulation systems for scientific purposes and simulation systems for production purposes is the level of control required in production work,own_claim
"Ideally, animators would control many aspects of the simulation dynamics and be able to incorporate the results into the final scene in a variety of ways",own_claim
it usually translates into more iterations of the creative design cycle and a better final result,data
Speed is always a consideration in production work,own_claim
The overall process must make sense within the context of the production environment,own_claim
The system should be able to make use of other scene elements,own_claim
produce scene elements in the most convenient formats,data
should be part of an efficient work flow,own_claim
The rendering style plays an important role in the overall process,own_claim
A wide variety of rendering styles increases the expressive power of scene elements and their interpretation,own_claim
"The equation set used was derived for a meteorology application, the study of clouds",own_claim
18,data
10,data
The equation set presented,own_claim
is a simplification of that system which meets the needs discussed,own_claim
in a variety of ways discussed throughout,own_claim
section 3.2,data
section 2,data
the equations can be used to advance the solution forward in time,own_claim
Given appropriate initial conditions and boundary conditions,data
One of the most important aspects of the equation set is that there is no assumption of incompressibility,own_claim
compressibility effects can be modeled,own_claim
the equations can be solved much faster,own_claim
"there is an elliptical partial differential equation involved, corresponding to an “infinite” speed of propagation of pressure waves",own_claim
an incompressible formulation is used,data
This is usually a time consuming part of the solution method and does not scale well as grid resolution is increased,own_claim
the pressure equation is presented as is,own_claim
the lengthy derivation,data
"Some systems of equations make an assumption that the fluid has the same density everywhere, which simplifies the equation set at the expense of not modeling buoyancy effects",background_claim
The equations being used here do not make that assumption,own_claim
This concept is defined in most meteorology texts,background_claim
3,data
buoyancyeffects dominate the dynamics in most of the examples presented,own_claim
the system can also be augmented with additional equations,own_claim
things such as passive scalars which advect with the flow,data
Derivations of the equations of motion from first principles can be found in many textbooks,background_claim
17,data
15,data
11,data
3,data
A convenient way to record the flow field history is through the dynamic evolution of texture map information,background_claim
This Eulerian description is particularly useful in the rendering phase,own_claim
the texture mapping coordinate information is evenly spaced in the output image space,data
it is more desirable to keep track of displacement offsets from x and z,own_claim
implementing periodic boundary conditions,data
"the discontinuity p x = x , of x=L x and x and z p as z = you z cross , z=L periodic z",data
boundaries,data
"The solution method for solving the system of equations is the fourth order Runge-Kutta scheme, using fourth order centered finite differencing for spatial derivatives on a regular grid with equal grid spacing",background_claim
"the initial conditions, boundary conditions, and forcing functions are sufficiently smooth",data
The overall method is globally fourth order accurate in space and time,own_claim
The fourth order accuracy is not required for production purposes,own_claim
the effort in achieving this added accuracy is not significant,own_claim
the increased accuracy allows for the use of coarser grids,own_claim
"comparing Runge-Kutta fourth order with Euler’s method, four function evaluations per time step are required for Runge-Kutta compared with one for Euler",background_claim
this is almost offset by the time steps which can be 2.82 times larger,own_claim
equation 15,data
Numerical methods for fluid dynamics can be found in a variety of places,background_claim
5,data
8,data
an extensive book list and summary of available codes can be found,background_claim
http://chemengineer.miningco.com/msub74.htm,data
the actual system built,own_claim
reflects the design goals,own_claim
makes use of the model described,own_claim
takes into account additional considerations specific to the traditional animation environment and the needs of The Prince of Egypt,own_claim
section 2,data
section 3,data
"In a traditional animation studio, most artwork and animation is two dimensiona",background_claim
"the illusion of depth comes from the drawn or painted perspective, along with the camera moves and techniques available in the compositing software",background_claim
Many simulation and rendering techniques were used in the visual development stage of the film,background_claim
"Test animation resulted from three-dimensional simulations with temperature being visualized via volume rendering, two-dimensional simulations creating velocity fields used for line integral convolution of source imagery, as well as other techniques",background_claim
"By far, the biggest success was twodimensional simulations of buoyant instabilities, where the temperature field was visualized as smoke",background_claim
"Animators can build up libraries of elements produced by simulations, all of which can be easily repositioned, scaled, and even put into perspective within the compositor",own_claim
"Individual layers allow artists to make independent decisions for colors, opacities, rendering parameters, and transforms",own_claim
Two-dimensional simulations allow for good interactivity in creating elements for later use,own_claim
"and periodic output from the simulations allow for deferred rendering, using only a small fraction of the disk space required to save final images",own_claim
The texture mapping differential equations developed,own_claim
section 3.2.1,data
no rendering decisions need to be made at simulation time,data
no simulation time is required at render time,data
"This allows for a flexible system, where simulations can be run with a specific flow situation and final element in mind",own_claim
rising smoke,data
"At render time, a library of potentially useful simulations is already built up",own_claim
rendering involves little more than appropriate resampling,own_claim
section 4.4,data
the code is capable of handling more general situations,own_claim
analytically defined forcing functions,data
gravitational fields,data
diffusion coefficients,data
only a subset of the functionality is available via the user interface,own_claim
Images define the initial conditions for velocity and temperature,own_claim
Scalar variables on the interface aid the software in interpreting the images,own_claim
assigning values to the black and white limits of the images,data
This makes it easy to set up shear flows and stratified layers of density,own_claim
"animators can set other parameters such as the resolution, boundary condition types, output frequency",own_claim
can monitor simulations in the viewer described below,own_claim
Using the simulation starting interface,data
an animator can quickly restart it using modified images or parameter settings,own_claim
a simulation is evolving unsatisfactorily,data
"As the simulations are running, or afterward, animators can preview and optionally render the results to disk via the interface",own_claim
figure 6,data
This previewer is a simple mapping of the temperature values to the luminance of the black and white images,own_claim
where rendering operations are “nodes” in the graph,own_claim
The compositor is a graph-based system,own_claim
are available in the compositor,own_claim
More rendering options,own_claim
All of the parameters,own_claim
have animation curves,own_claim
the timing and threshold values,data
"It is important to do periodic extensions before resampling to avoid seams at the periodic boundaries, and to do thresholding after resampling to avoid stair-step effects for magnification near the threshold values",own_claim
Volume rendering of the thresholded temperature field was supported for three-dimensional simu-,own_claim
"lations in the visual development phase, but not in the production system",own_claim
texture mapping is supported in the compositor,own_claim
figure 2,data
section 3.2.1,data
Another rendering option supported in the compositor is the smearing of an image via line integral convolution using two-dimensional flow fields provided by the simulation,own_claim
comparison purposes,data
using the following logic,own_claim
Simulation time steps and simulation time between final frames are roughly equal,own_claim
the fluid speed will travel the distance of about one grid point per time step,own_claim
equation 15,data
a Mach number of 0.4 is used,data
the largest possible stable time step is used,data
"Unless the grid is extremely large, structures moving by one grid point corresponds to a reasonable speed for an animation",own_claim
causes it to sink,own_claim
The lettering in “SI99RAPH” is colder than the surrounding fluid,data
"Conservation of mass dictates that there be areas of return flow as the cold fluid sinks, creating vortices",own_claim
There is enough variation in the initial distribution such that the nonlinear equations result in pleasing graphic shapes and interesting dynamics,own_claim
texture mapping information can be calculated along with the simulation to provide rendering information,own_claim
section 3.2.1,data
"Particle advection through the dynamically evolving velocity field is thus precalculated, eliminating the need to calculate particle trajectories at render time",own_claim
Render time for frames,own_claim
is 3.16 seconds per frame,own_claim
figure 1,data
is 9.8 seconds per frame,own_claim
An average render time for distortions,own_claim
figure 2,data
The initial temperature distribution is a random noise pattern with an overall average temperature which is essentially constant except in a narrow layer near the bottom,own_claim
it is hotter,data
One time step calculation takes 36.3 seconds,own_claim
takes 4.7 seconds to render,own_claim
one rendered frame,own_claim
the top of figure 7,data
Using the circular rendering option and a periodic simulation domain creates a seamless texture mapping with the appearance of blood emanating from the center of the bowl,own_claim
"Everything can be defined and rendered in one pass within the compositing package, including the animating perspective transformation",own_claim
Time step calculation time is 2.7 seconds per time step,own_claim
rendering time is 1.57 seconds per frame,own_claim
This paper presents a complete production system which enables animators to access the beauty and realism embodied in the physically accurate equations of motion,own_claim
the Navier-Stokes equations,data
"With this system, animators can express themselves by controlling the simulation dynamics through a familiar user interface",own_claim
the use of images and animations,data
"Texture mapping features allow deferred rendering of flow distortions, with no need to recompute particle trajectories through a time-evolving velocity field",own_claim
A compressible formulation and two-dimensional simulations allow for quick turnaround time in the creative cycle of creating/modifying simulations and applying the results within the compositor to the final scene,own_claim
this production system emphasizes the needs of a traditional animation environment,own_claim
many of the concepts apply outside this context as well,own_claim
"All of the equations, including the texture mapping equations, extend to three dimensions",own_claim
One of the most useful ideas presented here for three-dimensional simulations is the implementation of an artificial speed of sound through the compressible formulation of the equations,own_claim
"Atmospheric researchers often use the compressible formulation because of its computational advantages over the incompressible formulation, even when using the actual speed of sound for pressure waves",own_claim
"an artificial speed of sound of an order of magnitude less than the actual one is often justified, and provides a mechanism for dramatic speed increases",own_claim
computer graphics purposes,data
Simulation of incompressible fluid involves several computation steps,background_claim
diffusion,background_claim
advection,background_claim
pressure projection,background_claim
four forms of advection encountered in fluid simulation,background_claim
velocity,background_claim
smoke density,background_claim
image,background_claim
level set advections,background_claim
This step is always needed in nonsteady flow simulation based on Navier-Stokes equation,background_claim
"we may want to advect a colored image, which may be considered as colored smoke",background_claim
the level set must be transported,background_claim
one uses a level set method,data
to simulate a free surface or a two-phase flow,data
a water surface simulation,data
Those advection steps can be computed by an upwind or a semi-Lagrangian method,background_claim
The latter is often preferred,background_claim
its stability for large time step,data
The first order semi-Lagrangian method is popular in computer animation,background_claim
its simplicity,data
the first order semiLagrangian contains a significant amount of numerical diffusion and dissipation,background_claim
it yields damped fluid motion,background_claim
In velocity advection,data
it leads to a premature dilution of smoke,background_claim
is not able to simulate pure advec- tion,background_claim
In smoke density advection,data
higher order schemes,background_claim
are desired,background_claim
WENO,data
CIP,data
the implementation complexity of these schemes may be easily avoided by adding a very simple Back and Forth Error Compensation and Correction (BFECC) to an existing first order semiLagrangian schemes,own_claim
improving its space and time accuracy to second order,own_claim
this approach reduces velocity damping and smoke density dilution,own_claim
demonstrate its benefits on the four forms of advections discussed previously,own_claim
BFECC was recently proposed in,background_claim
DL03,data
DL04,data
high order methods may not prevent volume loss much,background_claim
ELF05,data
DL03,data
the authors,background_claim
"combined BFECC with their simple redistancing technique and applied it to the Zalesak’s problem, showing significantly reduced the volume loss",background_claim
the one with smallest volume error would be the particle level set method,background_claim
the level set framework,data
EMF02,data
ELF05,data
sufficiently realistic fluid animation can be obtained,own_claim
t would be interesting to apply this to the level set advection part of the particle level set method,own_claim
for more demanding simulation,own_claim
ELF05,data
The stability problems in the earlier works,background_claim
were successfully remedied in,background_claim
Sta99,data
FM96,data
This solution is popular for the simulation of incompressible Fluids,background_claim
smoke,data
for more challenging free surface flows,background_claim
FSJ01,data
FF01,data
EMF02,data
comes with built-in dissipation,background_claim
The semi-Lagrangian velocity advection,background_claim
Sta99,data
the velocity is dissipated quickly,background_claim
the linear interpolation in the first order semiLagrangian produces large error,data
higher order interpolation can solve the problem,background_claim
it involves more neighboring grid point values and increases the complexity,background_claim
non-uniform mesh structures are used,data
FSJ01,data
vorticity is added to generate small scale fluid rolling motion,background_claim
SSK05,data
addressed this built-in dissipation by enhancing advection itself,background_claim
They adopted the CIP,background_claim
method that increases the order of accuracy in space,background_claim
A nice feature of this CIP method is that it is local,background_claim
only the grid point values of one cell are used in order to update a point value,background_claim
all components of velocity and their partial derivatives should be advected,background_claim
in this CIP method,data
CIP has higher order accuracy in space only,background_claim
It is also worth noting,background_claim
high order integration of characteristics is also necessary,background_claim
BFECC is easier to implement,background_claim
exhibits second order accuracy both in space and time,background_claim
is local during each of its operational steps,background_claim
focused on applying CIP to generate more dynamic water surface behavior,background_claim
SSK05,data
having less dissipative and diffusive advection provides significant benefits in smoke simulations as well,own_claim
Fig. 4,data
The introduction of the level set method to fluid animation in,background_claim
FF01,data
allowed realistic simulation of fluids with complex free surfaces,background_claim
the smoke keeps full brightness throughout the simulation,background_claim
BFECC is used,data
the last five images,data
proposed subsequently in,background_claim
The problem left here,background_claim
EMF02,data
turned out to be very successful in volume preservation,background_claim
The two phase fluid solver,background_claim
has been broadly studied in mathematics and fluid mechanics,background_claim
SSO94,data
OKBG00,data
HKLS04,data
It has been used in graphics applications by,background_claim
HK03,data
SSK05,data
TFK ∗ 03,data
TFK ∗ 03,data
TFK ∗ 03,data
the operator splitting steps proposed in,own_claim
Sta99,data
the standard staggered grid,own_claim
FSJ01,data
The extension to 3D is straightforward,own_claim
omitted,own_claim
This first order approximation is identical to,own_claim
SSK05,data
higher order formulations can be found in,own_claim
ABS96,data
SAB ∗ 99,data
the pressure projection ∆t ρ ∇ 2 P = ∇ · u introduced in,own_claim
Sta99,data
ρ is constant,data
a simple implementation of surface tension similar to,own_claim
SAB ∗ 99,data
φ to denote a quantity that is advected,own_claim
"This φ can be the velocity components u, v, w, smoke density, RGB color of an image or level set function φ",own_claim
"φ n+1 = L u, φ n + 1 φ n − φ  ̄ 2 where φ  ̄ = L (−u, L (u, φ n ))",own_claim
the BFECC can be written as the following three L-calling process,own_claim
"the advection step L(·, ·) is exact",data
the first two forward and backward steps should return the value exactly the same as the original one,own_claim
φ n = φ  ̄,data
this does not hold,own_claim
the error in the advection operation L,data
the error can be computed as e = − 1 2 ( φ n − φ  ̄ ),own_claim
"the first two forward and backward steps will produce error 2e, i.e., φ  ̄ = φ n + 2e",data
This method is proven to be second order accurate both in space and time,own_claim
DL03,data
DL04,data
BFECC can improve the damping in the first order semi-Lagrangian implementation of velocity advection,own_claim
which is a well known drawback of,own_claim
Sta99,data
"the scalar field φ , which can be the velocity components u,v,w, the smoke density, RGB colors of an image or the level set function φ",own_claim
this BFECC needs to be turned off near the interface,own_claim
multiphase flow,data
"reducing velocity dissipation is equally important in the entire fluid domain, not only near the interface",own_claim
turning BFECC off near the interface has little effect,own_claim
it is still turned on in most of the fluid domain,data
applying BFECC adds details in smoke motion,own_claim
Fig. 2,data
these details cannot be obtained from the vorticity confinement method,own_claim
FSJ01,data
which only adds small scale rolling motions,own_claim
BFECC creates a physically correct fluctuations in a coarser grid,own_claim
Velocity advection can also be important,own_claim
rigid bodies are involved,data
Fig. 7,data
BFECC can reduce dissipation and diffusion significantly,own_claim
Fig. 3,data
4,data
DL03,data
BFECC is linearly stable in l 2 sense,own_claim
||a|| l 2 = ∑ |a i j | 2 is bounded,data
the velocity field is constant,data
density values a i j can become negative or greater than 1.0,own_claim
this problem was not significan,own_claim
our simulation,data
the dissipation of the color is significantly reduced with BFECC,own_claim
(d),data
Advection is often used for scientific visualization,background_claim
for various forms of flow visualization,data
JEH02,data
uses semi-Lagrangian advection of dye to visualize the vector field,background_claim
Wei04,data
applied level set method to advect dye without diffusion,background_claim
level set implementation is needed,own_claim
Only one dye color is allowed,own_claim
the dye cannot be diffused at all,own_claim
"BFECC is trivial to implement and provides advection of fully colored pattern of dye, if necessary",own_claim
the dissipation/diffusion is very small,own_claim
Fig. 3,data
it can be used in flow visualization as well,own_claim
it is still interesting to show how BFECC performs in the fluid simulation,own_claim
it is trivial to implement and fast,data
BFECC still has some volume loss in fluid simulation,own_claim
redistancing is needed to keep the level set function as a signed distance function,own_claim
we use the BFECC for level set advection,data
∇φ φ τ + w · ∇φ = sgn( φ ),own_claim
SSO94,data
An alternative is the semi-Lagrangian style integration,own_claim
φ n+1 = φ n (x − w∆ τ ) + sgn( φ n )∆ τ,data
φ n (x − w∆ τ ) is the φ value of previous location,own_claim
This equation can be solved by applying first order upwinding in discretizing the term w · ∇φ,own_claim
the redistancing tends to spoil good φ values computed from the second order accurate BFECC,own_claim
these integration formulae for (6) are combined with BFECC,data
The conditions to turn off redistancing is provided in,own_claim
DL03,data
This simple redistancing is crucial in preserving volume,own_claim
DL03,data
It is also easy to implement,own_claim
it simply requires to perform redistancing at the points where at least one of the following two conditions are met,data
reducing velocity dissipation could be important in simulating fluid and rigid body interaction,own_claim
example,data
We implement the rigid fluid method,own_claim
CMT04,data
the seeping problem mentioned in,own_claim
CMT04,data
The computation time varies in situations such as the complexity of fluid motions,own_claim
has multiple pressure projections,own_claim
The cup example,own_claim
Fig. 7,data
the BFECC scheme can be used to improve the simulation of fluids,own_claim
BFECC can be added with a trivial amount of code,own_claim
"the simple first order upwinding or semi-Lagrangian steps for velocity, smoke density, image or level set advections are implemented",data
this simple extension yields significant enhancements in reducing diffusion,own_claim
"dissipation in velocity, smoke, image advection",own_claim
in preserving volume under various situations,own_claim
two-phase flows,data
rigid bodies,data
systems for physically based fluid animation have developed rapidly in recent years,background_claim
can now reliably generate production-quality results,background_claim
they still have some limitations,background_claim
Simulation domains can change substantially from step to step,background_claim
deforming boundaries,data
moving obstacles,data
evolving fluid motion,data
current systems based on fixed grids are not ideally suited to handle these situations,background_claim
a method to simulate fluids with such rapidly changing domains by generating a new tetrahedral simulation mesh at each time step,own_claim
generating the mesh,data
we use the position and shape of boundaries as well as criteria based on the visually important parts of the fluid and velocity field to construct a sizing field that dictates the desired edge length for tetrahedra throughout the domain,data
an efficient and reliable meshing algorithm adapted from,own_claim
"Alliez et al., 2005",data
to produce a mesh that is refined according to this field,own_claim
We use unstructured tetrahedral meshes,own_claim
they conform to curved and irregular boundaries better than axis-aligned grids with the same number of grid elements,background_claim
allow for precise control of refinement throughout the domain,background_claim
a generalization of the semi-Lagrangian velocity advection technique that introduces no additional smoothing,background_claim
"a mass conservation step that has been extended to allow a new, single-step solution of two-way coupling between fluid and rigid bodies",own_claim
this approach provides a flexible framework for fluid simulation,own_claim
opens the door to many features,own_claim
the combination of unstructured tetrahedral domains and dynamic remeshing creates a versatile environment for the creation of complex and visually interesting fluid animations,own_claim
The animation of fluids through physical simulation has become an important tool in the visual effects industry,background_claim
One approach,background_claim
"makes use of a spatial discretization based on regular, fixed, hexahedral grids",background_claim
has been popular in recent years,background_claim
Some examples of this approach can be found in,background_claim
"Foster and Metaxas, 1996",data
"Foster and Metaxas, 1997",data
"Stam, 1999",data
"Yngve et al., 2000",data
"Fedkiw et al., 2001",data
"Foster and Fedkiw, 2001",data
"Enright et al., 2002",data
"Carlson et al., 2002",data
"Feldman et al., 2003",data
"Goktekin et al., 2004",data
The most commonly used storage scheme for these approaches is the “staggered grid” scheme,background_claim
This method offsets storage of different quantities on the grid,background_claim
was first described by,background_claim
"Harlow and Welch, 1965",data
Efforts have been made to enhance these methods to allow for better conformance to irregular boundaries,background_claim
the free surface of liquids,data
complex obstacles,data
irregularly shaped domains,data
"Losasso et al., 2004",data
described an octree-based method that retains many of the advantages of regular grids,background_claim
this enables detailed tracking of moving boundaries,background_claim
liquid surfaces,data
"Carlson et al., 2004",data
"Guendelman et al., 2005",data
Both,background_claim
have demonstrated methods for two-way coupling of obstacles to fluid,background_claim
Unstructured tetrahedra have also been used for fluid simulation within the graphics community,background_claim
"Feldman et al., 2005a",data
"Elcott et al., 2005",data
It is a blend of ideas from these two papers,background_claim
"Feldman et al., 2005b",data
The idea of moving meshes independent of a fixed or particle-centric coordinate system is not a new one,background_claim
arbitrary Lagrangian-Eulerian (ALE) methods were designed for just this purpos,data
They have proven useful in the simulation of highly deformable elastic materials,background_claim
ALE was first described in,background_claim
"Hirt et al., 1974",data
"Donea et al., 1977",data
went on to apply ALE in a finite element setting,background_claim
An excellent survey of the development of ALE methods appears in,background_claim
"Donea et al., 2004",data
Examples within the graphics literature that feature moving meshes without remeshing include,background_claim
"Shah et al., 2004",data
"Rasmussen et al., 2004",data
Another approach to handling changing domains is to dispense with the mesh altogether,background_claim
"Terzopoulos et al., 1989",data
"Desbrun and Cani, 1996",data
"Cani and Desbrun, 1997",data
"Stora et al., 1999",data
"Müller et al., 2003",data
"Premo ze et al., 2003",data
"Müller et al., 2004",data
These meshless methods are particularly well suited to changing domains,background_claim
points can move freely without concerns about mesh quality,data
"the viability of our method hinges on fast, high-quality, reliable tetrahedral mesh generation",own_claim
we regenerate a new simulation mesh at each time step,data
a history of unstructured mesh generation is outside the scope of this paper,own_claim
provide good surveys of the field,background_claim
"Owen, 1998",data
"Teng and Wong, 2000",data
the approach described in,own_claim
"Alliez et al., 2005",data
This innovative method produces meshes which conform to domains of arbitrary topology quickly and reliably,background_claim
it allows for the local edge length of the tetrahedra to be specified arbitrarily throughout space,background_claim
allows us to easily perform adaptive mesh refinement from step to step,background_claim
The key contribution of our method is to demonstrate the freedom granted by remeshing at each simulation time step,own_claim
"the simple, efficient methods for discretizing the inviscid Euler equations on tetrahe- dral meshes described in",own_claim
"Elcott et al., 2005",data
"Feldman et al., 2005a",data
"Feldman et al., 2005b",data
details a generalization of the standard semiLagrangian velocity advection technique,background_claim
"their approach can easily be applied to transfer information between two arbitrary, topologically unrelated meshes",own_claim
is required to achieve more general evolution of the simulation domain from step to step,background_claim
conformance to boundaries,data
obstacles,data
any desired refinement,data
suits the current simulation conditions,own_claim
we need to quickly and reliably generate a new tetrahedral mesh for each time step,own_claim
methods have long existed to mesh arbitrary domains,background_claim
most are relatively slow in comparison to simulation running times,background_claim
don’t reliably terminate under realistic conditions,background_claim
"The availability of efficient, versatile meshing algorithms",background_claim
has made the generation of a new mesh at each time step practical,background_claim
"Alliez et al., 2005",data
"a new, single-step method to achieve two-way coupling between obstacle and fluid motion",own_claim
Similar schemes have been used in,background_claim
"Botta and Hempel, 1996",data
"[Elcott et al., 2005",data
"Feldman et al., 2005a",data
These methods are a generalization of the staggered grid scheme originally proposed by,background_claim
"Harlow and Welch, 1965",data
This staggered method is used to discretize the inviscid Euler equations,background_claim
∂u p f = − (u · ) u − + ∂t ρ ρ,data
subject to the mass conservation constraint for incompress-,background_claim
ible fluids,background_claim
u =0,data
Divergence and gradient operators are needed as part of the mass conservation step,own_claim
the formulation presented in,own_claim
"Losasso et al., 2004",data
"Elcott et al., 2005",data
This property of Delaunay meshes motivates our storage scheme at circumcenters,own_claim
the gradient estimate is equivalent to the gradient of a piecewise linear function that interpolates the circumcenter values,own_claim
The staggered scheme stores only the component of velocity in the face normal direction,background_claim
a full velocity vector must be found at arbitrary positions in the mesh,background_claim
the semi-Lagrangian step and to advect smoke particles for rendering,data
the two-step method developed in,own_claim
"Elcott et al., 2005",data
Velocity u t for tetrahedron t is found by solving the small linear system N t u t = z t,own_claim
this solution has the remarkable property,own_claim
a divergence-free field,data
interpolating the u t velocities also exactly interpolates the face-normal velocity components,own_claim
This interpolation is based on the method of,own_claim
"Warren et al., 2004",data
presents a way to interpolate within a general convex polytope,own_claim
Equation (3) applied to node weights within a Voronoi cell can be simplified to,own_claim
6Vol(t) w t (x) = 3 i=1 (p i − p v ) · (c t − x),own_claim
is omitted for brevity,own_claim
After some manipulation,data
A similar observation appears in,own_claim
"Ju et al., 2005",data
the velocity interpolation is quite efficient,own_claim
with it,data
velocities at nodes of tetrahedra can be first be found using Equation (4),own_claim
advecting large numbers of particles,data
quickly interpolated in a linear fasion over the tetrahedra to advect the particles,own_claim
The simple and stable semi-Lagrangian method has become the standard tool for advection of the velocity field for graphical applications,background_claim
"Stam, 1999",data
The basic idea of the method,background_claim
is that we can find a velocity that will advect to a point by tracing back from that point and interpolating the old velocity field,background_claim
This method does not rely on velocities being stored at any particular place,background_claim
the velocity can be interpolated throughout space,background_claim
meshes which change arbitrarily at each time step as in,own_claim
"Feldman et al., 2005b",data
This extension does not incur any additional smoothing,background_claim
using semi-Lagrangian advection with static meshes,background_claim
we have to trace back and interpolate using this previous mesh,own_claim
Figure 2,data
the velocities from the previous step are stored on a different mesh,data
"The domain boundaries, obstacles, and smoke are free to move and change from step to step of the simulation",background_claim
our domain conforms well to boundaries,own_claim
is refined in visually important areas,own_claim
regenerating the mesh at each time,data
the variational tetrahedral meshing algorithm presented in,own_claim
"Alliez et al., 2005",data
This method allows for generation of tetrahedral meshes,own_claim
conform well to an arbitrary input surface mesh,own_claim
have no restrictions on topology,own_claim
allow nested voids,data
allow for sizing of tetrahedra throughout the domain based on arbitrary criteria,own_claim
Our implementation differs from the original algorithm in a couple of details,own_claim
for any point x in the simulation domain,data
refinement of the mesh is controlled by a sizing function μ(x),own_claim
in the original method,data
returns the desired local edge length of the tetrahedra,own_claim
k 0 is an offset value that controls the minimum value of the sizing field,own_claim
the minimum local edge length of tetrahedra,own_claim
d(x) is the distance to the closest obstacle or boundary which demands refinement,own_claim
These three factors are the same as those used for octree refinement in,own_claim
"Losasso et al., 2004",data
The overall goal of the sizing field is to focus computational effort in the most visually important parts of the scene,own_claim
near closed boundaries,data
the velocity field varies most,own_claim
smoke is visible,own_claim
Figure 3,data
Figure 4,data
This meshing method is iterative,data
the mesh from the previous simulation time step can be used as an initial guess,own_claim
the sizing field does not change too much,own_claim
there is,background_claim
strong temporal coherence between steps of the simulation,background_claim
the nodes from the previous step are often a good initialization,own_claim
the initial node placement is corrected to match the sizing field of the current step,own_claim
Before the algorithm proceeds,data
this tends to slightly decrease the average quality of tetrahedra in the mesh,own_claim
it often leads to substantial improvements in the quality of the worst elements of the mesh,own_claim
are of more concern for numerical simulation,own_claim
remeshing takes time,own_claim
it is important to consider the impact it has on overall simulation performance,own_claim
The time spent generating meshes for each simulation step varies,own_claim
generally accounts for less than a quarter of the overall simulation time,own_claim
can be complex and visually appealing,background_claim
The motion of fluid and rigid bodies,background_claim
The interaction occurs as a consequence of the conditions,background_claim
The velocities in the normal direction are the same at the interface of the fluid and the rigid body surface,background_claim
The fluid velocity is divergence free,background_claim
the rigid body velocity is rigid,background_claim
The linear and angular momentum of the combined system is conserved,background_claim
"Carlson et al., 2004",data
these conditions are enforced sequentially,background_claim
this produces results that look very good,background_claim
for many cases,data
artifacts can be created,background_claim
under some situations,data
enforcing one of the conditions in general will break a previously enforced on,data
Examples of such artifacts might be fluid leaking through solid boundaries or poor performance in piston-like situations,background_claim
Our implementation differs from,own_claim
"Carlson et al., 2004",data
in a couple of ways,own_claim
the mass conservation step solves for pressures that accelerate the velocity field to be divergence free,background_claim
the mass conservation step treats faces to behave as fluid or explicitly prescribes their velocities,background_claim
"Fedkiw et al., 2001",data
For a more complete discussion of fluid/prescribed-velocity mass conservation see,own_claim
The rigid body accelerations can be computed by creating a matrix R,own_claim
R can be formed by a series of matrix multiplications,own_claim
 b 1  R = ,own_claim
 M 0 −1 I −1 0 A 1 b T 1 ··· A k b T k b k,own_claim
accelerations generated by this matrix behave rigidly,own_claim
construction,data
Computing pressure accelerations of both the fluid and fluid-rigid faces can be expressed as a matrix A,own_claim
A row of A,own_claim
contains the same entries as the standard gradient matrix multiplied by −1/ρ,own_claim
mass conservation including two way coupling proceeds much in the same way as in the all-fluid case,own_claim
With A built,data
with A replacing the role of the discrete gradient matrix,data
"the intermediate velocity field, z ∗ , is accelerated to the end-of-step velocity, z, by z = z ∗ + ∆tAp",own_claim
"vector of pressures, p",data
z ∗ is found by applying all terms of Equation (1) except the pressure term,own_claim
the fluid faces,data
the fluid-rigid faces,data
z ∗ is found using a rigid body simulator without pressure forces applied,own_claim
This linear system can be solved efficiently using PCG,own_claim
the the matrix DA,own_claim
is also a positive-definite symmetric matrix,own_claim
we can also interact with constrained rigid bodies,own_claim
This simply requires finding an R matrix,own_claim
that correctly computes face accelerations,own_claim
due to pressure,data
one could easily alter R such that the body was constrained to just rotate about the origin by replacing b i in Equation (6) with b i = (r i × n i ) T and using only the I −1 block for the center matrix,own_claim
This idea could be extended further to include even articulated bodies,own_claim
Refinement of the simulation mesh near the paddle ensures good conformance to its curved surfaces,own_claim
The blue valves on either side of the bulb prevent backflow,own_claim
Figure 5,data
The motion of these valves is not scripted,own_claim
their motion is caused by two-way interaction with the fluid,data
they are modeled as rigid bodies constrained to rotate about an axis,data
quality of the mesh elements does not suffer at this level of refinement,own_claim
the proportion of time spent meshing increases to 39.3%,own_claim
The motion of the smoke at the higher resolution is more lively,own_claim
exhibits more fine-scale detail,own_claim
A vorticity enhancement method,own_claim
"[Fedkiw et al., 2001] and [Selle et al., 2005]",data
those in,data
could be used to further enhance the fluid motion,own_claim
we do not find such enhancement necessary,data
a system for performing fluid animation using unstructured tetrahedral domains that can change arbitrarily at each time step,own_claim
our current implementation models completely fluid-filled domains,own_claim
it would be well-suited for use with surface tracking techniques for liquid simulation,own_claim
Fluid motion is naturally captivating,background_claim
"it has piqued the imagination and curiosity of artists, mathematicians and scientists",background_claim
The fascination with fluid motion is exemplified by its long history in the computer graphics literature,background_claim
Early work focused on obtaining motion,background_claim
is visually interesting and convincing,background_claim
More recent physically based techniques rely primarily on numerical approximation of the Navier-Stokes equations,background_claim
Computer simulation of a model necessitates a finite representation of its spatial quantities,background_claim
"In the past, many approaches for choosing a finite representation have been proposed",background_claim
the use of Eulerian grids,data
La-,data
grangian fluid mass particles,data
vorticity primitives,data
model reduction,data
Grid-based techniques are the most common approach,background_claim
they suffer from high computational complexity,background_claim
the general requirement at each simulation step to solve a system of equations whose size is proportional to the number of grid elements in the domain,data
removes the dependence on the simulation domain,background_claim
Lagrangian techniques,background_claim
mass particles,data
the computation of pressure and other fluid quantities are expensive,background_claim
approximations lead to noticeable violations of incompressibility,background_claim
Vorticity primitives,background_claim
are very effective at simulating smoke in inviscid media,background_claim
particles,data
filaments,data
have difficulties modelling diffusion,background_claim
handling boundary conditions,background_claim
this technique is very efficient at run-time,background_claim
it suffers from significant costs for precomputation and storage,background_claim
is dependent on the performance of an existing simulator or other mechanism to obtain ground-truth data,background_claim
an algorithm for the interactive simulation of fluid motion that avoids many of the shortcomings of existing techniques,own_claim
The resulting velocity basis fields are divergence free and respect boundary conditions,data
these constraints are enforced automatically without the need for additional computation,own_claim
Our algorithm can be formulated as Galerkin projection of the vorticity form of the Navier-Stokes equations onto Laplacian eigenfunctions defined over the simulation domain,own_claim
the correspondence allows precise control of a fluid’s turbulent spectrum through adjustment of basis coefficients,own_claim
Coupled with orthogonality,data
the viscosity can be simulated accurately through a simple exponential decay of basis coefficients,own_claim
With Laplacian eigenfunctions,data
allows arbitrary user-controlled or automatic adjustment of the spectrum to achieve a desired effect,own_claim
no mesh is required to store the fluid’s velocity,own_claim
In these cases,data
a velocity can be precisely evaluated at any spatial coordinate without the need for interpolation,own_claim
"closed form expressions allow symbolic evaluation of the precomputed advection operator, making this process fast and exact",own_claim
our method is not limited to these domains,own_claim
we present a formulation on structured and irregular meshes using discrete exterior calculus,data
our method supports the interaction of immersed moving obstacles and buoyancy through projection of forces to the velocity basis fields,own_claim
Our method allows considerable flexibility in choosing the basis dimensionality,own_claim
Even simulations with few degrees of freedom provide visually convincing result,own_claim
the artifacts common to very low-dimensional representations,background_claim
Eulerian,data
Lagrangian simulations,data
our method provides a principled means of dimensionality reduction of the Navier-Stokes fluid equations,own_claim
our method is not data-driven,own_claim
avoids the need for an existing fluid simulator or pre-existing data,own_claim
our algorithm and choice of basis provides an exciting avenue,own_claim
will be an important complement to the methods in the literature,own_claim
Incompressible fluid dynamics is a vast subject,background_claim
Euler’s equations describing the dynamics of a rotating rigid body date from the 18th century,background_claim
Poincaré [1901],data
"showed that by considering various group manifolds as the configuration space, Euler’s equation could apply generally to a class of physical systems",background_claim
In 1901,data
in the case of a rotating rigid body the group is the rotation group SO(3),data
Arnold [1966],data
showed that an ideal incompressible fluid is described similarly as geodesic motion on SDiff,background_claim
The notion of structure coefficients to describe the interaction of Lie algebra basis elements of these groups is directly related to the precomputed coefficient matrices used in our method,background_claim
Many of these concepts are summarized by,background_claim
Marsden and Ratiu [1999],data
Representing vorticity using Laplacian eigenfunctions dates back at least to,background_claim
Yudovich [1963],data
who used this method to prove existence and uniqueness theorems for the two dimensional NavierStokes equations,background_claim
Agrachev et al. [2005],data
used vorticity Laplacian eigenfunctions to prove theorems in the mathematical control literature,background_claim
Silberman presented a fluid simulation algorithm for the earth’s atmosphere in a basis of spherical harmonics,background_claim
Silberman 1954,data
This method has come to be known in the CFD literature as the interaction coefficient method,background_claim
the advection operator was evaluated symbolically,background_claim
it is not widely used,background_claim
Outside of atmospheric sciences,data
poor scaling for large basis dimensionality,data
Such performance considerations were the motivation for the development of spectral methods as pioneered by Orszag,background_claim
Orszag 1969,data
They are often used to study homogeneous turbulence,background_claim
Rogallo et al. 1981,data
Orszag and Patterson 1972,data
Fourier series or Chebyshev polynomials are commonly employed,background_claim
spectral methods are limited to bases admitting a fast transform,background_claim
Our method is most analogous to the interaction coefficient method of,background_claim
Silberman 1954,data
admit a fast transform,background_claim
Laplacian eigenfunctions do not,background_claim
do not share the inherent theoretical performance of a spectral method,background_claim
On arbitrary domains,data
Laplacian eigenfunctions have many other benefits,background_claim
Section 3,data
theoretical performance scaling is less critical,background_claim
for the applications we consider,data
visually detailed simulations are attainable at low cost,own_claim
Divergence free finite element methods,background_claim
employ bases of discrete divergence free velocity fields to solve fluid equations,background_claim
in a space that satisfies mass continuity a priori,data
Gustafson and Hartman 1983,data
Our method is similar in this respect,own_claim
Laplacian eigenfunctions do not require a discrete mesh,background_claim
for some simple domains,data
no basis employed in DFFEM exhibits all of the advantageous proper- ties of Laplacian eigenfunctions,own_claim
orthogonality,data
stationarity with respect to Navier-Stokes equations,data
our knowledge,data
global support,data
correspondence with spatial scales of vorticity,data
Fluid simulation methods in the computer graphics literature belong to roughly four categories,background_claim
grid-based,background_claim
mass particles,background_claim
vortex elements,background_claim
model reduction,background_claim
Grid-based techniques for simulating the 3-D Navier-Stokes equations were introduced by,background_claim
Foster and Metaxas [1996],data
were unstable,background_claim
the use of explicit integrators,data
Stam developed an unconditionally stable integration scheme using semi-Lagrangian advection and an implicit integrator,background_claim
Stam 1999,data
the result produces artificial viscosity which dampens vortices prematurely,background_claim
requires an iterative linear solver to solve for a pressure field to enforce incompressibility,background_claim
Works aimed at mitigating or minimizing artificial diffusion include vorticity confinement,background_claim
and high order advection schemes,background_claim
Fedkiw et al. 2001,data
Selle et al. 2008,data
"To improve the performance of the iterative pressure solver, use of adaptive grids",background_claim
hierarchical coarse grids for projection,background_claim
have been proposed,background_claim
Losasso et al. 2004,data
Lentine et al. 2010,data
used the 2-D Fourier transform of a velocity field to perform fast pressure projection,background_claim
Stam [2002],data
this method is limited to simple domains and boundary conditions,background_claim
still dissipates energy,background_claim
Bridson presented a simple means to generate procedural divergence free flows through the curl of a vector potential stream function,background_claim
Bridson et al. 2007,data
this work did not address physical dynamics,background_claim
Elcott presented a method that preserves circulation on simplicial meshes,background_claim
does not preserve energy,background_claim
Elcott et al. 2007,data
Mullen et al. developed a fluid integrator capable of perfect energy preservation or desired viscosity independent of grid-resolution,background_claim
Mullen et al. 2009,data
this method is complex,background_claim
requires a solution to a non-linear system at each timestep,background_claim
are effective in eliminating numerical diffusion,background_claim
Hybrid particle-grid methods,background_claim
FLIP,data
require a grid to enforce incompressibility,background_claim
Zhu and Bridson 2005,data
Common to all these stable grid-based techniques previously mentioned is the need to solve a system of equations at each time integration step,background_claim
the performance of our method is independent of the domain or grid resolution,background_claim
have closed form expressions,background_claim
the global basis functions,background_claim
a 2-D rectangle,data
3-D rectangular cavity,data
typical domains,data
supports general domains through a formulation on discrete meshes,own_claim
Our method allows controllable viscosity,own_claim
Smoothed particle hydrodynamics,background_claim
used subsequently to simulate water,background_claim
Adams et al. 2007,data
Müller et al. 2003,data
was introduced to graphics by,background_claim
Desbrun and Gascuel [1996],data
Enforcing incompressibility in SPH methods is computationally expensive,background_claim
impractical,background_claim
a large number of particles,data
Our method satisfies incompressibility automatically,own_claim
it operates directly in a space of divergence free fields,data
Vortex methods use Lagrangian elements,background_claim
advect these elements through the fluid’s velocity,background_claim
particles,data
filaments,data
Gamito et al. 1995,data
Park and Kim 2005,data
Angelidis et al. 2006,data
Weißmann and Pinkall 2010,data
A formulation using vorticity guarantees incompressibility,background_claim
the reconstruction of the velocity field is computationally expensive,background_claim
"choosing Laplacian eigenfunctions as a basis allows the velocity field to be recovered trivially, removing the need for complicated and expensive reconstruction",own_claim
Gupta and Narasimhan represented fluid velocity in a basis of Legendre polynomials allowing analytic evaluation of differential operators,background_claim
Gupta and Narasimhan 2007,data
the velocity basis fields are not strictly divergence free,background_claim
Model reduction has been applied to fluid simulation by,background_claim
Treuille et al. [2006],data
The resulting run-time performance is fast,background_claim
the precomputation time and memory requirements are large,background_claim
it is unclear how well this technique generalizes to arbitrary flows,background_claim
behavior is limited to the examples present in training,data
Our method can be used directly as a means of dimensionality reduction through choice of the basis dimension N,own_claim
it differs from current approaches in many respects,own_claim
Adding basis functions increases the coverage in a well defined way,background_claim
a data driven basis can only approximate flows that are in some sense “close” to those observed in training,background_claim
there is no guarantee that additional training data will substantially increase the span of the resulting PCA basis,background_claim
Our basis has a natural correspondence with spatial scales of vorticity that is lacking in,own_claim
Treuille et al. 2006,data
the vector Laplacian reduces to ∆ = −curl 2,own_claim
acting on divergence free fields,data
our basis fields are completely characterized by ∆Φ k = λ k Φ k,own_claim
div (Φ k ) = 0 Φ k · n = 0 at ∂D,own_claim
fields Φ k to be divergence free and satisfy a free slip condition at the boundary,data
We require the set of basis,data
The eigenfunctions of the Laplacian operator ∆ are domain dependent,own_claim
functions satisfying Eq.,background_claim
"1 have closed form expressions, which are available for example in the physics literature",background_claim
many simple domains,data
Cheng 1999,data
Laplacian eigenfunctions satisfying Eq.,data
have the closed form expressions 1 Φ k = k 1 2 + k 2 2 (k 2 sin(k 1 x) cos(k 2 y)a x,data
−k,data
1 cos(k 1 x) sin(k 2 y)a y ),data
The vector fields Φ k are Laplacian eigenfunctions with eigenvalues λ k = −(k 1 2 + k 2 2 ),own_claim
Figure 4,data
closed form expressions also exist for many other domains,background_claim
a 3-D rectangular prism,data
a disc,data
the surface of a sphere,data
a planar region with a wrap around boundary condition,data
de Witt 2010,data
the vorticity basis fields associated with Eq. 2 are just the curl of the velocity basis functions and given by,own_claim
φ k = sin(k 1 x) sin(k 2 y)a z,own_claim
the φ k are also Laplacian eigenfunctions of the domain,own_claim
the vorticity basis functions have only a normal component at the boundary,own_claim
u and ω are orthogonal,data
satisfy ∆φ k = λ k φ k,own_claim
φ k × n = 0 at ∂D,own_claim
the example expressions of Eqs. 2 and 3 satisfy all the properties listed below,own_claim
reconstructing a velocity field from a vorticity field is computationally expensive,background_claim
Angelidis et al. 2006,data
Weißmann and Pinkall 2010,data
The key benefit of a representation in,own_claim
Laplacian eigenfunctions is that the inverse operator curl −1 applied to vorticity basis functions yields a simple expression,own_claim
Φ k = curl −1 φ k = curl −1 1 ∆φ k λ k = 1 curl −1 −curl 2 φ k λ k,own_claim
1 = − curl φ k,own_claim
the expansion of the vorticity ω in the φ i basis shares the same coefficients as the expansion of the velocity u in the Φ k basis,own_claim
N N N ω = curl u = curl ω i Φ i = ω i curl Φ i = ω i φ i,own_claim
a single coefficient vector w = [ω 1 ω 2 . . . ω N ] uniquely identifies both the fluid’s velocity u and its vorticity ω,data
This is notable,own_claim
Either field can be easily reconstructed from the basis coefficients ω i,own_claim
The total energy of a signal,own_claim
is the sum of the squares of its coefficients by Parseval’s identity,own_claim
The fluid’s kinetic energy can thus be calculated as Spatial scales of vorticity,own_claim
Basis coefficients can be interpreted as a discrete spatial spectrum of the fluid with higher “frequencies” corresponding to smaller scales of vorticity,own_claim
This notion has been previously applied by Stam and Fiume using a Fourier basis to generate procedural stochastic turbulence,background_claim
Stam and Fiume 1993,data
A decomposition into a spectrum of vorticity is important for at least two reasons,own_claim
computations require our basis to be finite,own_claim
is well defined,own_claim
the error,own_claim
In choosing to truncate the spectrum at some finite N,data
It could also be used to initialize or arbitrarily change a fluid’s turbulent spectrum,own_claim
This allows the velocity to be evaluated at any spatial coordinate without the need for a voxelized grid or interpolation,own_claim
"For some simple domains, the basis fields have closed form expressions",data
A grid may still be used for visualization,own_claim
to track density,data
subsample the velocity from the closed form expressions to accelerate particle advection,data
this grid is independent of the simulation,own_claim
its resolution may be changed without changing the performance or behavior of the underling simulation,own_claim
the benefits of closed form expressions are limited to simple geometries,own_claim
3D rectangular cavity,data
a 2-D rectangle,data
A fluid’s velocity field will change continuously over time,background_claim
physical laws,data
The vorticity formulation of the Navier-Stokes equation is,own_claim
"ω  ̇ = Adv(u, ω) + ν∆ω + curl (f )",own_claim
the viscous term becomes ν i ∆ω k φ k = ν k λ k ω k φ k,own_claim
φ k are Laplacian eigenfunctions,data
the magnitude of each basis coefficient decays with a time constant equal to the eigenvalu,own_claim
which is physically correct,own_claim
small vortices dissipate faster than large vortices,data
External forces can be incorporated by projecting curl (f ) on the vorticity basis,own_claim
"f i can be equivalently obtained by directly projecting f to the velocity basis basis f i = f , Φ i",own_claim
Eq.,data
5,data
which often involves less computation,background_claim
ω  ̇ k = f k,own_claim
The contribution to ω  ̇ k is,own_claim
the time derivative of each basis coefficient is,own_claim
ω  ̇ k = w T C k w + νλ k ω k + f k,own_claim
Any standard numerical integration scheme can be applied to integrate Eq. 8 forward in time,own_claim
speed and energy stability are important requirements,own_claim
computer graphics applications,data
Our basis is orthogonal,own_claim
Renormalizing to preserve the kinetic energy is a technique available in any fluid simulation method,background_claim
it can lead to visual artifacts,data
it is often undesirable,own_claim
employing grid based velocity fields,data
our basis fields are globally supported,own_claim
energy is never dissipated locally through a pressure projection step,own_claim
Stam 1999,data
Computation is dominated by the evaluation of matrix vector products,own_claim
{C k } are dense,own_claim
z is O(N 3 ),own_claim
a computational complexity similar to that of,own_claim
Treuille et al. 2006,data
Eq. 8 is a symbolic expression for the first time derivative of vorticity,own_claim
These can be useful for alternate integration schemes,own_claim
it may not be a concern for graphics applications,own_claim
stability has already been enforced,data
Greater accuracy could also be easily achieved through high order explicit schemes using a small timestep,own_claim
A final integration scheme that is theoretically interesting,own_claim
This method is more expensive than explicit integration with renormalization,own_claim
it offers very little gain in accuracy for small timesteps,own_claim
it is of interest,own_claim
it preserves the geometric viewpoint of a fluid as a high dimensional rotation group,data
provides a more rigorous way of enforcing energy preservation,data
all the preceding expressions are equivalent,own_claim
our context,data
any can be used to evaluate the advection of pairs of basis fields,own_claim
the evaluation can be performed symbolically,own_claim
is,own_claim
exact,own_claim
For domains admitting closed form expressions for Laplacian eigenfunctions,data
it can be approximated numerically on a mesh,own_claim
For discrete domains,data
Section 8,data
The basis coefficients of this projection are the structure coefficients,own_claim
"satisfy Adv(Φ i , φ j ) = C k [i, j]φ k",own_claim
The Laplacian eigenfunction basis is closed under the Jacobi-Lie bracket,own_claim
our basis must necessarily be finite dimensional,own_claim
For simulation,data
This is unavoidable,own_claim
the nonlinear advection operator necessitates products of functions,data
the multiplication of two N bandlimited functions is,background_claim
bandlimited by 2N,background_claim
the Fourier basis,data
this truncation is physically motivated,own_claim
the vortices will eventually reach a small enough scale and dissipate quickly through viscosity,data
"The self advection Adv(Φ k , φ k ) of a vorticity basis field φ k by its velocity Φ k is identically zero",own_claim
u  ̇ = 0,own_claim
each velocity basis field is a stationary flow,own_claim
This is analogous to the stable rotation of a rigid body about a principal axis,own_claim
Arnold 1966,data
the evaluation of the structure coefficients in closed form for a 2-D rectangle,own_claim
Appendix A,data
Our goal is to satisfy the internal boundary conditions of immersed objects at all times,own_claim
This requirement can be simply stated,own_claim
the fluid velocity at an object’s boundary should be equal to the normal component of the boundary’s velocity,own_claim
The result is a divergence free field,own_claim
best satisfies the desired boundary conditions,own_claim
Note that this method is not perfect,own_claim
the projected forces only approximate the desired forces to the extent that the basis fields can resolve them,data
it is efficient enough to perform interactively without requiring precomputation,own_claim
Treuille et al. [2006],data
also correct the normal velocity component through projection to a divergence free field,own_claim
our technique is similar in this respect,own_claim
an additional set of fields,own_claim
are employed,own_claim
Discrete exterior calculus,own_claim
provides a principled means of describing operators and quantities on simplicial meshes,own_claim
Desbrun et al. 2005,data
we use a discrete formulation on tetrahedral meshes analogous to,own_claim
Mullen et al. 2009,data
Elcott et al. 2007,data
The velocity basis fields satisfy a free slip boundary condition,own_claim
are divergence free,own_claim
constraints imposed implicitly through the Laplacian operator matrix,data
∆ admits only divergence free solutions in its eigendecomposition,own_claim
above,data
the fields produced by the eigensolver satisfy the conditions of Eq. 1,own_claim
in a discrete setting,data
This evaluation is similar to that employed in,own_claim
Mullen et al. 2009,data
these costs are reasonable for typical operating parameters,own_claim
can become large,own_claim
for simulations employing very fine meshes and large basis dimensionality,data
Closed form domains are limited in their boundaries,own_claim
"have notable advantages in terms of runtimes, precomputation and memory requirements",own_claim
the cost of projecting the forces on to the basis is noted,own_claim
For examples including external forces,data
buoyancy,data
moving obstacles,data
This cost is proportional to the mesh resolution and the number of basis fields,own_claim
This is proportional to the mesh resolution and the dimension of the basis,own_claim
there are two alternatives for velocity reconstruction,own_claim
On closed form domains,data
Closed form evaluation is proportional to the number of basis functions and the number of advected quantities,own_claim
Each alternative has its strengths,own_claim
evaluating closed form expressions is accurate and fast and does not have additional memory requirements,own_claim
a few particles need to be advected,data
A robust tetrahedral mesh implementation would have similar performance characteristics and alleviate the boundary “stair case” artifacts,own_claim
these high frequency modes interact and decay physically,own_claim
Our method is most applicable to gaseous phenomena and situations when the domain is entirely filled by fluid,own_claim
it is not readily adaptable to typical liquid simulations that require a constantly changing fluid domain with a free surface,own_claim
interesting dynamics can be captured in a reasonably sized basis dimension,own_claim
simulated interactively,own_claim
the runtime is,background_claim
O(N 3 ),background_claim
For irregular domains,data
the cost of reconstructing the velocity field and projecting external forces grows linearly with the basis dimension and mesh resolution,own_claim
For discrete meshes,data
Many of these issues are not present for domains with closed form expressions,own_claim
the shape of the boundary is limited,own_claim
this case,data
the velocity basis fields must still be cached,own_claim
the cost of closed form evaluations become prohibitive,data
projecting many forces,data
advecting many particles,data
our method has potential to be exploited for the expressive control of fluid phenomena,own_claim
any smooth curve through coefficient space,own_claim
may be perceived as “fluid-like”,own_claim
it represents a continuously changing volume preserving flow that respects all boundary conditions,data
a unique mechanism for spectral energy control,own_claim
orthogonality of the basis,data
its correspondence with vorticity of varying scales,data
This could be used to implement timevarying filters to amplify or attenuate parts of the spectrum,own_claim
achieving crescendos of turbulence,data
gradual calming,data
Space-time control for fluids has been attempted previously in,own_claim
Treuille et al. 2003,data
McNamara et al. 2004,data
Fattal and Lischinski 2004,data
Many of these methods can be expensive,own_claim
"the optimization scales sharply with the size of the grid, making them impractical for interesting domains",data
A low dimensional basis offers a good setting to implement control policies,own_claim
that would be intractable in higher dimensions,own_claim
Barbi c et al. 2009,data
Our method’s availability of closed form expressions for time derivatives could also prove useful in optimization algorithms,own_claim
Our method is fast enough to be interactive,own_claim
is very memory efficient,own_claim
well formulated on rectangular domains,own_claim
the available closed form expressions,data
This makes it particularly attractive for use in image based settings,own_claim
painting applications that simulate fluid phenomena,data
the video,data
Additional potential uses in this vein include texture synthesis and non-photorealistic rendering,own_claim
Boundaries of moving obstacles are handled only approximately,own_claim
could benefit from alternate methods,own_claim
a fast and stable integration scheme,own_claim
additional time integrators could be explored,own_claim
particularly symmetric integrators to allow time reversibility,own_claim
Mullen et al. 2009,data
Time reversibility could prove useful in fluid control applications,own_claim
Twigg and James [2008],data
We have evaluated the advection operator symbolically for closed form expressions on rectangular 2-D and 3-D domains,own_claim
The same could be done for additional geometries,own_claim
a 2-D disk,data
a spherical surface,data
which could prove useful for tilings of fluid simulation domains,own_claim
Wicke et al. 2009,data
Divergence free fields have many potential uses,own_claim
can be used to quantify volume preserving deformations,own_claim
simulating natural phenomena,data
This has uses in image analysis and shape deformation,own_claim
the unique properties of our method could be exploited in these fields,own_claim
the elegant formulation on rectangular domains could make it useful for medical image registration,data
it an accurate and tractable model for optimization methods,own_claim
the availability of closed form expressions,data
flexibility in choosing the basis dimension,data
This could be useful for the inverse modelling of real fluid flows for the purpose of parameter estimation,own_claim
to estimate viscosity from sampled velocity measurements,data
The orthogonality of the basis functions and their correspondence to a spectrum of vorticity scales enables energy control at varying turbulent scales,own_claim
Flexibility in choosing basis dimensionality and the ability to integrate directly in a space of basis coefficients permits computational efficiency,own_claim
The existence of closed form solutions for simple domains allows symbolic evaluation of the advection operator,own_claim
the ability to sparsely evaluate velocities on demand,own_claim
many exciting avenues remain to be explored,own_claim
there is potential for our method to be exploited in other research areas,own_claim
medical imaging,data
inverse flow modelling,data
Previous approaches have made great strides towards this goal,background_claim
they often exhibit visual artifacts,background_claim
a lack of computational robustness,background_claim
an unacceptably hefty computational expense,background_claim
"introduced an octree for spatial adaptivity, but it suffers from spurious flows at T-junctions",background_claim
The groundbreaking work of,background_claim
Losasso et al. [2004],data
repair these spatial artifacts at the expense of solving a significantly larger system of equations,background_claim
Finite volume methods,background_claim
Batty et al. 2010,data
many existing methods still are not truly spatially adaptive in the sense,background_claim
their computational complexity is still tied to a uniform grid or spatial parameter,data
a combination of techniques that successfully makes adaptive fluid simulation practical at large scales,own_claim
a new method for computing a surface from a distribution of particles with variable radii,own_claim
this method out-performs previous methods in cases of extreme spatial adaptivity,own_claim
Our fluid simulator works well with spatially adaptive tetrahedral meshes,own_claim
it is another question to decide exactly how these adaptive meshes should be generated,own_claim
Some examples are a surface curvature-based metric that adds detail only where needed on the fluid surface,background_claim
the contributions of our work are,own_claim
a novel tetrahedral discretization of the pressure projection step that is efficient to solve and robust to poor-quality elements,own_claim
an accurate treatment of second-order boundary conditions within the tetrahedral mesh,own_claim
a new technique for extracting a smooth surface from particles with varying radii,own_claim
the inclusion of a flexible sizing function to focus computational resources on important areas of the flow with minimal overhead,own_claim
Our work is based on the Fluid-Implicit Particle (FLIP) method introduced to the computer graphics community,own_claim
Zhu and Bridson [2005],data
The algorithm still follows the general ideas of the Stable Fluid solver,background_claim
can be readily combined with second-order treatment of free surface boundary conditions,background_claim
Enright et al. 2003,data
Stam 1999,data
"FLIP derives its success from the fact that it uses particles to compute an accurate, nondiffusive transport of flow quantities, in combination with a gridbased solve to accurately enforce constraints for mass conservation",background_claim
"The FLIP algorithm is heavily used in the special effects industry, and recent advances have introduced accurate coupling with obstacles",background_claim
highly viscous materials,background_claim
two-phase flows,background_claim
Batty et al. 2007,data
Batty and Bridson 2008,data
Boyd and Bridson 2012,data
Cartesian grids are very popular for fluid simulations,background_claim
The Marker-And-Cell (MAC) approach,background_claim
results in discretizations with good properties in terms of stability and accuracy,background_claim
Harlow and Welch 1965,data
An inherent difficulty is that simulations on regular grids become prohibitively expensive for large resolutions,background_claim
many works have proposed methods to focus the computations on regions that are of particular interest,background_claim
One example are octrees,background_claim
Losasso et al. [2004; 2005],data
This approach,background_claim
suffers from numerical diffusion and an inconsistent discretization near the tree’s T-junctions,background_claim
Targeting a similar direction as our work,background_claim
have demonstrated methods to adapt the resolution of FLIP particles in a simulation,background_claim
Hong et al.,data
2009,data
Ando et al.,data
2012,data
Both methods,background_claim
focus on static computational grids and are restricted to smaller differences in particle size,background_claim
Cartesian grids are widely used,background_claim
they are limited in their flexibility to adapt to a simulation setup,background_claim
tetrahedral grids are popular for methods targeting adaptivity,background_claim
they allow for very flexible computational grids,background_claim
One example is the work of Klingner et al.,background_claim
Klingner et al. 2006,data
which demonstrated the use of a Stable Fluids based solver for tetrahedral grids conforming to object boundaries,background_claim
Another example is the non-linear fluid solver,background_claim
Mullen et al,data
2009,data
which leads to an energy conserving solve,background_claim
"Unlike these methods, we make use of a non-conforming grid with Body-Centered Cubic (BCC) lattices",own_claim
These meshes were also used by,background_claim
Chentanez et al. [2007] and by Batty et al. [2010],data
for liquid simulations,background_claim
These methods are primarily suitable for uniformly sampled particles,background_claim
Another direction of research performs fluid simulations based on arbitrary elements,own_claim
Clausen et al. [2013],data
Misztal et al. [2010],data
have proposed a method to simulate liquids with a computational grid conforming to a triangulation of a liquid surface,background_claim
Both methods lead to an increased computational cost in comparison to the more efficient tetrahedral BCC meshes,background_claim
proposed an alternative method for hybrid Lagrangian-Eulerian solvers which combines a Voronoi-based pressure solver and particles,background_claim
Sin et al. [2009],data
used this discretization in combination with embedded second-order boundary conditions,background_claim
Brochu et al. [2010],data
Adaptive simulations have also been explored in the context of SPH simulations without Eulerian grids,background_claim
Adams et al. 2007,data
shares similarities with our approach,background_claim
it is able to simulate a wider range of particle radii,background_claim
it proposes a surface reconstruction method in the adaptive setting,background_claim
a robust and efficient method for adaptive SPH simulations was introduced by,background_claim
Solenthaler et al. [2011],data
this work primarily targets the coupling of two different particle resolutions,background_claim
Several other methods have been proposed to reconstruct smooth surfaces around collections of particles without orientation,background_claim
One approach that is commonly used is to compute a signed distance function with averaged particle radii and centroids,background_claim
Zhu and Bridson 2005,data
"A variant of this approach, taking into account information about the spatial variance of the particle’s neighborhood was proposed by",background_claim
Yu et al. [2010],data
Both methods primarily target particles with constant radius,background_claim
a level-set based method was proposed that computes a constrained optimization with bihar- monic smoothing,background_claim
Bhattacharya et al. 2011,data
such an optimization would be complicated to apply in our unstructured setting,background_claim
our approach for surface creation computes the union of convex hulls around triplets of particles,own_claim
The aim of our method is to solve the Navier-Stokes equations,own_claim
We solve these equations using operator splitting,own_claim
a level set φ(x) = 0 defines the position of the liquid-gas interface,own_claim
Stam 1999,data
Spatial Discretization An inherent strength of the FLIP algorithm is its hybrid nature,background_claim
This projection of the velocities into a divergence-free state can be formulated as the Poisson problem,background_claim
"∆t 2 p = · u ∗ , ρ",background_claim
we want to compute the minimal change in kinetic energy necessary to reach a divergence-free state of the flow similar to,own_claim
Batty et al. 2007,data
p = arg min 1 ||u ∗ − ∆t p|| 2 ρdV p Ω 2 ρ,own_claim
This has the advantage of giving us a natural way to handle cells of different size,own_claim
this setup results in a constant pressure gradient per tetrahedron,own_claim
by assuming a piece-wise constant velocity and a linear change of pressure within a cell,data
Based on this representation,data
"m p = arg min 1 || u ˆ i ∗ − ∆t [ ] p|| 2 ρV i , p ˆ 2 ρ i",own_claim
Our discretization compared to previous approaches: the MAC grid stores velocity components normal to faces and pressure values at the center,own_claim
"a square n × n matrix, which is symmetric and positive definite",own_claim
to compute a solution,own_claim
we can use standard tools,own_claim
Given appropriate boundary conditions,data
a commonly used pre-conditioned conjugate gradient solver,data
Bridson 2008,data
we use the one suggested in,own_claim
"our pressure solve is a linear system that has n degrees of freedom, n being the number of nodes in the tetrahedral mesh",own_claim
In contrast to previous work,own_claim
n is in practice smaller than the number of tetrahedra m,own_claim
For our BCC mesh,data
A direct implication of this smaller linear system is that it is faster to solve,own_claim
"A second, less obvious implication of the smaller linear system is that it effectively prevents artifacts known as locking",own_claim
These artifacts are commonly observed in finite element methods for problems in elasticity,own_claim
Different methods have been proposed to circumvent these problems,background_claim
using linear elements for pressure instead of piece-wise constant ones,data
Irving et al. 2007,data
Other works explicitly smooth the pressure field to reduce locking problems,background_claim
Misztal et al. 2010,data
"locking can be observed if the pressure basis can represent more, and higher-frequency, functions than the basis for the velocity",background_claim
choosing a more restrictive basis for pressure,own_claim
explicitly removing high-frequency information from the pressure,own_claim
reduces the chance of locking,own_claim
Irving et al. 2007,data
Misztal et al. 2010,data
Our method,own_claim
has more degrees of freedom for representing velocity fields than pressure fields,own_claim
we cannot prove that a local configuration over-constraining the velocities will never occur,own_claim
the larger number of degrees of freedom for our velocities effectively prevents locking artifacts,own_claim
Boundary Conditions Second-order boundary conditions are a central component for accurate and visually appealing simulations with non-conforming grids,own_claim
Achieving second-order accuracy for obstacle boundary conditions is straightforward with our discretization,own_claim
Batty et al. 2007,data
Dirichlet boundary condition p = 0 is satisfied at the interface position,own_claim
this means computing a pressure value for nodes outside of the liquid so that a linear interpolation along an edge of a cell gives zero at the correct position,background_claim
Enright et al. 2005,data
Lew and Buscaglia 2008,data
For a Cartesian MAC grid,data
For the free surface,data
the ghost pressure value p G is given by p G = p L φ G /φ L,own_claim
this approach does not yield the desired result,own_claim
In our case,data
The reason is that our velocity samples are not in line with the direct connections of the pressure samples,own_claim
they are not locally orthogonal to each other,own_claim
we have to ensure the boundary conditions result in the correct pressure value at the cell center,own_claim
p G can be rewritten in terms of a barycentric interpolation of the three values in the liquid,own_claim
the θ n are a set of barycentric coordinate coefficients,own_claim
θ 1 +θ 2 +θ 3 = 1,data
the values w n are determined by those of the θ n coefficients,own_claim
θ n could take any values as long as they add up to one,own_claim
The computation of the ghost fluid ρ values is independent of the right-hand side b,own_claim
the first vertex is the one outside of the liquid volume,background_claim
the resulting matrix is symmetric positivedefinite and can be easily inverted by the commonly used preconditioned conjugate gradient methods,own_claim
this case,data
"positive off-diagonal terms of the matrix can result in values of θ outside of the range [0, 1], leading to an indefinite linear system",own_claim
it is common practice to clamp small values in the denominator of Eq,own_claim
to prevent ill-conditioned pressure matrices,own_claim
reverting to first-order accuracy when second-order accuracy is intractable,own_claim
we smoothly transition to first order accuracy,own_claim
we detect such a case,data
we compute a coefficient k with,own_claim
"φ − 1 φ − 1 φ − 1 k = min λ 2 , λ 3 , λ 4 , w 2 α w 3 β w 4 γ",own_claim
we detect such a case,data
for k = 1,data
this yields full second-order accuracy,own_claim
for badly shaped tetrahedra,data
the resulting k = 0 means that we revert to the standard rounding strategy of a first order accurate method,own_claim
The graded BCC tetrahedra,own_claim
can be of lower quality and can require the use of Eq,own_claim
(13),own_claim
the interpolation would ideally use the dual mesh consisting of the Voronoi cells of each node,own_claim
Brochu et al. 2010,data
"we first interpolate the centered velocities to the nodes, similar to",own_claim
Chentanez et al. 2007,data
these four smaller tetrahedra do not have to be stored explicitly,own_claim
Manipulating FLIP particles The spacing between FLIP particles may drift over time,own_claim
high-frequency errors may contribute to a bumpy surface,own_claim
we apply the position correction algorithm of,own_claim
Ando et al. [2012],data
FLIP particles that partake in splashes and sprays can pose a significant burden on computational resources,own_claim
in an adaptive framework like ours,data
This inefficiency stems from the fact that water droplets undergo extremely simple ballistic motion,own_claim
This decision allows us to avoid aggressively refining the tetrahedral mesh in locations where the physical motion is uninteresting,own_claim
Only a small percentage of the particles are simulated in this way,own_claim
1.7% on average,data
Figure 6,data
Our method achieves adaptivity by varying the mesh resolution over the computational domain,own_claim
we use the octree-based grading method which was proposed by,own_claim
and later adopted in several adaptive simulation environments,own_claim
Labelle and Shewchuk [2007],data
Chentanez et al. 2007,data
Wojtan and Turk 2008,data
Batty et al. 2010,data
Batty et al. 2010,data
Similar to,own_claim
"we generate a new tetrahedral mesh every ten time steps, instead of rebuilding the mesh on every consecutive step",own_claim
the tetrahedral mesh is only temporarily used for the pressure solver,own_claim
no information is transferred from one time step to the next by storing it on the grid,own_claim
we modify the strategy of,own_claim
Ando et al. [2012],data
For this,data
to work within our framework,own_claim
a particle is too small,data
we merge it with its nearest neighboring particle,own_claim
a given particle is bigger than the desired size,data
the particle is split in two,own_claim
The new particle’s position is equal to the weighted average of all nearby midpoints,own_claim
x new = ω i m i / ω i,own_claim
Numerical viscosity in fluid simulations is tightly coupled to the spatial resolution resolving the flow,own_claim
We compensate for spatiallyvarying numerical viscosity caused by particles of various sizes in our simulation by adjusting the PIC/FLIP blending parameter in our FLIP simulation,own_claim
Bridson 2008,data
the new quantity Q i is computed as a weighted blend between the two,own_claim
"Given quantities Q i,PIC and Q i,FLIP computed at particle i from PIC and FLIP simulations",data
this strategy adequately eliminates any artifacts due to spatially varying numerical viscosity,own_claim
Our simulator is versatile enough to cope with any of these sizing functions,own_claim
the sizing function is defined as a combination of five different metrics,own_claim
"S(x) = max ( d(x), V (x, min(κ liquid (x), κ solid (x), e(x)) )",own_claim
In all of the examples in this paper,data
This has the effect that motion near the surface has higher priority than motions far inside the bulk volume of the liquid,own_claim
"V (x, y) is a view-dependent function that returns the value y",own_claim
x is within the camera’s visible region,data
returns the maximum particle radius r max,data
it beneficial to invest computational resources into keeping interesting motion of the flow field alive,own_claim
the strain tensor of the flow field reliably indicates detailed motions,own_claim
Pfaff et al. 2010,data
Inspired by turbulence models,data
we aim to implicitly represent the fluid surface by computing its signed distance function,own_claim
Given our set of FLIP particles with variable radii,data
Several useful methods for computing a surface from a collection of particles have been proposed in the past,background_claim
Zhu and Bridson 2005,data
Adams et al. 2007,data
Yu and Turk 2010,data
they tend to produce undesirably bumpy surfaces,background_claim
considering particles of highly variable radii,data
Figure 4,data
The main idea is to approximate the fluid surface with the union of the convex hulls of each triplet of nearby particles close to the surface,own_claim
a larger l tends to fill in small concavities,own_claim
A small l shows more surface details,own_claim
the minimum signed distance from these shapes to a point in space defines the outer part of our level set function,own_claim
We efficiently compute the distance to these planes by analytically solving the polynomial system,own_claim
the plane is the right distance away from each particle with the normal facing away from them,own_claim
the first three equations,data
the plane equation is normalized to a distance function,own_claim
the final equation,data
"These four equations represent the intersection of three hyperplanes and a hypercylinder in 4D {a, b, c, d} space",own_claim
we can easily compute the signed distance between this convex hull and a point in space,own_claim
By computing the conic and spherical convex hull facets,data
in a similar fashion,data
Figure 5,data
The algorithm as described works perfectly for computing the level set outside of our particle surface,own_claim
it may lead to small gaps inside,own_claim
The final surface creation is trivially parallelized,own_claim
Most previous algorithms perform poorly in this comparison,own_claim
they were not designed for particles with varying radii,data
additional user-defined sizing functions could be computed as well,own_claim
At this point,data
it becomes necessary to evaluate the sizing function,own_claim
we use an SPH-like kernel function,own_claim
For mapping the particle velocities onto the grid,data
which is weighted by the particle volume,own_claim
"max(v i (4r i 2 /d 2 − 1), 0)",data
The particle velocity update of line 12 uses barycentric interpolations,own_claim
Section 3,data
the grid-based velocity extrapolation of line 10 uses the nodal velocities,own_claim
Section 3,data
A time step is completed by performing the pressure projection and advecting the particles in the resulting divergence-free velocity field,own_claim
One comparison,own_claim
that is particularly interesting,own_claim
is the one comparing our method to an FVM based simulation,own_claim
Using a graded BCC mesh leads to problems with the latter,own_claim
the position of the circumcenter lies exactly on a face for the graded tetrahedrons,data
this can result in two pressure samples from adjacent tetrahedra being placed at the exact same position,own_claim
In the graded region,data
To alleviate this problem,background_claim
Batty et al. 2010,data
propose to slightly offset the pressure samples from the faces,background_claim
The influence of the different components of our sizing function on the evolution of a simulation is difficult to depict with static images,own_claim
we refer to the accompanying video for a comparison,own_claim
a full sampling of the initial configuration with a regular grid would have required approximately 6 million particles,own_claim
the run-time of our method has a strong linear relationship to the number of particles,own_claim
the visual complexity of the simulation,own_claim
The per-frame time is low at the beginning and end of the simulation,own_claim
strongly peaks during the complex splash in its middle,own_claim
the computational resources are focused on the visible region of a rotating camera,own_claim
the liquid splashes around a U-shaped corridor,data
Our solver efficiently resolves the complex motion near the camera,own_claim
effectively reducing the computational cost for parts that are not visible,own_claim
geometrically complex regions near the obstacle are simulated with higher accuracy.,own_claim
The κ solid component of our sizing function,data
we can resolve the detailed flow of liquid through the holes in the obstacle,own_claim
In this way,data
the large open liquid surface with complex splashes in a localized region would require huge amounts of computational resources,own_claim
Without adaptivity,data
Our method can simulate this setup very efficiently,own_claim
in a fully coupled manner with an effective high resolution,own_claim
The large open region is successfully coarsened by our sizing function,own_claim
resulting in subtle wave motions around the splashes,own_claim
the whole simulation with 8 different octree levels and a maximum resolution of up to 1024 cells took on average only 4.6 minutes per frame to compute,own_claim
In this case,data
our adaptive version initially used 1.7 million particles,own_claim
a regular sampling at the finest resolution would have required roughly 400 million,own_claim
We found our discretization,own_claim
beneficial in a number of ways,own_claim
there are far fewer vertices than tetrahedra in a given mesh,own_claim
the pressure solve has fewer variables,own_claim
is faster to solve,own_claim
our discretization prevents the locking ar- tifacts which are common in other methods,own_claim
the highest frequencies of the velocity field may be unconstrained,own_claim
the lower number of pressure constraints,data
we are allowed to aggressively remesh the tetrahedral background grid without worrying about excessive damping or re-sampling artifacts,own_claim
information is carried from one time step to the next in a Lagrangian manner,data
"FLIP simulations have a well-known problem of creating noisy particle distributions,",background_claim
there are typically several times more particles than velocity variables on the background grid,background_claim
our new surface creation routine is essential for maintaining detailed simulations in the presence of accurate freesurface boundary conditions,own_claim
One major benefit of our method is that it can easily create perfectly flat surfaces from a mixture of differently-sized particles,own_claim
our animations are able to smoothly settle down as time progresses,own_claim
These flat surfaces represent the equilibrium state of a fluid simulation,data
which artificially prevent a simulation from settling down,own_claim
second-order boundary conditions will introduce additional forces in the locations of surface bumps,data
our surface creation routine is indispensable,own_claim
it is quite expensive to compute,own_claim
Our simulations perform quite well for large differences in resolutions,own_claim
we have only been able to push them to a certain point in our current implementation,own_claim
using too sharp of a grading in our sizing function can place coarse and fine simulation elements too close together,own_claim
result in artifacts.,own_claim
these particles can get stuck in mid air,own_claim
small particles land in very coarse cells after violent splashes,data
this can also lead to an overly strong weight for such particles during the velocity mapping,own_claim
resulting in momentum artifacts,own_claim
Our adaptive numerical viscosity,own_claim
can also exhibit dangerously small damping values for very fine resolutions,own_claim
we clamped the blending coefficient to a minimum value of 0.1,own_claim
Eq. (14),data
Figure 1,data
we introduced a novel collection of sizing functions for adaptively selecting details from a fluid simulation,own_claim
these values were not meticulously tuned,own_claim
are certainly not optimal,own_claim
we presented specific parameters for the sake of reproducibility,own_claim
The task of choosing an ideal sizing function is still an open problem,own_claim
This could lead to more gradual changes in resolution,own_claim
We have presented a novel framework for highly adaptive liquid simulation,own_claim
"a novel, robust discretization works together with accurate embedded boundary conditions and a flexible sizing function to allow for aggressive adaptivity and high computational performance",own_claim
"we can efficiently compute tough simulation setups, such as large surfaces with very localized details",own_claim
We have additionally presented a novel surface creation method that yields smooth surfaces in the presence of strongly varying particle radii,own_claim
In this way,data
which turned out to be an important building block for our framework,own_claim
it is,own_claim
the fastest way to generate high-quality meshes,own_claim
We chose a BCC mesh generation,own_claim
mesh generation is still a bottleneck for our simulation,own_claim
despite its efficiency,own_claim
This is partly due to the fact that it is a mostly serial operation that is difficult to parallelize,own_claim
our choice of piece-wise constant basis functions for velocity indicates that our discretization could lead to difficulties,own_claim
it is used for diffusion or viscosity solves,data
Interactive physically based simulation is a rapidly growing research area with an increasing number of applications,background_claim
in games and computational surgery,data
deformable objects play an important role,background_claim
In these simulation environments,data
a variety of models have been proposed ranging from efficient mass-spring approaches to methods based on the physically more accurate Finite Element Method,background_claim
For the simulation of deformable solids,data
Some of these methods allow the simulation of elastically and plastically deformable solids at interactive speed,background_claim
there has been an increased interest in efficient methods for the realistic simulation of fluids.,background_claim
These approaches can be employed to represent blood or other liquids,background_claim
they play an essential role in applications such as surgery simulation,background_claim
only a few interactive methods for the simulation of fluids with free surfaces have been proposed,background_claim
a new problem has been introduced,background_claim
With the ability to simulate both,background_claim
deformable solids,data
fluids,data
needs to be computationally efficient,background_claim
An interaction model,background_claim
suitable for the use in interactive environments,data
the generated interaction forces must not induce any instabilities to the dynamic simulation,background_claim
works with any type of deformation technique as long as the object surface is represented by a polygonal mesh and the fluid by Lagrangian particles,own_claim
the general interaction model,own_claim
The majority of publications in the area of physically based animation focuses on physical systems of one single type,background_claim
Deformable objects are interesting to study in their own right,background_claim
"on the other hand, boundary conditions are often considered a necessary",background_claim
not a central,background_claim
issue,background_claim
In fluid simulation,data
They are typically derived from simple geometric primitives,background_claim
Our method connects these two areas of research,own_claim
a large number of mesh based methods for the physically based simulation of deformable objects have been proposed,background_claim
the pioneering paper of Terzopoulos  [ 1 ],data
Early techniques were mostly based on mass-spring systems,background_claim
which are still popular for cloth simulation,background_claim
2,data
3,data
More recent methods discretize continuous elasticity equations via the Boundary Element Method,background_claim
4,data
the Finite Element Method,background_claim
5,data
6,data
7,data
Since T. Reeves,background_claim
introduced particle systems as a technique for modeling fuzzy objects twenty years ago,background_claim
"a variety of special purpose, partice based fluid simulation techniques have been developed in the field of computer graphics",background_claim
8,data
Desbrun and Cani,background_claim
where among the first to use Smoothed Particle Hydrodynamics,background_claim
to derive interaction forces for particle systems,background_claim
9,data
10,data
They added space-adaptivity in,background_claim
11,data
Stora et al.,background_claim
used a similar particle based model to animate lava flows,background_claim
12,data
13,data
Müller et al. derived inter particle forces from SPH and the Navier Stokes equation to simulate water with free surfaces at interactive rates,background_claim
Premoze et al.,background_claim
introduced the Moving-Particle SemiImplicit,background_claim
method to computer graphics for the simulation of fluids,background_claim
it is closely related to SPH,background_claim
14,data
it allows the simulation of incompressible fluids,background_claim
As a mesh-free method,data
boundary conditions are not treated explicitly,background_claim
In all these papers,data
The fluids typically interact with solid walls or the ground,background_claim
Genevaux et al,background_claim
address the interaction problem explicitly,background_claim
15,data
They propose a method to simulate the interaction between solids represented by mass-spring networks,background_claim
an Eulerian fluid grid by applying spring forces to the mass-less marker particles in the fluid and the nodes of the mass-spring network,background_claim
solids are typically represented by coarse meshes,background_claim
in interactive simulations,data
the nodes of a mass-spring network are not very well suited,background_claim
for the application of interaction forces,data
uses special boundary or ghost particles on fixed borders to model interactions,background_claim
Monaghan,background_claim
one of the founders of the SPH formalism,background_claim
16,data
The idea of ghost particles was picked up in several following projects,background_claim
The key contribution of our paper is to place these ghost particles onto boundary triangles of deformable objects,own_claim
to derive their locations and weights according to Gauss integration,own_claim
17,data
which allows to model fluid-solid interactions stably at interactive rates,own_claim
can mathematically be described as a continuum,own_claim
Materials,own_claim
which are homogeneous at the macroscopic level,own_claim
18,data
quantities,own_claim
are all mathematically expressed by continuous functions over space and time,own_claim
the density ρ,data
viscosity μ,data
deformation u,data
velocity v,data
namely the mod- eling of the interaction of these structures,background_claim
A physical model relates these quantities to each other via partial differential equations,own_claim
The mechanical behavior of an elastic solid can be described by the following equation,own_claim
ρ ∂t ∂ 2 2 u = ∇ · σ s (u) + f,own_claim
which expresses Newton’s equation of motion,own_claim
namely that the change of momentum on the left hand side is equal to the internal elastic forces due to the stresses σ s plus the externally applied body forces f,own_claim
The stresses σ s are functions of the displacements u,own_claim
The equation is in Lagrangian form,own_claim
the displacement vectors u follow the material points,data
mechanical properties of incompressible Newtonian fluids can be described by the following two equations in Eulerian form,own_claim
ρ ∂v + v · ∇v = ∇ · σ f (v) + f ∂t,own_claim
∇ · v = 0,own_claim
where fluid quantities are observed in a fixed coordinate frame,own_claim
Equation (2) again states that the change of momentum equals the internal forces derived from the stresses σ f plus the externally applied body forces f,own_claim
The stress tensor σ f = 2μ (v) − pI is composed of the viscosity stress and the pressure stress,own_claim
The viscosity stress is dependent on the viscosity μ and the strain rate tensor,own_claim
the pressure stress only depends on the scalar pressure p,own_claim
the velocity field is divergence free,own_claim
For an incompressible fluid,data
Eq. (3),data
the Eulerian description makes the additional convection term v · ∇v necessary,own_claim
Comparison of the right hand side of the two equations of motion (1) and (2),data
Materials such as fluids or solids are bounded by spatial limits,own_claim
The behavior of materials at these limits is defined by boundary conditions,own_claim
The boundary conditions relate the quantities of the two adjacent materials to each other at the interface,own_claim
the geometrical domain of the interface Γ is defined as a surface between the volumetric solid continuum and the volumetric fluid continuum,own_claim
Fig. 2(a),data
In the case of fluid-solid interaction,data
the solid is considered to be impermeable,data
no fluid element is allowed to cross the boundary,own_claim
"( ∂ u − v) · n = 0 at the boundary Γ, ∂t",data
n is the normal on Γ,own_claim
Fig. 2(b),data
the components of the velocities of the fluid and the deformable object perpendicular to Γ are equal.,own_claim
The no-slip condition models friction between the fluid and the solid,own_claim
Fig. 2(c),data
It holds for most fluids-solid surfaces,own_claim
it states that the velocity components tangential to the fluid surface have to be equal,own_claim
( ∂ u − v) × n = 0 at the boundary Γ,own_claim
∂t ∂ u = v at the boundary,own_claim
both independent boundary conditions (4) and (5) hold,data
both materials have the same velocity at the boundary,data
Newton’s Third Law demands the continuity of stresses σ s and σ f throughout the boundary,own_claim
Fig. 2(d),data
the traction forces of the solid g f must be opposite to the traction forces of the fluid g s on the boundary Γ,own_claim
g s = σ s n = σ f (−n) = −g f,own_claim
The continuous equations and boundary conditions,own_claim
need to be discretized in space and time via a numerical method before they can be used in a computer simulation,own_claim
equation (1) for elastic objects can be solved numerically,own_claim
For possible solutions using the Finite Element Method,own_claim
19,data
6,data
7,data
All we require for our interaction method to work is,own_claim
that the solid object is represented by a mesh,own_claim
"that the displacements, velocities and forces are carried by the nodes of the mesh",own_claim
Most of the methods used in computer graphics to simulate deformable objects meet these constraints including massspring systems,own_claim
the Finite Volume Method,data
the Boundary Element Method,data
"For the simulation of fluids, two main numerical methods have been used in the field of physically based animation so far",background_claim
namely Eulerian grid-based approaches,background_claim
Lagrangian methods based on particles,background_claim
Sec. 2,data
20,data
21,data
22,data
Lagrangian methods,background_claim
allow fluids with free surfaces to move freely in space,background_claim
fluid computations are restricted to a spatially fixed and bounded grid,background_claim
in the Eulerian case,data
the fluid is represented by a set of particles,own_claim
"positions, velocities and internal forces are carried by the particles",own_claim
Interaction modeling,own_claim
reduces to the problem of simulating the interaction between particles and triangulated surfaces,own_claim
interaction potentials of two objects always depend on the distance between them,background_claim
While the Euclidean distance between two points is uniquely defined,background_claim
In physics,data
the distance between a point and a triangle or a point and a triangulated surface needs to be defined,background_claim
concavities as well as close disconnected meshes generate discontinuous first derivatives of the distance field,own_claim
Those discontinuities lead to discontinuous derivatives in forces,own_claim
the forces depend on the distance field,data
A force field with discontinuous first derivatives,own_claim
yields artifacts,own_claim
cooking of particles in concave regions,data
reduced stability of the simulation,data
The source of the discontinuity in the first derivatives is the minimum operator in Eqn. (8),own_claim
One way to remove the problem is to replace the minimum by a weighted sum,own_claim
the resulting field is distorted near triangle boundaries,own_claim
This effect can be removed by normalization,own_claim
normalization just distributes the distortions to adjacent regions of triangle interfaces,own_claim
Fig. 3(c),data
Another difficulty introduced by the weighted field method is the choice of the support radius h with respect to the size of the features of the boundary T,own_claim
small features are smoothed out,own_claim
small supports reduce the interaction range of T,own_claim
For large supports,data
The problems mentioned in the previous section are well known in the field of implicit surface modeling introduced by Blinn,background_claim
23,data
"An elegant way to generate a bulge-free surface around a skeleton S, is to define a scalar function F S as the convolution",own_claim
F S (p) = W (p − x)dx,own_claim
The implicit surface is defined by selecting an iso-surface of F S,own_claim
The problem with the weighted sum approach arises,own_claim
multiple triangles meet,data
all triangles contribute as a whole to the sum and generate bulges,own_claim
In this case,data
the convolution integral sums up infinitesimal parts of the skeleton each properly weighted,own_claim
Fig. 4,data
the interaction of p with the surface T is modeled as the interaction of p with all the infinitesimal points in T,own_claim
the convolution integral is used,data
the integral in Eqn. (11) yields complex computations,own_claim
For skeletal elements other than points,data
Approaches to approximate this integral were proposed by Bloomenthal,background_claim
24,data
Sherstyuk,background_claim
25,data
Bloomenthal uses radial Gauss kernels which can be separated with respect to different dimensions,background_claim
The separation allows post evaluation of the convolution in 3D space,background_claim
Sherstyuk discovered a special kernel which can be analytically convoluted over a triangle domain,background_claim
Neither method is suitable for computing physical interactions,own_claim
we are not free in the choice of the kernel,data
The potential function is given by physical laws,own_claim
Our idea to solve the convolution integral is to use Gauss quadrature rules,own_claim
17,data
"These sampling points can be interpreted as boundary particles, which are placed and weighted according to the chosen Gauss quadrature rule",own_claim
The weighted summation of their potentials approximates the convolution of the potential over the domain of the boundary triangle in an optimal way,own_claim
the seven point rule yields good approximations of the convolution integral,own_claim
triangles that are large in comparison to the interaction range of the surface would induce a poor sampling of the boundary field,own_claim
we subdivide the boundary triangle until a sufficient sampling rate is provided,own_claim
This threshold is chosen relative to the maximal interaction radius of the fluid particles and can be regulated by the user,own_claim
The boundary particles are generated by subdividing the triangle domain and by application of the Gauss quadrature rule to the resulting triangles,own_claim
Fig. 5(b),data
This has to be done at every time step,own_claim
triangles on the boundary are moved and deformed,data
an efficient scheme is needed,own_claim
they are the same for all subdivision triangles,own_claim
These vectors are then added to the blue nodes to generate the complete set of boundary particles,own_claim
the velocities of boundary particles are interpolated from the velocities of the triangle nodes,own_claim
The no-penetration condition,own_claim
prevents fluid particles from penetrating the solid object,own_claim
Sec. 3.2,data
Monaghan,own_claim
uses a Lennard-Jones-like force to generate repulsive forces which approximate the no-penetration condition,own_claim
16,data
a Lennard-Jones-like force that models both repulsion and adhesion to the contact surface,own_claim
The traction τ ra is dependent on the distance of the surface element from the particle p and has unit force per area,own_claim
It is designed to be zero for r = r 0 which is the preferred distance of fluid particles from the interface,own_claim
the traction is finite (τ ra (0) = k),own_claim
traction and first derivative vanish,own_claim
are important for robust real time simulations,own_claim
for r = 0,data
for r = h,data
The no-slip condition,own_claim
can be approximated by including the boundary particles into the viscosity evaluation of the SPH particles,own_claim
Eq. (5),data
16,data
We use the normalized kernel W visc proposed in,own_claim
for viscosity computations,own_claim
13,data
the velocities of the boundary particles have to be interpolated from the velocity of mesh nodes,own_claim
Sec. 4.3,data
"The traction τ visc depends on the velocity v b of the boundary particle, the v p of the fluid particle and the distance r between them",own_claim
The kernel W visc is designed such that its Laplacian ∇ 2 W visc takes the linear form above,own_claim
satisfies the normalization criterion on the kernel itself,own_claim
The normalization warrants second order interpolation convergence,own_claim
The numerical approximation of the convolution integral over the triangle surface defines the final form of the viscosity force,own_claim
f visc (p) = A i w ij τ visc (|p − x ij |),own_claim
proper reaction forces need to be applied to the deformable solid as well,own_claim
Newton’s Third Law,data
The force contributions of boundary particles have to be distributed among the boundary triangle vertices,own_claim
they can be picked up by the simulator of the deformable object,own_claim
Bridson et al.  [ 26 ],data
[ 26,data
solve a similar problem in the context of cloth simulation,own_claim
an impulse is applied to the colliding vertex,own_claim
a distribution scheme is used to compute the corresponding reaction impulses for the three vertices of the triangle,own_claim
26,data
this distribution scheme provides continuity across triangle boundaries,own_claim
introduces appropriate torques for off-center interactions,own_claim
the scheme is not completely error free,own_claim
Force magnitudes can get amplified,own_claim
this error did not cause any artifacts or stability problems in our simulations,own_claim
Processing the five phases one after the other would have a negative impact on storage requirements,own_claim
Neighbor references and boundary particles for all triangles would have to be stored at the same time,own_claim
only data relevant for the current triangle has to be stored at a time,own_claim
the computations of steps three to five are grouped around single triangles,data
Fig. 6,data
"The output of step 3 is a list,",own_claim
To speed up the search for these particles we use a regular grid with spatial hashing,own_claim
27,data
There is a trade-off between computation time for the neighbor search and the quality of the neighbor list,own_claim
their increased time complexity was not compensated by the reduced cost of interaction computations,own_claim
boundary particles are only generated for those triangles that have fluid particle neighbors,own_claim
The boundary particles for a triangle t are kept only temporarily for the interaction computation,own_claim
positions and velocities are interpolated from the triangle nodes for each boundary particle,own_claim
In this step,data
Deformable boxes float freely on the water surface,own_claim
Fig. 7(b),data
"This scene demonstrates the interplay of various physical phenomena provided by the fluid simulator, the solid simulator and the interaction model",own_claim
An important application of our method is the simulation of bleeding during virtual operations,own_claim
Our simulation of a blood vessel is a first step into this direction,own_claim
the vessel is torn open,own_claim
the elastic stresses caused by blood pressure exceed the material threshold,data
The free surface of the particle system is rendered using the Marching Cubes algorithm,own_claim
The animation of the mesh and the particles are possible in real time at 60 ms per time step,own_claim
surface reconstruction took about half a second per frame,own_claim
On today’s hardware only a limited number of fluid particles can be simulated in real-time,own_claim
which yields a relatively coarse fluid surface,own_claim
The image shows subsequent time slices of an interactive animation,own_claim
Yellow colored particles are fast,own_claim
red ones are slow,own_claim
Pulsation waves and viscosity at the vessel boundary can be observed,own_claim
We have presented a new method for the simulation of interactions of deformable solids with fluids,own_claim
"Our interaction model simulates repulsion, adhesion and friction near the fluid-solid interface",own_claim
The smoothness of the force fields is important for the stability of the simulation,own_claim
The core idea to get smooth interaction fields is to place boundary particles onto the surface triangles,own_claim
Gauss quadrature rules,data
This idea might be useful in other graphic domains as well,own_claim
Character skinning is another application where bulges or knees are known problems in regions where several close bones meet,own_claim
We demonstrated the usability of our method in an interactive simulation environment with several scenes,own_claim
A difficulty in connection with the interactive simulation of fluids is the extraction and rendering of a plausible fluid surface in real time,own_claim
ongoing work focusses on fast algorithms for surface reconstruction,own_claim
Tracking the free surface of a liquid is an important and challenging problem,background_claim
For an overview of existing methods we recommend the class notes of Wojtan et al.,background_claim
WMFB11,data
The most popular approach is to advect a scalar field with the fluid and define the liquid surface to be one of the isosurfaces,background_claim
The main advantage of this class of methods is that they handle topological changes implicitly in contrast to mesh-based tracking methods,background_claim
"Until recently, the level set method was the method of choice in graphics",background_claim
the signed distance field is used as the scalar field with the zeroiso-surface as the liquid surface,background_claim
A well known drawback of the level set method is that volume is lost both globally and locally,background_claim
With global volume loss the water level decreases over time,background_claim
local volume loss causes small detail such as thin sheets and droplets to disappear,background_claim
A way to alleviate this problem is to introduce Lagrangian components,background_claim
particles,data
triangle meshes,data
FF01,data
EMF02,data
BGOS05,data
Even though these methods reduce volume loss,background_claim
they cannot guarantee complete volume conservation,background_claim
Lagrangian components add significant run-time cost,background_claim
complicate the implementation significantly,background_claim
GPUs,data
in- troduced the idea of using a density field as the scalar field for surface tracking with the liquid surface being the 0.5 isosurface,background_claim
MMTD07,data
This density field is not to be mistaken for the density field of the liquid,background_claim
the fluid-density is 1 everywhere,background_claim
not stored,background_claim
In incompressible fluid simulations,data
there are advection methods that strictly conserve quantities like density,background_claim
LAF11,data
We chose to use surface density instead of the signed distance field,own_claim
we use the symbol ρ for the surface density,own_claim
Their advection method is unconditionally stable and fully conservative,background_claim
the overall mass defined by the surface density is conserved,background_claim
With this approach,data
the overall volume may vary over time though,background_claim
the surface density can deviate from 1 temporarily,data
volume deviations are reflected in the density field,background_claim
the level set method where such variations go unnoticed,background_claim
we propose several methods to preserve volume both globally and locally using the information stored in the density field,own_claim
the surface density has the form of a step function at the liquid-air interface,background_claim
the initially sharp boundary blurs out,background_claim
numerical diffusion,data
apply a sharpening filter at each time step which conserves mass globally,background_claim
locally,background_claim
MMTD07,data
We propose a new sharpening method which conserves mass both locally and globally,own_claim
"A GPU friendly, purely Eulerian liquid simulator that conserves mass locally and globally without any need for Lagrangian components",own_claim
A new GPU friendly sharpening method which conserves mass locally and globally,own_claim
Modifications to reduce the computational cost of the conservative advection method of,own_claim
to make it more GPU friendly,own_claim
LAF11,data
Additional novel steps to handle non-axis aligned and moving solid boundaries,own_claim
A density post processing technique to bring out sub-grid detail,own_claim
3D Eulerian liquid simulation was introduced to computer graphics by Foster and Metaxas,background_claim
FM96,data
who used a finite difference approach to solve the governing equations,background_claim
Later Foster and Fedkiw,background_claim
employed the semi-Lagrangian method introduced by Stam,background_claim
FF01,data
Sta99,data
to solve the advection term and the level set method and particles to track liquid surface,background_claim
Enright et al.,background_claim
EMF02,data
devised the Particle Level Set,background_claim
method,background_claim
which uses particles on both sides of liquid-air interface to reduce volume loss,background_claim
many methods have been proposed to further improve the accuracy of Eulerian surface tracking,background_claim
Various approaches have been proposed to track the liquid domain more faithfully,background_claim
used a triangle mesh representation in connection with a level set grid,background_claim
augmented the level set grid with quadrature points,background_claim
BGOS05,data
HK10,data
Grid-less methods work with Lagrangian elements only,background_claim
particles,data
ZB05,data
APKG07,data
YT10,data
triangles meshes,data
M 09,data
BB09,data
WTGT10,data
A popular way to compensate volume gain or loss is to modify the divergence of the velocity field as proposed in,background_claim
FOA03,data
This technique was extended and used for con,background_claim
serving volume of bubbles,background_claim
highly deformable objects,background_claim
liquids,background_claim
KLL 07,data
ISF07,data
MMTD07,data
The problem of loss of liquid mass and momentum has also been addressed by proposing elaborate advection methods,background_claim
BFECC,data
modified MacCormack,data
derivatives advection,data
KLLR05,data
SFK 08,data
KSK08,data
conservative semi-Lagrangian advection,data
LGF11,data
LAF11,data
"As an alternative to level-set, the fluid domain can be tracked with a Volume-of-Fluid",background_claim
approach,background_claim
HN81,data
the volume fraction of fluid in each cell is evolved over time,background_claim
VOF can be made mass conserving,background_claim
With proper care,data
reconstructing surface normal and curvature from VOF is still difficult,background_claim
several improvements in subsequent works,background_claim
PP04,data
AGDJ08,data
Sussman and Puckett,background_claim
proposes coupled Level Set and Volume-ofFluid,background_claim
which track the fluid interface with both representations,background_claim
VOF is used for re-initializing the Level Set,background_claim
SP00,data
The surface can then be extracted from the Level Set,background_claim
CLVOF is extended to handle multiple interfaces in,background_claim
KPyNS10,data
The downside of CLVOF is the need to use two representations,background_claim
which can be quite computationally intensive,background_claim
An alternative to VOF is to track a smeared-out surface density and keep it relatively sharp with a sharpening operation,background_claim
This method was introduced to computer graphics by Mullen et al.,background_claim
MMTD07,data
Our fluid domain tracking approach builds upon this work and make it conserve mass both locally and globally,background_claim
there are many alternative models to simulate 3D liquids,background_claim
the LatticeBoltzmann method,data
approaches based on the discrete sin-cosine transform,background_claim
particle based,background_claim
methods,background_claim
LR09,data
TR04,data
TR09,data
MCG03,data
PTB 03,data
APKG07,data
SP09,data
SG11,data
We discretize the simulation domain using a regular staggered grid,own_claim
HW65,data
The scalar pressure p and the density ρ are stored at cell centers following,own_claim
MMTD07,data
The overall structure is the same as the one proposed in,own_claim
"with our novel modifications to the advection, sharpening and pressure incompressibility enforcement steps",own_claim
MMTD07,data
To extrapolate the velocities from inside the liquid into the surrounding air we use the scheme described in,own_claim
we apply the method of,own_claim
to derive the velocities a few grid cells away from the interface,own_claim
CM11b,data
JRW07,data
We advect ρ using our unconditionally stable conservative advection method which we derived from the method proposed by Lentine et al. in,own_claim
LGF11,data
LAF11,data
and improved in terms of computational cost,own_claim
Lentine et al.,background_claim
modified the semi-Lagrangian advection scheme to conserve mass by ensuring that each cell distributes all its mass of the current time step among some cells at the next time step,background_claim
LGF11,data
The entries of A in the standard semi-Lagrangian advection is,own_claim
A i j = w − ji,own_claim
Let w ij − (and w + ij ) represent the fraction of value that cell i gives to cell j which is found by backward (and forward) tracing and computing the tri-linear interpolation weights,data
β j = ∑ i A i j is the fraction of mass from cell j that gets advected,own_claim
A needs to be modified such that all the β j are 1,own_claim
To ensure that mass is conserved,data
Lentine et al.,background_claim
achieve this by first iterating through all cells j with β j &gt; 1 and re-scaling all A i j to A i j /β j,background_claim
LGF11,data
all the β j are 1,own_claim
A is mass conserving,data
At this point,data
This method works well for compressible flow on fine grids,own_claim
as discussed in,background_claim
LAF11,data
the scheme produces artifacts when used for incompressible flow on coarser grids,background_claim
The problem is due to the clamping of the β j by re-scaling which limits the amount of density that reaches certain cells,own_claim
An indicator of this amount are the γ i = ∑ j A i j,own_claim
The traditional semi-Lagrangian method ensures that all the γ i are 1 while the β j are arbitrary,own_claim
the scheme described above ensures that all the β j are 1,own_claim
the γ i are arbitrary,own_claim
Lentine et al.,background_claim
propose a method to ensure the β j are all 1,background_claim
the γ i stay close to 1,background_claim
LAF11,data
they keep track of the cumulative γ i over time as separate variables,own_claim
To this end,data
all the β j are 1,own_claim
the γ i might still deviate from 1,own_claim
At this point,data
apply a diffusion step on ρ n+1 and the γ i,background_claim
To bring them even closer to 1,background_claim
Lentine et al.,data
They iterate through all the cells dimension-by-dimension,own_claim
they move ρ j (γ j − γ i )/2γ j from cell j to cell i and set both γ j and γ i to γ j +γ 2 i,own_claim
"for two neighboring cells i and j, γ j &gt; γ i",data
γ j &lt; γ i,data
the flow happens in the opposite direction,own_claim
This process is repeated 1 to 7 times per time step,own_claim
these diffusion iterations do not affect the β j,own_claim
they remain 1,own_claim
Scattering is expensive on GPU’s,own_claim
it either requires atomic operations or a prefix-scan,data
We propose a modification of this method,own_claim
The basic idea is to reorder the forward tracing and the re-scaling steps to simplify the calculations,own_claim
The resulting discrete conservative advection operator is not the same as the one computed with the original scheme,own_claim
both are just approximations to the doubly-stochastic matrix,own_claim
closest to the original discrete advection operator,own_claim
our simplification reduces the number of scatter passes from 5 to 3,own_claim
the visual results are of similar quality,own_claim
Figure 2,data
the accompanying video,data
Another advantage of our new scheme is that A does not need to be stored explicitly,own_claim
"the order of the operations allow for updating ρ n+1 , β and γ directly",data
Not storing A explicitly is possible in the original scheme as well,own_claim
"This modified method only requires 3 scatter passes in the steps 3, 6, and 7",own_claim
our method keeps γ in a similar range to that of,own_claim
Table 1,data
LAF11,data
"has a much larger range, resulting in visible compressibility artifacts",own_claim
LGF11,data
Our method and LAF11 have similar range,own_claim
has a much larger range which explains the incompressibility artifacts,own_claim
LGF11,data
mass is conserved,own_claim
The technique above guarantees,data
the density field smooths out over time blurring the 0.5 iso-contour with the effect that we can no longer track the movement of the liquid surface accurately,own_claim
we first compute the mass change of each cell due to unit velocity along the x axis,own_claim
MMTD07,data
"δ x i + = ( · (ρ[1, 0, 0] T )∆T )dV",own_claim
"C i − δ i x = ( · (ρ[−1, 0, 0] T )∆T )dV, C i",own_claim
"δ i x + ≈ −(ρ i − ρ i−(1,0,0) )∆x∆T",own_claim
"− δ i x ≈ −(ρ i+(1,0,0) − ρ i )∆x∆T",own_claim
We discretize δ x i + and δ i x − using an upwind scheme,data
The mass change,own_claim
are computed similarly,own_claim
"unit velocity along y and z axes, δ i , δ i y − , δ i z + , and δ i z",data
The maximum mass increase and mass decrease,own_claim
to any unit velocity in each cell,data
"∆T | ρ| + i = ∆x 1 2 (max(max(δ i x + , 0) 2 , min(δ i x − , 0) 2 ) +",data
"y + 2 y − 2 max(max(δ i , 0) , min(δ i , 0) ) +",data
"z + 2 z − 2 1 max(max(δ i , 0) , min(δ i , 0) )) 2",data
"∆T | ρ| − i = ∆x 1 2 (max(min(δ i x + , 0) 2 , max(δ i x − , 0) 2 ) +",data
"y + 2 y − 2 max(min(δ i , 0) , max(δ i , 0) ) +",data
"z + 2 z − 2 1 max(min(δ i , 0) , max(δ i , 0) )) 2",data
The parameter τ controls the maximum difference in density between two adjacent cells,own_claim
we set to 0.4 as in,own_claim
MMTD07,data
This yields the following density correction,own_claim
| + ≥,own_claim
∆ρ i = w i (ρ) ∆T | ρ| i − if if w w i (ρ) (ρ) &lt; 0 0,own_claim
i i ρ can then be sharpened by updating the density of each cell using,own_claim
ρ ← ρ + ∆ρ,own_claim
This update sharpens the interface,own_claim
it does not conserve mass,own_claim
Mullen et al.,background_claim
modify it to conserve mass by summing up the mass change due to this update across all cells,background_claim
MMTD07,data
This successfully conserves mass globally,own_claim
"One artifact of this approach is that mass moves far, potentially across the entire simulation domain",own_claim
This problem can be reduced by re-distributing mass only within connected regions as pro,own_claim
posed by,own_claim
KLL 07,data
even with this technique,data
local mass loss can still occur,own_claim
moving mass away from small features resulting in the disappearance of small surface details,data
The mass conserving sharpening method of,own_claim
transfers the mass from the liquid balls to the pool causing them to disappear mid-air,own_claim
MMTD07,data
We propose a novel method to conserve mass during the sharpening phase that conserves mass both locally and globally,own_claim
The density sharpening method used by,own_claim
conserves mass globally,own_claim
not locally,own_claim
the mass from a liquid ball,own_claim
to disappear in mid air,own_claim
Mullen et al. [2007],data
Our density sharpening method conserves mass both globally and locally preserving the mass of the liquid ball,own_claim
ρ ≥ 0,own_claim
at the next time step,data
reducing computation cost,own_claim
we do not have to apply the sharpening operator to this cell at the next time step,data
cells with ρ &gt; 0.5 are not modified,own_claim
This is done using multiple forward Euler sub-steps,own_claim
we set the corresponding weight to zero and re-normalize the weights,own_claim
a grid point is in a solid,data
Increasing D visually resembles the effect of surface tension,own_claim
The bigger hump has a large area with 0.5 &lt; ρ &lt; 1.0,own_claim
− ∑ i ∆ρ i is negative in the scheme of,own_claim
Mullen et al. 2007,data
In this particular case,data
This negative mass is distributed to all the cells near interface,own_claim
the smaller hump to become even smaller,own_claim
Our method does not have this problem,own_claim
−∆ρ &gt; 0 is only added to the nearby cells around the 0.5 iso-contour,data
This prevents mass from being transported from one hump to another,own_claim
the method does not take solid fraction and solid velocity into account,own_claim
"The scalars V i+( 1 ,0,0) , V i+(0, 1 ,0) , and V i+(0,0, 1 ) 2 2 2 represent the fraction of non-solid area of the positive x, y, and z faces respectively",own_claim
the value of ρ i can become larger than V i,own_claim
in some cells,data
is a non-valid state,own_claim
We handle the situation differently depending on whether the cell is partially solid (V i &lt; 1) or completely non-solid (V i = 1),own_claim
we first compute the excess density d = ρ i − V i,own_claim
the cell is partially solid,data
This method keeps ρ i ≤ V i in most cells near solid boundary and guarantees ρ i = 0 inside the solid,own_claim
With this choice excess density gets removed from solid quickly enough to not cause visual artifacts,own_claim
V i = 1 is handled in the incompressibility enforcement step,own_claim
the next section,data
we first compute the pressure using a variational framework,own_claim
BBB07,data
The tricky part in our case is to determine the fraction of liquid in each cell,own_claim
This fraction is used to decide whether a cell is included in the linear pressure solve,own_claim
It is also needed in the ghost fluid method,own_claim
to accurately handle the liquid-air boundary,own_claim
ENGF03,data
we cannot directly use ρ,own_claim
a cell with V &lt; 0.5 will likely have ρ &lt; 0.5,data
cells that are completely solid (V = 0) have ρ = 0,own_claim
use the method of,own_claim
to compute the coefficients of linear system for pressure projection,own_claim
CM11a,data
This artificial divergence pushes the excess density away from the cells whose ρ &gt; 1,own_claim
Mullen et al.,background_claim
also added this term to the divergence,background_claim
MMTD07,data
with λ = 1 and η = ∞,data
ρ is much larger than 1,own_claim
can cause stability problems,own_claim
A scenario in which this happens is when liquid flows very fast towards a solid boundary and gets reflected,own_claim
our method for removing excess density from the solid,data
The density field is post-processed with,own_claim
the method,own_claim
to enhance sub-grid details,own_claim
proposed in this paper,data
Adding additional divergence is important,own_claim
in our case,data
ρ &gt; 1 results in visual volume loss,own_claim
this problem gets gradually corrected over time,own_claim
With the method described above,data
We solve for the pressure p with the multigrid method of,own_claim
which enforces separating solid boundary conditions,own_claim
CM11a,data
we extract the triangle mesh of the 0.5 isocontour of ρ using the marching cubes method,own_claim
LC87,data
This approach is typically used in level-set based liquid simulations as well to extract the zero contour of the signed distance field,background_claim
EMF02,data
The surface density ρ contains small scale details that are not captured by the 0.5 iso-contour,own_claim
the regions where 0 &lt; ρ &lt; 0.5 represent features such as small splashes and thin sheets,own_claim
are too small to be captured with the grid resolution used,own_claim
Here,data
these features are destroyed by the redistancing step,own_claim
In the level-set approach,data
An important observation is that regions in which 0 &lt; ρ &lt; 0.5 do not necessarily represent small scale features,own_claim
ρ needs to be scaled up as the regions where γ ≤ 0.5,own_claim
the two cases above are not distinguished,own_claim
this can be achieved by applying a Gaussian blur filter to γ,own_claim
those values spread across the interface,own_claim
γ to raise toward 1,own_claim
γ &gt; 0.5 inside liquid,data
γ &lt; 0.5 everywhere inside small scale features,data
blurring will still result in γ being small,own_claim
A way to improve the results further would be to apply thinning to the parts of the surface that come from region with ρ &lt; 0.5 in order to compensate for the density up-scaling,own_claim
We compared our method with the particle level set,own_claim
approach,own_claim
EMF02,data
Our method conserves the liquid’s mass as expected and prevents the water level from decreasing,own_claim
most of the liquid disappears in the course of the simulation,own_claim
the large time step size used,data
with PLS,data
We used the PLS implementation of,own_claim
MF,data
The jet has a very fast flow rate and generates fast moving liquid splashes and sheets,own_claim
These are difficult cases for level set approaches,own_claim
our method handles them without any problem,own_claim
a 3d water demo that is both simulated and ray-traced in real time,own_claim
we were able to create,own_claim
With our approach,data
We achieved a frame rate of over 30fps with two GPUs,own_claim
the ability of our method to simulate liquid in a non-axis aligned moving container,own_claim
These examples,data
Our method conserves mass and prevents volume loss in this difficult case as well,own_claim
The total mass is computed by integrating ρ over the whole simulation grid,own_claim
Our method conserves mass in all examples and generally keeps the volume close to the true liquid volume,own_claim
there are several situations where our method loses volume visually,own_claim
One such case is when a liquid ball hits the ground and spreads out until it becomes thinner than the grid spacing,own_claim
the density values are nonzero,own_claim
marching cubes does not generate surface meshes in those regions,own_claim
Another case is when the ratio of surface area to volume is large,own_claim
there are large regions with ρ &lt; 0.5 that do not contribute to the volume,own_claim
the 0.5 iso-contour is empty,own_claim
In this case,data
they correctly contribute to its volume,own_claim
the global level remains constant,own_claim
such features join the main body of water again,own_claim
PLS,own_claim
We proposed a method for simulating liquids that conserves mass,own_claim
is effective in keeping the volume defined by the 0.5 iso-contour close to constant,own_claim
The method has its limitations as well,own_claim
it does not modify regions where ρ &gt; 0.5,own_claim
our sharpening scheme ensures that the ρ = 0.5 interface is sharp,own_claim
It could theoretically be possible that the region with ρ slightly above 0.5 expands,own_claim
the volume defined by the 0.5 iso-contour grows by a factor of two while keeping its original mass,own_claim
the divergence free velocity field prevents the liquid from expanding significantly,data
does not happen in practice,own_claim
An alternative to our sharpening method is to perform antidiffusion step,own_claim
SHA11,data
which is an interesting avenue for future work,own_claim
Another limitation is the possibility of losing local volume temporarily,own_claim
the previous section,data
The density post processing method,own_claim
is an effective way to alleviate this effect,own_claim
our method cannot guarantee complete volume conservation at all times,own_claim
it reduces this problem significantly in comparison to all the previous methods we have investigated,own_claim
One of the most visually compelling aspects of liquids is the variety of complex thin sheets and droplets that arise during splashing,background_claim
these remain among the most difficult features to simulate plausibly and accurately with existing techniques,background_claim
Such detailed behaviour is extremely computationally expensive to resolve,background_claim
the tremendous grid resolution required for both the fluid solver and the surface tracking mechanism,data
Recent advances in explicit surface tracking with triangle meshes,background_claim
"have made feasible the geometric representation and manipulation of small features, without the loss of detail exhibited by implicit surface methods",background_claim
Wojtan et al. 2009,data
Brochu and Bridson 2009,data
Müller 2009,data
the surface is coupled to a standard Eulerian simulator,data
the liquid volume must first be resampled onto the simulation mesh or grid to provide geometric information for boundary conditions,background_claim
this resampling process typically destroys small details,data
they are invisible to the fluid solver and cannot be advanced appropriately,background_claim
This can lead to a variety of visible artifacts,background_claim
lingering surface noise,data
liquid behaving,data
thin features simply halting in mid-air,background_claim
the simulator fails to see them,data
it were connected when it is not,background_claim
Bargteil et al. 2006,data
Kim et al. 2009,data
combined with surface tension forces,data
noisy sub-mesh details can also severely hamper stability,background_claim
they are not artificially smoothed out,data
a simulator that “sees” every detail in the explicit liquid surface,own_claim
"a new approach to surface tension, arriving at a complete liquid simulator",own_claim
our key contribution is coupling an explicit surface tracker to a Voronoi-based liquid simulator with,own_claim
a pressure sample placement strategy that captures the complete liquid surface geometry,own_claim
an accurate surface tension model combining mesh-based curvature estimates and ghost fluid boundary conditions,own_claim
"embedded free surface and solid boundary conditions adapted to Voronoi cells, avoiding the need for more onerous conforming tetrahedral mesh generation",own_claim
a new velocity interpolant over unstructured meshes,own_claim
The practical benefits of such a system include,own_claim
"improved animation of detailed liquid features, including very thin sheets, tendrils and droplets",own_claim
elimination of noise in explicit surface tracking without nonphysical smoothing,own_claim
more detailed and less damped surface tension effects,own_claim
faster semi-Lagrangian advection on unstructured meshes without increased dissipation,own_claim
Unstructured and semi-structured meshes have a long history in computational fluid dynamics,background_claim
have gained traction in computer animation as well,background_claim
An important reason for their popularity is that careful control of mesh geometry can simplify the discretization or improve accuracy,background_claim
conforming the simulation mesh to solid walls makes the no-flow boundary condition trivial,background_claim
adaptivity can be easily introduced by grading mesh elements as desired,background_claim
Past work in graphics has extensively explored finite volume methods for tetrahedral meshes,background_claim
Feldman et al. 2005a,data
Feldman et al. 2005b,data
Klingner et al. 2006,data
Chentanez et al. 2006,data
Elcott et al. 2007,data
Wendt et al. 2007,data
Chentanez et al. 2007,data
many of the features of standard grid-based solvers are supported on tetrahedra,background_claim
free surfaces,data
implicit coupling to dynamic solids,data
Batty et al. [2010],data
augmented this approach with embedded boundaries,background_claim
improving free surface accuracy and reducing remeshing complexity,background_claim
Enright et al. 2003,data
Batty et al. 2007,data
Our method extends these advantages to Voronoi meshes,own_claim
Sin et al. [2009],data
developed a particle method which solves a finite volume pressure projection on the Voronoi diagram of the liquid particles,background_claim
An advantage of this approach is that the pressure degrees of freedom are directly tied to the number of particles,background_claim
there can never be a resolution mismatch between surface geometry and simulator,background_claim
Lee [2010],data
subdivide polyhedra into tetrahedra for interpolation similar to our method,background_claim
our method is simpler,own_claim
use of the Voronoi diagram,data
Implicit surfaces have long been used to capture liquid geometry in animation,background_claim
this family of schemes includes level set,background_claim
methods,background_claim
volume-of-fluid,background_claim
and semi-Lagrangian contouring,background_claim
Enright et al. 2002a,data
Mihalef et al. 2006,data
Mullen et al. 2007,data
Bargteil et al. 2006,data
Implicit approaches naturally yield smooth surfaces and seamlessly handle topological change,background_claim
the resolution of the underlying grid imposes a severe limit on the smallest representable feature,background_claim
beyond which geometry either vanishes,background_claim
or artificially coalesces into grid-scale “flotsam and jetsam”,background_claim
Ensuring temporal coherence and avoiding visual artifacts,background_claim
can also be problematic,background_claim
the use of regular grids,data
The shortcomings of implicit schemes have spurred interest in explicit methods,background_claim
“front tracking”,data
Glimm et al. 1998,data
the surface is represented explicitly as a triangle mesh,background_claim
whose vertices are moved with the fluid velocity field,background_claim
Here,data
The greatest challenge is handling topological change,background_claim
mesh tangling,data
that may occur during merging and splitting,background_claim
Du et al. 2006,data
Wojtan et al. 2009,data
"One solution is to determine problematic regions, switch to an implicit surface to repair the tangles there, then stitch back in a new consistent mesh patch",background_claim
Müller [2009],data
"takes a similar grid-based approach to untangling, rebuilding a consistent mesh using marching-cubeslike stencils",background_claim
these methods still are subject,background_claim
to a resolution limited by the voxel grid,background_claim
in complex regions,data
"Another approach is to work strictly on the triangle mesh itself, using “mesh surgery” for repairs",background_claim
this is difficult,background_claim
Brochu &amp; Bridson [2009],data
recently showed that the problem can be simplified using ideas from cloth animation,background_claim
enforcing the invariant,data
the surface remain intersection-free,background_claim
Topological operations are only allowed when safe,background_claim
robust collision processing is used as a last resort to avoid tangles,background_claim
the surface is minimally perturbed to avoid problems,data
other front tracking methods could easily be used instead,background_claim
Campen &amp; Kobbelt [2010],data
the need for collision processing could be obviated with exact Boolean operations,background_claim
A prime focus of our work is matching the surface mesh resolution to that of the liquid solver,own_claim
"Most level set-based solvers use one level set sample per pressure grid cell, conservatively avoiding resolution inconsistencies",background_claim
Foster and Fedkiw 2001,data
Enright et al. 2002b,data
Goktekin et al. [2004],data
"experimented with a doubleresolution level set, trading better volume conservation for other artifacts",background_claim
Bargteil et al. [2006],data
similarly coupled an octree contouring method to a uniform grid fluid solver and explicitly discussed potential artifacts,background_claim
resolution mismatch,data
erroneously preserving surface noise and the solver interpreting disconnected fluid regions as connected,data
Kim et al. [2009],data
coupled a high resolution particle level set to a low resolution ghost fluid-based liquid solver,background_claim
ensured that pressure projection captured all liquid geometry by resampling an inflated level set at the pressure grid resolution,background_claim
this can exacerbate other artifacts,background_claim
liquid components behave as if half a cell-width larger than they appear,data
Kim et al.,data
also introduced extra surface smoothing to prevent retention of small-scale noise,background_claim
Mismatched resolutions have been found useful for deformable solids,background_claim
surface details are expected to generally persist,background_claim
in liquids,background_claim
Wojtan &amp; Turk [2008],data
used a surface mesh coupled to a lower resolution finite element solver,background_claim
forcing the simulation mesh to have the same topology,background_claim
the embedded surface mesh may improve realism,background_claim
Teran et al. 2005,data
Nesme et al. 2009,data
Approaches to surface tension generally fall into two categories,background_claim
those which apply surface tension as a body force in a region around the interface via smeared delta functions,background_claim
"those which apply surface tension discontinuously at the interface, typically as a boundary condition in the pressure projection step",background_claim
Brackbill et al. 1992,data
Hong and Kim 2003,data
Zheng et al. 2006,data
Wojtan et al. 2009,data
The latter is exemplified by the ghost fluid method and related approaches,background_claim
Enright et al. 2003,data
Hong and Kim 2005,data
Hong et al. 2007,data
has been shown to provide more realistic results,background_claim
Surface tension models can also be compared in terms of how the force itself is approximated,background_claim
finite differences are often used to estimate mean curvature,background_claim
this can be quite inaccurate without careful modification,background_claim
Shin 2007,data
cannot capture small details,background_claim
In level set schemes,data
a more accurate approach is either to use mesh-based curvature operators,background_claim
If a surface mesh is available,data
Meyer et al. 2002b,data
to model a physical tension directly in the surface mesh geometry,background_claim
Perot and Nallapati 2003,data
Brochu 2006,data
Wojtan and Turk 2008,data
this noise tends to worsen and destroy stability,background_claim
without correct feedback from the physics,data
Wojtan &amp; Turk [2008],data
that surface details below the simulation resolution add energy,background_claim
cannot be correctly evolved by the solver,background_claim
handle this with Laplacian smoothing to eliminate small features,background_claim
this non-physical operation is dissipative rather than conservative,background_claim
all relevant details are properly resolved,own_claim
By instead combining our surface tension model with a geometry-aware sampling,data
This yields accurate and comparatively stable surface tension effects without artificial smoothing,background_claim
We generally follow the tetrahedral scheme of,own_claim
with modifications to use specially designed Voronoi meshes instead,own_claim
Batty et al. [2010],data
Like Sin et al. [2009],data
"we place pressure samples on the vertices of a Delaunay tetrahedral mesh, corresponding to the sites of the dual Voronoi diagram",own_claim
figures 3(a),data
3(b),data
Normal components of velocity lie on the faces of the Voronoi cells,background_claim
the velocity sample is parallel to the line segment connecting the pressure samples in the Delaunay mesh,background_claim
This configuration requires a slightly different velocity reconstruction,background_claim
previous methods,background_claim
semi-Lagrangian advection is,background_claim
straightforward,background_claim
El Topo code,own_claim
we used,own_claim
For front tracking,data
Brochu &amp; Bridson’s,data
2009,data
Purely explicit front tracking algorithms generally use mesh refinement and coarsening to maintain a high quality discretization as the surface deforms,background_claim
"El Topo uses a sequence of edge subdivision, collapse and flipping operations, combined with null-space Laplacian smoothing",background_claim
they are designed to be geometry-preserving,background_claim
these operations change mesh connectivity,background_claim
the smoothing moves vertices only in the null space of the local quadric metric tensor,background_claim
Garland and Heckbert 1997,data
Jiao [2007],data
it is moved in the plane tangent to the surface,own_claim
the vertex lies on a locally smooth patch,data
on a ridge or corner,data
it is moved only along this line,own_claim
"sharp features are preserved, allowing the present paper’s algorithm to handle them physically",own_claim
The solver runs through the following stages each time step,own_claim
"We use finite volumes on a Voronoi mesh for the pressure projection step, similar to",own_claim
Sin et al.,data
[2009],data
we adapt the embedded boundary methods of,own_claim
applying boundary conditions as they describe,own_claim
Batty et al.,data
[2010],data
to Voronoi meshes,own_claim
the duality/orthogonality relationship between Voronoi and Delaunay meshes lets the accuracy benefits of the method carry over,own_claim
"To enforce embedded solid boundary conditions, we need to estimate the partial unobstructed area of each element face",own_claim
figure 3(d),data
Batty et al.,data
[2010],data
used marching triangles cases for computing tetrahedra face fractions from signed distance values on the vertices,background_claim
the faces are arbitrary convex planar polygons rather than triangles,own_claim
in the Voronoi setting,data
these are now located at Voronoi sites,own_claim
tetrahedra circumcenters,own_claim
the method is,own_claim
unchanged,own_claim
figure 3(c),data
A slight improvement can be achieved by casting rays to find the exact position of the surface mesh between pressure samples,own_claim
this is much more accurate,own_claim
the estimate derived from signed distances,own_claim
In some cases,data
we found it made minimal visual difference,own_claim
in practice,data
This family of redistancing schemes is described by,own_claim
is easily adapted to tetrahedra,own_claim
Bridson [2008],data
"To incorporate surface tension, we follow",own_claim
in setting the free surface pressure p fs = p air + γκ fs,own_claim
Enright et al.,data
[2003],data
We chose the operator of,own_claim
it provides high quality estimates using just the one-ring of triangles surrounding each vertex,own_claim
Meyer et al.,data
[2002b],data
others could work too,own_claim
Curvature is evaluated at the intersection point between the the triangle mesh surface and the line joining an interior pressure sample to an exterior one,own_claim
Often this intersection point will coincide with a surface mesh vertex due to our choice of sampling scheme,own_claim
"This method appears highly accurate, and leads to much less damping",own_claim
that of,own_claim
Wojtan et al.,data
[2009],data
An advantage of a Voronoi-based discretization is the freedom to explicitly choose pressure sample locations,own_claim
which is critical for accurate ghost fluid free surface conditions,own_claim
the signed distance at these samples communicate the surface geometry to the solver,data
We can visualize the solver’s “knowledge” by contouring this level set,own_claim
uniform sampling may fail,own_claim
figures 5,data
6,data
Careful pressure sample placement with respect to the surface helps in three important ways,own_claim
"we can inform the solver of all local geometric extrema, allowing the physics to act upon them correctly",own_claim
This eliminates the accumulation of erroneous surface noise without requiring non-physical smoothing,own_claim
this is especially vital for surface tension,own_claim
spurious noise affects the curvature estimates and induces disastrously large yet futile compensating velocities that destabilize the simulation,data
we can ensure that the solver sees the correct surface topology,own_claim
the physics responds to merging or splitting only when the surface mesh itself merges or splits,own_claim
grid-scale features often disappear and reappear in regular grid sampling,own_claim
the surface translates through the grid,data
we ensure they cannot be missed,own_claim
By specifically placing points inside such small features,data
The brute-force approach to these issues is to locally refine using octree grids or graded BCC lattice tetrahedra to capture smaller features,own_claim
this scales poorly,own_claim
many of the extra samples yield little benefit,own_claim
incurring memory and computational overhead,own_claim
there remains no guarantee that features below the smallest grid cell size will be captured,own_claim
also builds a volumetric mesh that attempts to respect the liquid surface,own_claim
the tetrahedral method of,own_claim
Chentanez et al.,data
[2007],data
This is considerably more difficult than non-conforming Delaunay tetrahedralization,own_claim
"requires more Steiner points, worse-shaped tetrahedra, and/or the loss of the Delaunay property",own_claim
this advantage is shared by the method of,own_claim
Batty et al. [2010],data
the position of pressure samples plays a more important role in free surface conditions than the position of element faces,own_claim
it matches boundary faces rather than positioning pressure samples,own_claim
we do not require conforming elements,own_claim
our method uses embedded boundary conditions,data
As accuracy requires that tetrahedral schemes store pressures at circumcenters,own_claim
even filling a thin feature with conforming tetrahedra provides no guarantee that its interior will be sampled at all,own_claim
circumcenters often lie outside their associated tetrahedra,own_claim
Klingner et al. 2006,data
Batty et al. 2010,data
we need to place pressure samples so that they capture the surface’s local geometric extrema,own_claim
around surface mesh vertices,data
"this lends additional accuracy to the vertex’s normal motion, and to the incorporation of the normal force",own_claim
surface tension calculated at the vertex,data
This placement may miss very thin sheets or other fine structures,own_claim
"we store the distance d to the closest intersection, and use d in place of ∆x in the offset",own_claim
figure 7,data
the distance between the surface vertex and the first intersection 1 is below some threshold,data
the proposed sample is an air sample,data
we also discard it,own_claim
This is necessary,own_claim
the divergence constraint is not enforced on air cells,data
they can act as liquid sinks,own_claim
and destroy liquid volume until the geometry finally merges,own_claim
Losasso et al. 2006,data
merging in this scenario can often take several time steps to resolve,own_claim
the interpolated velocity in the air gap still averages to zero,data
preventing surface geometry from actually intersecting and flagging a collision,own_claim
our simulator treats the two liquid bodies as merged and prevents volume loss,own_claim
the geometric merge is usually then processed within a few timesteps,own_claim
By not placing a sample point in these very small gaps,data
the physics can respond as if merged,own_claim
the surfaces are still as much as ∆x apart,data
figure 9,data
a graded octree or any other strategy could also be used to fill the domain,own_claim
All samples are then run through a Delaunay mesh generator such as TetGen,own_claim
Si 2006,data
Velocity interpolation methods for unstructured meshes typically proceed in two steps,background_claim
Klingner et al. 2006,data
Elcott et al. 2007,data
Batty et al. 2010,data
advection of velocities and geometry is straightforward,own_claim
Given such an interpolant,data
face normal components on tetrahedra were used to reconstruct velocities at circumcenters,own_claim
In previous work,data
We could then apply the usual generalized barycentric interpolant over Voronoi cells,own_claim
this is expensive,own_claim
and requires special case handling to avoid degeneracies,own_claim
Chentanez et al. 2007,data
Meyer et al. 2002a,data
A simple and fast alternative discussed by,own_claim
is to first interpolate velocities to Voronoi sites,own_claim
and apply standard,own_claim
barycentric interpolation over each tetrahedron,own_claim
Klingner et al. and Chentanez et al.,data
the interpolation onto tetrahedra vertices discards any local extrema at the Voronoi vertices,own_claim
"severely over-smoothing the velocity field in practice, damping out interesting flow behavior",own_claim
Velocities for each of these new points need to be computed,own_claim
previous work used the generalized barycentric interpolant for this transfer step,own_claim
we found that simply averaging the velocities of the surrounding ring or cell of Voronoi vertices is quicker and equally effective,own_claim
Simple and efficient barycentric interpolations can then be applied on the resulting smaller tetrahedra,own_claim
we also replace the normal component of the averaged full velocity with the exact normal component already stored at the face,data
more accurate velocities at the Voronoi vertices are retained and merely augmented with additional data,own_claim
the sharper,data
"this is far less dissipative, yielding results that closely match generalized barycentric interpolation",own_claim
figure 11,data
reconstructions should only use face velocities which were assigned valid data by the pressure projection,own_claim
we can only reconstruct reasonable velocities inside the fluid,own_claim
each unknown point in a layer is set by averaging all adjacent known points from previous layers,own_claim
This simple method,own_claim
suggested in the context of cloth-fluid coupling by,own_claim
sufficed for all our animations,own_claim
Guendelman et al. 2005,data
One potential issue,own_claim
is that,own_claim
our unstructured sampling can cause sliver tetrahedra in the unmodified Delaunay tetrahedralization,own_claim
despite enforcing a lower bound on the distance between pressure samples,own_claim
not unique to our method,own_claim
it can cause the least squares velocity reconstructions to be ill-conditioned,own_claim
we found this posed little problem for the pressure projection,own_claim
nearly co-planar face normals,data
This can be readily resolved by requesting that the mesh generator add Steiner points to enforce fairly lax quality bounds,own_claim
our embedded pressure projection does not require the mesh generator to match boundaries,data
this is relatively inexpensive and effective,own_claim
mesh quality cannot be improved sufficiently,own_claim
using additional nearby velocity samples in the reconstruction can ameliorate this at the cost of a smoother result,own_claim
"The issues that arise from regular, non-geometry-aware pressure sampling are common and consistent across Cartesian grids, octrees, Voronoi meshes, and tetrahedral meshes",background_claim
"regularly-spaced pressure samples can miss fine surface details, resulting in surface noise",own_claim
which is never physically smoothed out,background_claim
discussed above,data
our sampling approach successfully resolves and corrects such small surface details,own_claim
Figure 12,data
regular samples cannot fully capture the initial surface perturbation,own_claim
it cannot be rectified,own_claim
this actually exacerbates the problem,own_claim
the ghost fluid method on regular samples does detect some differences in surface height,data
"noisy sub-mesh details will appear to the simulator as rapid discontinuous changes in surface position over time, inducing noisy responses in the fluid velocity",data
Another visible artifact of using mismatched surface and simulation resolutions is topological inconsistencies,own_claim
"a surface with two disjoint volumes of liquid may appear to the solver as one volume, resulting in a premature response",own_claim
they easily correct this spurious motion,own_claim
our adaptively-placed samples match the topology of the surface tracker,data
Figure 1,data
"sheets of this kind often end up between samples, effectively disappearing from the solver",own_claim
With regular pressure samples,data
Our sampling ensures that almost arbitrarily thin sheets of liquid remain visible to the solver,own_claim
interesting rippling and splashing motion still occurs,own_claim
Our method also resolves thin sheets and small surface details generated by large splashes,own_claim
figure 1,data
"To counteract gradual volume drift, we do add a corrective motion-in-the-normaldirection",own_claim
Brochu 2006,data
Müller 2009,data
the liquid motion remains lively and active throughout,own_claim
we are using only first-order semi-Lagrangian advection,data
their extra kinetic and gravitational potential energy is retained in the simulation,own_claim
accounting for this reduced dissipation,data
our method retains sharp wave peaks and splashes rather than continually eroding them,data
These simulations used no more than 320K tetrahedra each,own_claim
recent tetrahedra-based free surface methods used up to 4 times more tetrahedra to achieve a similar level of detail,own_claim
this mesh cannot respond and correct high frequency sub-mesh details present in the curvature estimates,own_claim
the simulation becomes unstable almost immediately,own_claim
Applying an excessively strict timestep restriction only brings the simulation to a halt,own_claim
the surface noise introduces increasingly sharp features,data
we run another zero gravity simulation on a rectangular block,own_claim
Inspired by an example from the work of,own_claim
Wojtan &amp; Turk [2008],data
figure 11,data
our simulation does not use diffusive Laplacian mesh smoothing and applies accurate mesh-based surface tension forces discontinuously at the interface,data
we retain substantially greater detail in the resulting capillary wave motion,own_claim
our barycentric method is substantially less damped than the naıve barycentric interpolation approach,own_claim
matches the more complex generalized barycentric interpolant,own_claim
figure 11,data
Our implementation is not heavily optimized,own_claim
our Voronoi simulator is in many ways dual to a tetrahedral scheme,own_claim
for a given mesh,data
the number of velocity samples is identical,own_claim
approximately comparable costs are,own_claim
reasonable to expect,own_claim
"The main contribution of this paper is the coupling of simulation elements to an existing explicit surface tracking method, and not the explicit surface tracking itself",own_claim
not all artifacts,own_claim
surface tracking,data
are addressed,own_claim
El Topo delays handling some very difficult collisions for a few timesteps until the topological operations can be safely processed,own_claim
which occasionally yields visible lingering surface noise,own_claim
Reducing the time step size can help by introducing fewer and simpler collisions,own_claim
more aggressive simplification can also be enabled by tuning the volume change tolerance,own_claim
the use of featurepreserving mesh improvement,own_claim
are still visible in our animations,own_claim
some popping artifacts,own_claim
onthe-fly remeshing,data
its resolution is not constrained to a regular grid,own_claim
it is,own_claim
able to showcase very thin features,own_claim
our method could adapt to any of the front tracking methods,own_claim
section 2.2,data
Our goal in many of the other examples was to highlight the ability to track thin sheets,own_claim
surface tension would break these sheets into droplets,own_claim
explicit surface tension schemes,own_claim
the ghost-fluid-based method used in this paper,data
suffer from a stringent O(∆x 2 ) time step restriction for stability,own_claim
which is particularly costly,own_claim
small scale capillary waves are not erroneously damped out,own_claim
"Pursuing a more efficient, fully implicit surface tension model is a promising future direction",own_claim
with careful placement of pressure samples,data
our Voronoi mesh-based fluid solver makes it possible for explicit surface tracking to achieve its full potential in capturing small scale liquid features,own_claim
it may be possible to enhance our sampling scheme in various ways,own_claim
by exploiting curvature adaptivity,data
topological information,data
measures of vorticity,data
velocity variation,data
many common extensions to basic inviscid liquid simulation rely on regular grids,own_claim
The problem of simulating the behavior of clothes is one subject the graphics community has been grappling with since almost two decades ago,background_claim
19,data
21,data
Relatively little emphasis has been placed on the separate problem of how to achieve real-time performance in simulating cloth,background_claim
A number of strategies have been suggested,background_claim
using simplifying assumptions for the physics model and/or collision detection,data
7,data
12,data
A recent work by James et al.,background_claim
suggests a different approach by adopting a data-driven method,background_claim
10,data
These techniques do not suffice,background_claim
"simulating fully dressed virtual characters in real-time, leaving the topic unexplored",data
We present a data-driven method for simulating clothes worn by 3D characters in real-time,own_claim
To effectively optimize the physics-based deformation,own_claim
which is the bottleneck of the simulation,background_claim
we use a coarse representation of the cloth mesh to drive the gross behavior in simulation,own_claim
We consider that the gross cloth behavior is driven mainly by two separable contributions,own_claim
the skeleton-driven movement of the character and the mechanical properties of the cloth,own_claim
5,data
This consideration was partly inspired by the hybrid real-time simulation method proposed in Cordier et al.,background_claim
where a hybrid deformation method is used to combine dynamic surfaces with Skeleton-Driven Deformation,background_claim
our method exhibits significantly more efficient and realistic behavior,own_claim
that method,own_claim
"This effect is achieved by focusing on the analysis of cloth movements in relation to its associated skin surface, and adopting a learning strategy",own_claim
The idea is to use the analysis of the presimulated sequence to identify the region largely explained by joint movement and to replace the physics based simulation with geometric methods wherever possible,own_claim
the key ingredients of the new technique are associated with different facets of cloth simulation,own_claim
our novel collision detection prunes out unnecessary collision tests by tightly localizing potentially colliding regions through the analysis of the cloth movement in relation to the skeleton,own_claim
our approach,data
we use the pre-simulated sequence to approximate the dynamic behavior of the coarse mesh geometrically wherever possible,own_claim
fine details such as wrinkles are also simulated in a data-driven manner,own_claim
real-time animation of fully dressed human could be generated,own_claim
which would be suitable for applications,own_claim
games where visual plausibility is more important than accuracy,data
Probably the most common technique for simulating the physical properties of clothes is the particle system,background_claim
Simulation process is broken down into calculating the internal forces and solving the system of Partial Differential Equations,background_claim
The latter point has attracted much interest in the field of real-time applications,background_claim
it requires high computation power,data
The explicit Euler method,background_claim
has been one of the first numerical solvers,background_claim
2,data
this method is notorious for its instability,background_claim
using large time steps and stiff equations,data
Several improvements have been proposed to reduce instability,background_claim
the Verlet integration,data
the explicit Euler combined with inverse dynamics,data
11,data
17,data
20,data
the simulation quality is sacrificed in favor of computation speed,background_claim
the approximations employed in these models,data
The implicit Euler method presented by Baraff et al.,background_claim
performs the computation not by using the derivative at the current time,background_claim
the predicted derivative at the next time step,background_claim
2,data
the implicit Euler method offers higher stability,background_claim
explicit Euler integration,background_claim
using large time-steps and clothes with stiff mechanical properties,background_claim
A major drawback of this numerical solver,background_claim
is the computation of a large linear system,background_claim
researchers worked on saving the computation time of the linear system solver,background_claim
Desbrun et al,background_claim
proposed solving the linear system with a precomputed inverse matrix,background_claim
7,data
Kang et al.,background_claim
proposed further optimization with a direct update formula for the positions and velocities of the cloth vertices,background_claim
12,data
these methods are not intended to provide a physically-correct cloth animation,background_claim
the authors,data
Our approach to that problem is a data-driven mass-spring system,own_claim
the simulation is corrected with a set of functions built from the pre-simulated animation,own_claim
Another approach to fast garment deformations is the hybrid approach,own_claim
Cordier et al.,background_claim
proposed to segment the cloth into pieces and simulate these by different algorithms,background_claim
5,data
wrinkle deformation is geometric in nature,background_claim
can be computed with a geometric method,background_claim
Others,data
Wrinkles can be generated either by tessellating the cloth mesh,background_claim
or rendering details on texture using bump mapping,background_claim
12,data
9,data
The main difficulty is defining a fold function,background_claim
can simulate all kinds of wrinkle patterns,background_claim
determining the location and shape of wrinkles is left to CG artists,background_claim
One of our contributions is a geometric wrinkling method,own_claim
is “trained” by using a pre-simulated cloth sequence,own_claim
relying on users,own_claim
Collision detection is usually one of the bottlenecks in real-time animation,background_claim
The problem is particularly acute in the case of clothes,background_claim
these objects are highly deformable,data
Several algorithms have been proposed to process robustly collisions in cloth simulation,background_claim
without reaching real-time performance,background_claim
21,data
22,data
Some other methods exploit graphics hardware to compute collisions on bump maps,background_claim
others use implicit surfaces to check collisions on the body,background_claim
"voxel trees, which partition the space hierarchically",background_claim
20,data
18,data
14,data
Using frame coherency to reduce computation cost has been explored by Zhang et al,background_claim
23,data
we propose a data-driven collision detection method,own_claim
we use the pre-simulated sequence to localize the collision checks to neighboring cloth regions that have high probability to collide,own_claim
The idea of building an interpolator from examples or pre-simulated data has proven to be a valuable tool in a variety of areas of CG,background_claim
modeling a variety of human body shapes,data
motion synthesis,data
The basic idea is to build an interpolation space filled with a set of pairs of input parameters and the targeted graphical objects,background_claim
Cloth animation depends on a high number of parameters,data
a data-driven approach is difficult to adapt,background_claim
James et al.,background_claim
"resented such an approach, where physics-based deformation and collision detection are both handled in a unified framework",background_claim
10,data
previous unseen results could be achieved,background_claim
garments with stiff mechanical properties in real-time,data
they show little degrees of freedom,background_claim
to the clothes under simulation,background_claim
we seek a neat combination of a data-driven approach with the mass-spring system,own_claim
resorting to a data-driven approach for the entire simulation,own_claim
our simulator allows a much higher degree of interaction,own_claim
it is often needed in animating clothes on moving characters,own_claim
The history of research on real-time cloth is relatively recent,background_claim
Researchers have concentrated mainly on two aspects of real-time cloth animation,background_claim
simulating the physical properties of garments and collision handling,background_claim
The primary focus of this paper is the development of a fast cloth simulator for real-time applications,own_claim
Dynamic simulation of complex deformable models,own_claim
can easily involve thousands of degrees of freedom,own_claim
Our simulator is based on two levels of deformation,own_claim
The coarse mesh is generated by simplifying the original cloth mesh through segmentation,own_claim
The reason for this choice is to lower the computation time,own_claim
geometric methods are in general much faster than physically-based ones,own_claim
9,data
the clothes are worn on 3D characters,own_claim
the character movement is the only external force acting upon the cloth,own_claim
there are considerable correlations between the body motion and the movement of the garment,own_claim
observing the behavior of garment worn by a character,data
These correlations are especially clear for some clothes like tight shirts and trousers,own_claim
Collisions are handled by collision hulls,own_claim
the position of which is computed by our SDD,own_claim
The final mesh is then obtained using the winkle shape interpolator and the computed geometry of the coarse mesh,own_claim
The skeleton-driven deformation,own_claim
is,own_claim
the most widely used technique in 3D character animation,own_claim
a classical method for the basic skin deformation,background_claim
The location of a vertex is then calculated by a weighted combination of the transformation of the influencing joints,own_claim
developing a new SDD method is not our main goal,own_claim
the way the skin deforms is important in our framework,own_claim
natural looking cloth shape also requires natural skin shape,data
There are two requirements which the method should fulfill for this particular use,own_claim
it must overcome the undesirable effect of vertex collapse,own_claim
Figure 3(a),data
the method must provide an easy way to compute the local coordinate system for each skin vertex,own_claim
This is necessary,own_claim
we want to compute the deformation of the cloth surface in relation to the skin surface,data
the classical SDD can be greatly improved by replacing the linear combination of the matrices by the matrix operator defined by Alexa,own_claim
1,data
The SDD position of P is simply given by M SDD,own_claim
the operator is not continuous,own_claim
It is not defined for a rotation of 2π radians between the matrices to be blended,own_claim
such case is rare,own_claim
the largest angle range does not exceed π radians,own_claim
In practice,data
The cloth surface is partitioned into a set of patches,own_claim
Figure 4(a),data
(b),data
A coarse mesh representation is obtained by combining a set of vertices in a patch into a single mass point located at the center,own_claim
"the regularity of coarse mesh, which is one condition for obtaining efficient deformation with the mass-spring system",own_claim
21,data
"The objective is to obtain ""well-shaped patches"", patches that have a circular shape",own_claim
"By modifying the significance of this component, we can easily control the number of vertices to be simulated with the physically-based deformation",own_claim
Figure 4,data
the construction of the patch is completed,own_claim
the lowest cost exceeds a threshold,data
Deciding a good granularity in the coarse mesh is hand-tuned,own_claim
a neat compromise between the simulation quality and the computation load is found,own_claim
best simulations are obtained,own_claim
patch area covers one or two cloth wrinkles,data
each patch is associated with a vertex on the coarse mesh,own_claim
The basic idea is to use the pre-simulated results as examples and find the error-minimizing skin data through optimization,own_claim
An optimization approach,own_claim
could be adopted here,own_claim
the one presented by Mohr et al,data
15,data
our SDD method is non-linear,own_claim
the linear regression,own_claim
is not beneficial,own_claim
adopted by Mohr et al,data
In our case,data
Function minimization techniques,own_claim
can deal with non-linear functions,own_claim
Powell’s method,data
16,data
Performance is slightly slower,own_claim
only pre-processing performance is affected and not runtime performance,own_claim
this is contributable to the fact that these regions are large in volume and they rarely collide with limbs during the walk motion,own_claim
The residual values of the fitting provide useful information on how the garments behave in relation to the body,own_claim
floating garments,own_claim
may collide with several joints,own_claim
collisions need to be computed on these regions,own_claim
a skirt,data
cloth patches,data
the local movements of some cloth patches,own_claim
are negligible,own_claim
these patches can be considered as being attached rigidly to the skeleton,own_claim
underwear,data
three regions are identified from the residual values of the skin fitting process,own_claim
Figure 5(d),data
The threshold values are chosen in a way that the coarse mesh deformation remains sufficiently close to the pre-simulated sequence,own_claim
a false assignment of loose region into tight region would produce elongated deformations instead of slipping garment over the skin,data
generate an overly deformed coarse mesh,own_claim
which is beyond the training data of the wrinkle generator,own_claim
values of 0.5 cm and 4.0 cm are used to identify tight regions and floating regions,own_claim
In practice,data
The deformation of tight regions is directly computed with the SDD,own_claim
Figure 6,data
The use of SDD for these regions makes it possible to reduce the number of mass points even further,own_claim
The pseudo code of the simulation loop is: 1 for each vertex P ∈ Coarse_Mesh do 2 M SDD ← SDD P,own_claim
3,own_claim
P ∉ Tight_Region,data
4 X P ← Mass_Spring_system(time_step),own_claim
"5 else 6 X P ← M SDD .X D,Dress //Skeleton Driven Deformation",own_claim
High residual values indicate much less dependency on a specific body region of the cloth movement,own_claim
an additional collision check is required to handle the interaction of the clothes with the whole body skeleton,own_claim
A list of potentially colliding body patches is defined by selecting those that approach within a certain distance of the floating regions during the pre-simulated cloth sequence,own_claim
which the collision detection is made with collision hulls only,own_claim
we compute the coarse mesh by a mass-spring system with the implicit Euler numerical solver,own_claim
2,data
The simulation run on the coarse mesh hardly reproduces the gross movement of the original cloth,own_claim
the initial mesh has been significantly simplified,data
the topology has been modified,data
the simplified mass-spring model does not accurately simulate the bending and shearing properties of the fabrics,own_claim
the simulator used for the pre-simulated cloth sequence,own_claim
21,data
We approach the problem by modifying the behavior of the mass-spring system through a fix-up process (similar to,own_claim
14,data
where the position and velocity of the coarse mesh vertices are modified in order to maintain the cloth shape as close as possible to the original one,own_claim
Figure 7,data
the local shape,own_claim
should be a blend of those of the pre-simulated animation,own_claim
position of the vertices in relation to their neighbors,data
This is achieved by constructing a set of functions of local shape deformation,own_claim
"Post-correction is accomplished with a function that evaluates the ""ideal"" position of the vertex",own_claim
the position of its neighbors connected by the edges,data
The computation cost of this interpolator grows,own_claim
the number of pre-simulated frames increases,data
A common solution is to construct a lookup table filled with values pre-simulated,background_claim
"the dimension of XN,Pre-simulated was reduced prior to the construction of the interpolator, by Principal Component Analysis",own_claim
16,data
Its new value is set to the sum of the original velocity and the velocity,own_claim
the modification of the vertex position,data
Figure 9,data
The smallest convex hull,own_claim
is generated for every patch using the “Quickhull” algorithm presented by Barber et al,own_claim
3,data
we expect these hulls to cover the allowable positions of corresponding cloth patches during the runtime simulation,own_claim
enough variation and range of character motion,data
the overall computation can be significantly reduced in comparison to classical collision detection methods,own_claim
the collision hulls are generated for loose and floating garment regions only,own_claim
The collision hulls of tight regions are small enough to be approximated by a single point,own_claim
the Gilbert-Johnson-Keerthi algorithm,own_claim
8,data
is ideally suited to this task,own_claim
We used constrained dynamics,own_claim
to handle the collision response,own_claim
22,data
the main challenge here is obtaining the highest possible realism,own_claim
As recognized in earlier works,own_claim
wrinkles can be efficiently animated with a geometric method,own_claim
9,data
13,data
they are geometric in nature,background_claim
"our wrinkling function is not hand-drawn, nor geometrically approximated",own_claim
previous methods,own_claim
trained from on the analysis of the pre-simulated sequence,own_claim
This makes our wrinkle parameterization invariant of all joints of higher hierarchy than the currently influencing joint,own_claim
we choose to represent the wrinkle displacement in the local coordinate system used for SDD,data
Several techniques exist for shape interpolation using examples,own_claim
Radial Basis Functions,data
parametric interpolation,data
coefficients are defined by multi-linear regression on the pre-simulated animation,own_claim
it provides satisfactory results at a very low computation cost,data
Objects cannot be created from editing field codes,own_claim
"The values α, α P and α N are the interpolation coefficients",own_claim
X P and X N are respectively the position of the vertex x and its neighbors,own_claim
linear interpolation works fairly well,own_claim
its simplicity,own_claim
a sufficient number of pre-simulated frames for the multi-linear regression,data
A condition of a good working interpolator is that the input,own_claim
should be within the range of the pre-simulated data,own_claim
position of the coarse mesh vertices,data
the wrinkle interpolator can only work for the input range for which it has been trained,own_claim
Pre-simulated sequences obtained by the cloth simulator of Volino et al,own_claim
were used in our preprocessing,own_claim
21,data
The “cocktail” dress,own_claim
is a relatively complex model,own_claim
Figure 18,data
The “Jeans” outfit is a good example of a model where the SDD based geometric approximation can reduce the number of mass points substantially by simulating only a few regions,own_claim
contribute significantly to the dynamic behavior,own_claim
Our simulator behaves fairly well on a wide variety of clothes,own_claim
those with highly stiff mechanical properties,data
the method may introduce flaws in simulation for some tight clothes,own_claim
the approximate handling of collision detection,data
the skin surface may slightly intersect the cloth surface,own_claim
For some body movements,data
the same problem may arise for self-collisions on clothes,own_claim
The deletion of the skin triangles covered by the garment surface can partially correct this drawback,own_claim
Note that the cloth simulation is also restricted to clothes worn on bodies,own_claim
the cloth simulator cannot handle some cloth movements,own_claim
offering high computation speed,own_claim
those appearing during dressing or undressing,data
the clothes are unable to interact with objects other than those that have been taken into consideration during the pre-processing phase,own_claim
The list of objects that can potentially interact with clothes and the way these objects interact are defined at the preprocessing stage and cannot be changed during the realtime simulation,own_claim
the duration of the pre- simulated sequence is not a factor of the runtime computation speed,own_claim
the performance lowers down at a low rate,own_claim
which tends to be governed by the number of pre-simulated frames,own_claim
the complexity of the collision hulls increases,data
Section 5.3,data
the quality of the simulation depends on the number and variety of examples,own_claim
in our case,data
the pre-simulated sequence,own_claim
the importance of the variability of the body motion in the pre-simulated sequence,own_claim
Figure 16,data
The best quality is achieved when the range of the body motion in the presimulated sequence is approximately 30 % larger than the one used in the real-time simulation,own_claim
Our simulator works well for interpolation,own_claim
often fails for extrapolation,own_claim
joint angles within the range of those of the pre-simulated sequence,data
The main reason for this limitation is collision detection,own_claim
which does not allow the clothes to have different locations on the body from those calculated in the pre-simulated sequence,data
this makes the clothes being attached rigidly to the skeleton,own_claim
the real-time simulation loses its quality,own_claim
With less than 70 pre-simulated frames,data
The recent advent of cloth simulation techniques has matured enough to produce highly realistic cloth movements on animated characters,background_claim
real-time simulation has been largely unexplored until now,background_claim
This paper presents the first report of a practical,own_claim
efficient method for handling real-time simulation almost automatically,own_claim
our cloth simulator is able to construct a model for real-time animation without user intervention,own_claim
can deal with different types of clothes from tight to floating with low computation consumption,own_claim
the approach could be extended to simulating other physics-based models,own_claim
hair,data
fluid,data
We also believe that the work on collision hulls is promising,own_claim
The current mesh model of collision hulls could be replaced by implicit surfaces or voxel maps,own_claim
for a cloth vertex,data
it could be possible to compute several collisions hulls in relation to different objects in the scene,own_claim
to compute their intersection,own_claim
for real-time collision detection,data
it may be possible to process collisions on a higher number of objects,own_claim
maintaining low computation cost,data
the precision of the collision detection could be improved by replacing the convex shape by a surface to follows more closely the trajectories of the vertices,own_claim
Wrinkles add life to garments in fashion,background_claim
the number of triangles required can be easily upto a hundred thousand,background_claim
"In order to capture realistic wrinkles on a real-life garment, from a mere geometric point of view",data
"Such a large number of triangles put cloth simulation off from interactive speeds, even with adaptive time steps, introduced recently",background_claim
1,data
the large triangle count increases the rendering time and the cost significantly,background_claim
one can increase fineness of triangles only in the potential regions where wrinkling might occur,background_claim
This is very well possible,background_claim
advances in the triangulation and interactive systems developed,data
2,data
7,data
8,data
13,data
a significant problem remains,background_claim
Cloth has very large in-plane deformation stiffnesses compared to its ability to bend and shear,background_claim
This gives rise to very stiff equations of motion,background_claim
The problem of solving stiff equations is successfully dealt with by the use of an implicit method for numerical integration by Baraff et al,background_claim
1,data
it has been the strong motivation for the authors behind developing the methodology specifically for wrinkles,background_claim
it is not guaranteed that the wrinkles will be satisfactory,background_claim
Accurate and fast collision detection methods,background_claim
constraint methods,background_claim
good deformable models,background_claim
have proved to give quality cloth animation,background_claim
12,data
5,data
6,data
6,data
9,data
10,data
real-life wrinkling is a complex phenomenon,background_claim
It is characterized by frictional forces,background_claim
which are difficult to model,background_claim
between body and cloth,data
Collision response methods and friction models,background_claim
have been rather simple for such a complex problem and robust numerics too,background_claim
it is difficult to physically simulate real life wrinkles,background_claim
The key theme is conservation of cloth area,background_claim
The work is continuation of earlier work,background_claim
11,data
Other attempts to model wrinkles include those by Gotoda et al,background_claim
and Wu et al,background_claim
3,data
4,data
14,data
the geometry of coarse mesh would be unable to capture fine wrinkles on cloth,own_claim
Figure 2,data
Real cloth has very little in-plane deformation,own_claim
most of the deformations come from buckling,own_claim
setting high metric,own_claim
stiffnesses will not work properly,own_claim
For the coarse mesh,data
Real cloth would wrinkle to this deformation,own_claim
Figure 3A,data
the compression forces will buckle the edge,own_claim
the buckled edge exerts small forces on the vertices,own_claim
the bending stiffness of the cloth is small,own_claim
the buckled edge is approximated by a straight line between the vertices,own_claim
the real life buckling is attributed to the compression of the edge,own_claim
in the coarse mesh situation,data
the corresponding forces on the vertices will be high,own_claim
a high metric stiffness associated to this compression,data
This is in contrast with real cloth situation,own_claim
"to animate the cloth realistically with a coarse mesh, we need to set small metric stiffnesses",own_claim
This allows otherwise possible wrinkling/buckling,own_claim
which is embedded in the deformation of triangle,own_claim
Very little in-plane deformations can be looked at as area conservation property of cloth,own_claim
the wrinkle pattern is given by the user,own_claim
there is a change in the area of a triangle,own_claim
it is invariant after applying the modulated displacement map,own_claim
The method is inspired by the area conservation property,background_claim
the empiricism introduced later does not actually conserve the area,own_claim
Section 3.3,data
This mesh may represent a garment or another deformable model,own_claim
The wrinkle pattern is bump or displacement mapped onto the initial mesh by the user,own_claim
would be the physical model with a numerical solver,own_claim
"The initial mesh serves as an input to a simulation engine, which",own_claim
in the context of cloth simulation,data
the wrinkling coefficients need not to be recalculated during the animation,own_claim
"They depend only on the initial wrinkle pattern, the initial mesh and the mapping coordinates",own_claim
The deformation of the triangle can be described by a general 4D homogeneous coordinate transformation,own_claim
the rotational and translational parts of the transformation are irrelevant to the derivation of the algorithm,own_claim
which is defined by choosing any edge of the triangle as the x axis,own_claim
We introduce a local rectangular right handed two dimensional coordinate system,own_claim
Figure 5,data
They are related by the deformation transformation,own_claim
"y x user defined wrinkle pattern initial mesh 1 wrinkling coefficient for each triangle C 1 , C 2 , C 3 , C 4 deformable models",own_claim
cloth simulation y' 2 ' x' modulation,data
factor for each triangle (h) deformed mesh modulated wrinkle pattern bump mapping final mesh with animated wrinkles,data
"The wrinkle function f (x , y ) on the triangle is related to f (x, y) by",own_claim
"2 f (x , y ) : ∈ R → R = f T 1 −1 (x , y ), T 2 −1 (x , y ) ¡",own_claim
this is a purely geometric requirement,own_claim
this parameterized surface area is given by,own_claim
"A( , f (x, y)) = A ( , f (x , y ))",own_claim
The algorithm is computationally inexpensive during animation,own_claim
"the only quantities that have to be determined for each triangle are the elements a , b , d of the inverse deformation matrix and the resulting modulation factor by using the formula given",data
"The wrinkling coefficients on the other hand, are computationally expensive",own_claim
they depend only on quantities that are known prior to entering the animation loop,own_claim
can therefore be calculated once at the beginning,own_claim
it is clear that we have presented a solution within the approximation of small deformations,own_claim
From a mathematical point of view,data
There are several possibilities to deal with this restriction,own_claim
we propose a pragmatic approach,own_claim
One could decide to restrict the simulations to small deformations where the approximation is valid and/or take into account the higher order terms in the series expansion to extend the range of validity of the approximation,own_claim
equation 5 describes the overall wrinkling behavior only,own_claim
This frees us conceptually from the “burden of mathematical correctness”,own_claim
the deformations during cloth simulation are moderate in general,own_claim
higher order terms in the expansion may become significant,own_claim
not predominant,own_claim
The modulation factor h is a function of the deformation of triangle,own_claim
has value around one,own_claim
h will be greater than one,own_claim
the triangle is net compressed,data
it will be less than one,own_claim
For the elongation,data
"One can scale, translate and clip it to introduce a finer control required for the animation",own_claim
this transformation of the modulation factor no longer satisfies the area conservation property,own_claim
"a modulation map, which further violates area conservation",own_claim
Section 4,data
Another very important property of our algorithm is that it is local,own_claim
wrinkling effects caused by deformations are confined to the deformed areas,own_claim
This is crucial to obtain realistic wrinkling,own_claim
"a garment wrinkles around the shoulder of an animated character as she lifts her arm, while it is stretched on the corresponding side",data
Wrinkling coefficients are sensitive to the wrinkle function and therefore to the wrinkle patterns,own_claim
Wrinkling coefficients for two different patterns on the same triangle will generally differ,own_claim
the same deformation applied to a triangle will yield two different modulation factors,own_claim
the wrinkling patterns are orthogonal to each other,own_claim
a deformation in the orthogonal direction of one pattern will result in a smaller modulation factor as compared to a modulation factor for the other pattern,own_claim
the direction of the deformation “favors one pattern over the other”,own_claim
This property can be used for developing multi-fold wrinkling techniques,own_claim
The numerical computation of the formulation is trivial,own_claim
they differ in implementation,own_claim
referred to as the same entity,own_claim
The wrinkle pattern is gray scale texture image defining the bump map,own_claim
The normalization factor is important,own_claim
the formulation assumes real distances for the bump map,data
The factor should be some fraction of the overall dimensions of the average triangle of the mesh,own_claim
The wrinkle function is a continuous real valued function,own_claim
which is a spline approximation of the normalized texture,own_claim
next item,data
the wrinkling pattern needs to be smooth,own_claim
For the reasonable numerical accuracy and stability,data
solution to equation 4 exists,own_claim
the input pattern is not constant,data
Appendix A,data
one needs to watch for the invalidity of the solution,own_claim
the pattern is user defined,data
eliminates it,own_claim
The modulation factor varies significantly across triangles,own_claim
the modulation factors are linearly interpolated across triangles to give smooth Modulation Map,own_claim
Figure 6,data
The final bump/displacement map is the product of the modulation map and the wrinkling pattern,own_claim
Animating a single wrinkle pattern is not satisfactory,own_claim
for cloth,data
In real-life,data
the wrinkles are not mere modulations of a fixed wrinkle pattern,own_claim
the pattern changes according to the deformation,own_claim
two different wrinkle patterns give different wrinkling coefficients for the same triangle geometry,own_claim
Section 3.3,data
the modulation factors will be different,own_claim
for the same deformation of the triangle,data
It all depends on how the wrinkle pattern is oriented with respect to the deformation direction,own_claim
corresponding modulation factor will be small,own_claim
a pattern is orthogonal to the deformation direction,own_claim
the direction of the deformation favors one pattern over the other,own_claim
the methodology is developed for multiple patterns,own_claim
The wrinkle patterns chosen are orthogonal to each other,own_claim
Figure 8,data
it may compute different values for the modulation factor for each of the wrinkle patterns,own_claim
Figure 8,data
the marked triangle undergoes a series of deformations,data
Figure 7,data
both the modulation factors are 1,own_claim
For Stages 1 &amp,data
cloth is undeformed,own_claim
"the modulation factors differ significantly, depending upon the direction of the deformation",own_claim
for Stages 2 &amp,data
the corresponding wrinkle pattern is well oriented towards the direction of the deformation,own_claim
The relatively small modulation factor,data
will give a change of one pattern to the other,own_claim
This selective application of the wrinkle pattern,own_claim
the deformation direction changes,data
in the animation a sudden switch of the pattern is not temporally coherent,own_claim
is visually quite disturbing,own_claim
there is a sudden switch in the pattern,own_claim
the modulation factors cross the dotted line,data
"a user definable variance around the mean value of the wrinkling coefficients, which defines a transition zone",own_claim
There will be a smooth transition between wrinkling patterns in this zone,own_claim
This is in fact a simple power function with an appropriate scaling and clipping,own_claim
M F 1 will be smaller than (1 − variance)(M F 1 + M F 2 )/2,own_claim
M F 2 will be bigger than (1 + variance)(M F 1 + M F 2 )/2,own_claim
M F 1 is much smaller than M F 2,own_claim
Figure 7,data
"This gives maximum weight (W 1 = 1,W 2 = 0) to pattern 1",own_claim
M F 1 and M F 2 are comparable,data
the two patterns will be blended smoothly,own_claim
In the transition zone,data
The user definable power n is representative of the tightness of the transitio,own_claim
n = ∞ is a sudden switch of pattern,own_claim
Figure 7,data
the Geometric Wrinkle formulation is developed keeping in mind a general deformable model,own_claim
it is worthwhile to study the strain patterns in the garment,own_claim
the user can design the wrinkles according to her wish,own_claim
inappropriately placed wrinkles in the region,own_claim
will not animate satisfactorily,own_claim
where there is no deformation,data
the pattern should be orthogonal to the deformations in general,own_claim
section 4.1,data
Figure 13 is a strain pattern for the second frame,own_claim
Figure 12,data
Dark triangles are triangles with compression and depict the regions,own_claim
where wrinkles might appear,own_claim
Each pattern represents a distinct direction of deformation,own_claim
they are considerably orthogonal,own_claim
The frames on the left side correspond to the animation without Geometric Wrinkles,own_claim
there are very few wrinkles in the second figure,own_claim
there is very little deformation of the mesh,own_claim
the calculations of the wrinkling coefficients are done on a per triangle basis,data
the computational time is linear with respect to number of triangles,own_claim
it takes 5 minutes per thousand triangles on a MIPS R10000 200 MHz processor,background_claim
the time spent on modulating wrinkle pattern is negligible compared to rendering time,own_claim
the wrinkling coefficients are computed,data
for small meshes,own_claim
the modulation of wrinkle pattern can be real time,own_claim
We have developed a fast and versatile method for animating realistic wrinkles,own_claim
which is geometric in nature,own_claim
it can be applied to general deformable models,own_claim
cloth,data
"creating wrinkle patterns from the strain pattern, which is currently a time consuming task",own_claim
yields pleasing results,background_claim
Previous work,background_claim
Scholz et al. 2005,data
We capture the motion of cloth using multiple video cameras and specially tailored garments,background_claim
Over the course of roughly half a dozen papers on cloth capture a prevailing strategy has emerged,background_claim
Little work has been done to capture garments with folds and scenes with occlusion,background_claim
"Folds and occlusion are common, especially when dealing with real garments",background_claim
pants,data
Both phenomena are symptoms of the same problem: views of the surface are blocked by other parts of the surface,background_claim
there is a distinction in scale and different methods are required to solve each problem,background_claim
contiguous visible regions are often small and oddly shaped,background_claim
a surface is heavily folded,data
In these regions correspondence is essential for detailed reconstruction,background_claim
can be challenging to identify,background_claim
We solve the correspondence problem both by improving the pattern printed on the surface of the cloth and by improving the method used to match regions,own_claim
Our method gets more information per pixel than previous methods by drawing from the full colorspace instead of a small finite set of colors in the printed pattern,own_claim
we use strain constraints to eliminate candidates in an iterative search for correspondence,own_claim
cloth cannot stretch much before ripping,data
these two modifications eliminate the need for neighborhood information in the final iteration of our algorithm,own_claim
we determine correspondence using regions that are 25 times smaller than in previous work,own_claim
figure 6,data
Many regions on the surface are impossible to observe due to occlusion,background_claim
MeshIK,background_claim
is appropriate for filling holes in cloth,background_claim
Sumner et al. 2005,data
MeshIK is well-suited to cloth data,background_claim
We suggest two tools to evaluate marker-based capture systems,own_claim
Efficiency is important,own_claim
camera resolution and bandwidth are expensive,data
"By doing simple bit calculations, we direct our design efforts more appropriately",own_claim
Previous work in cloth motion capture has focused on placing high density markers in correspondence between multiple views,background_claim
The primary challenge is to increase marker density while correctly assigning correspondence between markers,background_claim
We suggest markers per megapixel as an appropriate metric for comparison,own_claim
figure 3,data
it measures the method instead of the equipment,own_claim
Most high density full frame-rate capture has focused on cloth,background_claim
there has been some recent work enhancing human motion capture,background_claim
Park and Hodgins 2006,data
These methods have far fewer markers,background_claim
they affix individual markers,data
These markers can be broken into three categories,background_claim
complex surface gradients,background_claim
Pritchard and Heidrich 2003,data
Scholz and Magnor 2004,data
Hasler et al. 2006,data
intersecting lines,background_claim
Tanie et al. 2005,data
regions of constant color,background_claim
Guskov and Zhukov 2002,data
Guskov et al. 2003,data
Scholz et al. 2005,data
The most common errors are marker mismatches,own_claim
Our work falls in the third category: regions of contant color,own_claim
are observable in reconstructions by local strain in the reconstructed surface,own_claim
constant color markers perform the best,own_claim
used cloth with unique line drawings as markers,background_claim
Pritchard and Heidrich 2003,data
Their work identifies parameterization as one of the key aspects of cloth capture,background_claim
require significant pruning,background_claim
These descriptors are often mismatched,background_claim
their static reconstructions show numerous correspondence errors,background_claim
successful,background_claim
The real-time system,background_claim
introduces markers of constant color,background_claim
Guskov et al. 2003,data
resulting in significantly fewer correspondence errors,background_claim
the complexity of the color pattern limits the method to simple geometry,background_claim
Scholz et al. 2005,data
improve upon [Guskov et al. 2003] by creating a non-repeating grid of color markers,background_claim
This allows substantially larger sections of cloth,background_claim
virtually eliminates correspondence errors,background_claim
the range of motion is limited to avoid occlusion,background_claim
arms are always held at 90 degrees to the torso,data
introduce a combined strain reduction/bundle adjustment that improves the quality of the reconstruction by minimizing strain while reconstructing the 3D location of the points on the surface of the cloth,background_claim
White et al. 2005,data
introduce the use of silhoutte cues to improve reconstruction of difficult to observe regions,background_claim
White et al. 2006,data
silhouette cues improve reconstruction,background_claim
hole filling is,background_claim
more effective in many circumstances,background_claim
it enforces an appropriate prior on the shape of the cloth,background_claim
we improve the color pattern and matching procedure to get more information per marker,own_claim
we introduce strain constraints to simplify correspondence,own_claim
we create a data driven hole filling technique that splices previously captured cloth into the mesh,own_claim
our system is capable of capturing a full range of motion with folding and occlusion,own_claim
we cannot increase camera resolution without bound,own_claim
camera bandwidth becomes very expensive,data
Our goal is high marker density in the 3D reconstruction – especially in regions with high curvature,own_claim
we need markers that are both small in scale and highly discriminative,own_claim
small markers are less discriminative,data
These two goals are in tension,own_claim
we opt for the smallest markers that we can reliably detect,own_claim
we make small markers more distinctive,own_claim
Marker color and strain constraints are more useful than neighboring markers,own_claim
they place fewer requirements on local cloth geometry,own_claim
neighboring markers are observed only when the cloth is relatively flat,own_claim
we adopt the following strategy: maximize information obtained from marker color and eliminate the information needed from neighbors,own_claim
we can accurately minimize the number of neighbors required for correspondence and observe folds better,own_claim
We can compare our work to previous methods using this framework,own_claim
figure 6,data
we can compute the information needed to meet this threshold by adding information from the different cues,own_claim
independent information adds linearly,background_claim
structural ambiguities in the pattern subtract information lost to determine which neighbor is which,own_claim
we compute our information budget (I ) as:           N = number of observed neighbors C = color information per marker A = information lost to structural ambiguities S = information gained from strain constraints I = (N + 1) ∗C + S − A,own_claim
it takes two bits to specify which neighbor we found,own_claim
This neighbor is one of four possible neighbors,own_claim
A = 2,own_claim
the equation reduces to I = 2 ∗C − 2 + S,own_claim
this case,data
we can detect regions by increasing N until I &gt; log 2 (M) bits,own_claim
Given almost any structured pattern,data
larger marker regions have the disadvantage that curvature can cause local occlusions and prevent observation of the entire region,own_claim
Our best efforts are to improve C,own_claim
our pattern is composed of tesselated triangles,own_claim
figure 5,data
any shape that tiles the plane will work,own_claim
loss is largely attributable to camera response,own_claim
larger markers produced substantially more information,data
"To maximize the density of reconstructed points, we print the smallest markers that we can reliably detect",own_claim
"To maximize the information contained in the color of each marker, we print colors that span the gamut of the printer-camera response, then use a gaussian color model",own_claim
section 4.1,data
the printer-camera response is a sequence of lossy steps,own_claim
we generate a color image on a computer,data
send the image to the printer,data
pose the cloth,data
capture it with a camera,data
Illumination is also problematic,own_claim
takes two forms,own_claim
direct illumination on a lambertian surface,data
indirect illumination,data
These comparisons must be made in the proper color space,own_claim
we photograph the surface of the printed cloth with our video cameras to minimize the effect of non-linearities in the printing process,own_claim
we detect markers by comparing colors to a known color,own_claim
The goal of our acquisition pipeline is to compute correspondence using minimal neighborhoods,own_claim
We accomplish this through an iterative algorithm where we alternate between computing correspondence and pruning bad matches based on those correspondences,own_claim
This iterative approach allows us to match without neighborhoods,own_claim
This is better than label propagation methods,own_claim
markers are matched using color and strain alone,data
We are able to obtain significantly more information per unit cloth surface area than previous work,own_claim
section 3.1,data
appendix B,data
propagation methods,background_claim
require large sections of unoccluded cloth and must stop at occluding contours,background_claim
and Liu 2006,data
Lin,data
Guskov et al. 2003,data
Scholz et al. 2005,data
occluding contours are both common and difficult to detect,own_claim
figure 5,data
our iterative approach relies on strain constraints,own_claim
Both of these computations are easier than detecting occluding contours,own_claim
we can set N = 3 at the start and continue until N = 0,own_claim
analysis in figure 6,data
there are few mistakes,own_claim
the identity of the marker is overspecified,own_claim
This approach works from flat regions in the first iteration to foldy regions in the later iterations,own_claim
no neighbors are necessary,own_claim
the last iteration,data
these regions are not going to match,own_claim
no longer disrupt the matching procedure,own_claim
Occluding contours,own_claim
Our strain constraint is based on the work of,own_claim
Provot 1995,data
strain in cloth does not exceed 20% in practice,background_claim
we can use strain to exclude possible correspondences,own_claim
Relaxing the constraint to distances in 3D,own_claim
Strain naturally fits in to our information theory framework,own_claim
strain excludes 87.5% of the possible correspondences,data
strain has added 3 bits,own_claim
log 2 (1 − 0.875) = −3,data
figure 7,data
we match each image marker to a marker in the parametric domain,own_claim
Each affinity is a product over different cues,own_claim
we learned this threshold from labelled data,own_claim
changing it by several orders of magnitude had little effect on our results,own_claim
occlusion inevitably creates holes in the reconstructed mesh,own_claim
figure 8,data
One would like to fill these holes with real cloth,background_claim
One of our major contributions is a data driven approach to hole filling,own_claim
we fill holes with previously observed sections of cloth,own_claim
our hole filling procedure does not assume a skeleton that drives the surface,own_claim
our procedure estimates a single coefficient per example,own_claim
Our work differs from,own_claim
Anguelov et al. 2005,data
This hole filling procedure has a number of requirements,own_claim
the missing section needs to be replaced by a section with the same topology,own_claim
the new section needs to obey a number of point constraints around the edge of the hole,own_claim
the splicing method should respect properties of cloth,own_claim
This procedure has a number of advantages,own_claim
deformation gradients naturally yield cloth like properties,background_claim
methods based on the Laplacian of the mesh,background_claim
do little to penalize these strains and can show many artifacts around the edge of the mesh,background_claim
Sorkine et al. 2004,data
"By penalizing elements that deviate in this matrix, we have a fairly direct penalty on large changes in scale or strain",own_claim
"deformation gradients can be converted into vertex locations by inverting a linear system, allowing us to specify vertex locations as constraints",own_claim
don’t allow vertex constraints,background_claim
Methods,background_claim
Lipman et al. 2005,data
MeshIK works by choosing a combination of deformation gradients from the examples and then solving for the missing point location,background_claim
Sumner et al. 2005,data
The most restrictive aspect of MeshIK is that it requires example meshes without holes,background_claim
we never observe complete ex- ample meshes,background_claim
each mesh is missing some triangles,data
we create complete meshes in an iterative method,own_claim
works poorly,own_claim
this gets the job done,own_claim
The advantage of this apporach is that the example poses are chosen to capture the relevant degrees of freedom,own_claim
yielding better results,own_claim
we chose the simpler approach,own_claim
the cloth toss sequence,data
iteratively refine the entire sequence,data
We introduce flexibility preserving smoothing,own_claim
a method similar to anisotropic diffusion,own_claim
Perona and Malik 1990,data
Typical temporal smoothing is dangerous,own_claim
fast non-rigid movements can easily become physically implausible when blurred over time,background_claim
small temporal errors are often difficult to notice,own_claim
fast non-rigid regions of the cloth are complex,data
small errors in regions of the cloth that move rigidly are typically easy to observe,own_claim
we use flexibility preserving smoothing,own_claim
Large variations in location indicate non-rigid movement and consequently receive little smoothing,own_claim
Smaller variations indicates rigid movement and benefit from more substantial smoothing,own_claim
a procedure that smoothes rigid movement more heavily than non-rigid movement,own_claim
We use the automated calibration technique,own_claim
any standard calibration will work,own_claim
White and Forsyth 2005,data
Zhang 2002,data
Bouguet 2005,data
are good choices,background_claim
Adequate lighting is critical,own_claim
fewer lights degrade performance,own_claim
our experience,data
harsh shadows,data
dim lighting causes motion blur,own_claim
slower shutter speeds,data
acquisition takes roughly 6 minutes and mesh processing 2 minutes per frame,own_claim
a P4 2.4 GHz machine,data
"Our capture results are best evaluated by looking at our video and figures 1,12,13",own_claim
it is also necessary to evaluate on several numerical criteria for each capture session,own_claim
The sleeve example is unique,own_claim
to compare against other capture techniques,data
it was one of the first items we captured,data
Much of the cloth is in contact with the floor and unobservable,own_claim
yielding fewer bits of strain,own_claim
reducing the number of color bits,own_claim
the camera images were not output in a linear color space,own_claim
we terminated the correspondence algorithm at N = 2,own_claim
Our pants animation is by far the most challenging,own_claim
markers must be observed multiple times,own_claim
some markers are observed but not reconstructed,own_claim
many pixels are not considered part of a marker,own_claim
they lie in heavy shadow                                              or occupy the edge between two markers,own_claim
errors or missing correspondence,data
approx 44% of 3D markers are observed in 3 or more views,data
There are several reasons for the discrepancy,own_claim
there were 979 3D markers per megapixel,own_claim
we get 3500 3D markers per foreground megapixel or 282 foreground pixels per recovered 3D marker,own_claim
Our marker observations average 56 pixels per marker per image,own_claim
we factor out the pixels lost to background,data
This approach covers a reasonably large range of motion,own_claim
ignores cloth dynamics,own_claim
in combination with MeshIK to skin skeletal human motion capture data,own_claim
We use a small set of captured frames,own_claim
figure 11,data
The largest challenge is that captured cloth meshes contain only points on the cloth surface,own_claim
we do not know joint locations,own_claim
we insert proxy points for knee and hip joints in each of our basis meshes,own_claim
"Using our MATLAB implementation of MeshIK, this process takes around 5-10 seconds per frame",own_claim
each basis pose must be an extreme configuratio,own_claim
for a small basis to adequately express a full range of motion,data
a small bend,own_claim
is sufficient to extrapolate to a larger bend,own_claim
Sumner et al. 2005,data
simple objects such as a cylinder,data
for pants the relationship is more complex,own_claim
the fact that no folding occurs in a small bend does not imply that folding will be absent in a larger bend,own_claim
we do not expect extreme folds in a corresponding larger bend,own_claim
a decent amount of folding occurs in a small bend,data
MeshIK is most useful when a basis is carefully chosen to prevent extrapolation artifacts,own_claim
One drawback to our approach is the loss of secondary kinematic motion,own_claim
the sway of loose cloth,data
the resulting animation appears damped,own_claim
MeshIK does not use velocity information,data
We have brought cloth capture from constrained laboratory examples to real settings by providing robust methods for dealing with occlusion and folding,own_claim
this tool requires significant engineering effort,own_claim
Like human motion capture,data
Camera setup and calibration are time consuming,own_claim
the equipment is costly,own_claim
"once these obstacles have been overcome, capturing large amounts of data is relatively easy",own_claim
we are releasing our capture data,own_claim
http://www.ryanmwhite.com/data,data
we show some of the uses of this data,own_claim
our video,data
editing using [Kircher and Garland 2006],data
posing using  [Sumner et al. 2005],data
"Future work in cloth capture should involve more cameras, higher resolution",own_claim
different garments and different materials,own_claim
We plan to pursue more tools to edit and repurpose captured data,own_claim
Simulation and image based rendering both provide methods to generate animation of cloth,background_claim
These methods have several advantages,background_claim
House and Breen 2000,data
Terzopoulos et al. 1987,data
Choi and Ko 2002,data
Bridson et al. 2003,data
Baraff et al. 2003,data
Bradley et al. 2005,data
White and Forsyth 2006,data
Lin and Liu 2006,data
Scholz and Magnor 2006,data
simulation gives significant user control and produces higher resolution meshes,background_claim
image based rendering techniques produce more accurate illumination,background_claim
capturing large amounts of data is far easier than simulating large amounts of data,own_claim
provides more control than image based rendering,own_claim
"Common simulation complaints include long computation times, significant parameter tweaking and tangling",background_claim
capture is relatively quick,own_claim
our code is 8 minutes per frame in MATLAB,data
Cloth capture makes it easy to capture large amounts of cloth,own_claim
parameters are set by selecting the type of cloth,own_claim
tangling is relatively uncommon,own_claim
Bhat et al. 2003,data
An added attraction of cloth capture is that complex interaction between the cloth and the body is recorded without complicated human models,own_claim
Collision handling in Computer Graphics has two phases,background_claim
One is to detect collisions and the other is to resolve collisions,background_claim
"In cloth collision detection, the computation time to detect collisions is not negligible",background_claim
the number of geometrical entities,background_claim
the collision detection algorithm has to handle is considerable,background_claim
"over 10,000 particles for regular attire",data
several approaches have tried to expedite the collision detection processes,background_claim
16,data
3,data
"Cloth resolution methods so far have found non-penetrating positions, velocities and accelerations of cloth surface particles",background_claim
14,data
3,data
15,data
This scheme works fine for cloth-rigid collisions and for the special case of cloth-cloth collisions where the dynamic interactions between cloth surfaces in cloth-cloth collisions do not have to be noticeable,background_claim
Volino et. al.,background_claim
applied the conjugate gradient method to find the actual particles’ positions where a group of particles are colliding into each other,background_claim
15,data
"By preserving barycentric relationships of collision entities, their method resolves collisions where numerous cloth surfaces are colliding together as a group, which is a novel way to resolve multiple collisions at once",background_claim
it does not conserve the momentum of cloth surfaces in cloth-cloth collisions,background_claim
Another method for cloth-cloth collisions has been proposed by Provot,background_claim
12,data
which resolves collisions by giving an average velocity to all the particles of collisions,background_claim
Provot’s method is easy to implement,background_claim
it cannot give proper visual effect of collisions,background_claim
we cannot get dynamic interactions between particles once the particles collide into each other,background_claim
Cloth-cloth collision resolution is a special case of deformable N-body collision resolution,background_claim
"To solve deformable N-body collision resolutions, we propose a new collision resolution method which gives a visually reasonable response by ensuring the conservation of N-body momentums",own_claim
Our cloth system is particle-based,own_claim
many systems are in other cloth research groups,background_claim
14,data
6,data
12,data
3,data
The system of equalities is based on the scheme adapted from the simultaneous resolution method for rigid N-body collisions proposed by Baraff,background_claim
1,data
"his original inequality relationships between relative velocities before and after collisions are purely heuristic, which may not be physically correct",background_claim
this physical inaccuracy has been an inherent problem of simultaneous collision resolutions,background_claim
it appears to give graphically agreeable results,background_claim
"with the help of the law of N-body momentum conservation, we found the results of our resolutions are visually acceptable",own_claim
"Any collision happening within an integration time step always can be detected by this swept volume method, unless the motions of faces are highly rotational",background_claim
An interesting case is where the faces are not actually intersecting but two swept volumes report a intersection anyway,background_claim
this case is not an actual collision,background_claim
it happens only when two faces are very close,background_claim
we resort to the collision report of this case,own_claim
we consider this case as a violation of the proximity law,own_claim
We use classical edge-polygon detection algorithms to detect collisions among swept volumes,own_claim
We use this swept volume approach for cloth and the dynamic rigid body alike,own_claim
for the non-moving rigid body only the surface faces are used for collision detection,own_claim
we add proximity regions to the normal directions of faces of a swept volume to add proximity violation regions,own_claim
detected collisions are reported as pairs of face-face,own_claim
we cannot respond to each collision individually,own_claim
these individual responses may introduce another new collision,own_claim
one face may possibly be related to several other collisions,own_claim
we save all detected collisions in a data structure,own_claim
12,data
during the collision detection phase,own_claim
All stored detected collisions will be resolved comprehensively by the rule described in the next section,own_claim
Originally a zone of impact,background_claim
is an area where multiple self-collisions occu,background_claim
12,data
We extend Provot’s definition of an IZ to an area where collisions happen,own_claim
a face-face collision is detected,data
the entities of each colliding face,own_claim
"are inserted into a CC, where the CC can be encountered by traversing from the particles in using only edges in",own_claim
there is no such CC,data
becomes a CC,own_claim
two or more such CCs are found,data
these CCs are merged into one CC connected by,own_claim
A widely used method for detecting cloth collisions is to put small repellent proximity forces between the cloth surface and the rigid or cloth surface,background_claim
4,data
14,data
3,data
while the actual collisions are tested with pairs of particle-face or face-face of the current positions,background_claim
objects are moving fast,data
these preventive proximity forces cannot prevent collisions,background_claim
a particle can pass through the proximity violation region during one integration time step,background_claim
This problem can be negligible,background_claim
the integration time step is very small,data
we rarely have those pass-through cases,own_claim
implicit integration methods,background_claim
have been used,background_claim
for,background_claim
cloth,background_claim
simulations,background_claim
3,data
5,data
7,data
the,background_claim
time step,background_claim
has,background_claim
become,background_claim
larger,background_claim
this penetration problem is no longer negligible,own_claim
we use the swept volume approach,own_claim
13,data
8,data
Numerous approaches,background_claim
have been introduced for cloth collision resolution,background_claim
14,data
12,data
3,data
15,data
no cloth collision resolution method which considers cloth-cloth momentum conservation has been introduced,background_claim
we cannot achieve realistic cloth interactions in cloth animation without conserving cloth-cloth momentums,background_claim
Having this characteristic is visually distinctive,background_claim
cloth surfaces are moving fast and interact with each other,data
For rigid N-body collisions by graphics and robotics groups,background_claim
11,data
1,data
10,data
9,data
and for flexible-rigid collision resolution,background_claim
2,data
several approaches have been suggested,background_claim
they are not directly applicable for deformable N-body collision resolutions,background_claim
"Cloth resolution methods so far compute non-penetrating positions, velocities or accelerations of particles",background_claim
14,data
3,data
15,data
which work fine for the collisions against fixed bodies,background_claim
Using these methods,background_claim
we cannot achieve visually satisfying dynamics of cloth-cloth collisions,background_claim
Adjusting particle orientations after collision resolution as suggested by,background_claim
14,data
to sustain the geometrical consistency of colliding faces also does not warrant reasonable dynamic movements of cloth-cloth collisions,background_claim
"Handling collisions in an IZ as a bundle, proposed by Provot",background_claim
12,data
also does not give a proper visual effect,background_claim
all particles are given the same velocities after collision resolution,background_claim
particles tend to get stuck once they collide into each other in an IZ,background_claim
We propose our cloth collision resolution method which resolves simultaneous collisions while ensuring conservation of momentum as accurately as possible,own_claim
simultaneous resolution does not blindly resolve a collision without considering neighboring collisions within an IZ,own_claim
we do not introduce any new collisions while resolving a collision,own_claim
The collision resolution module receives collision information as a set of IZs,own_claim
Sec. 2.2,data
"Within an IZ, where possibly multiple collisions reside, collisions are resolved simultaneously",own_claim
Sec. 3.4,data
"After we handle each IZ separately, we check whether any new collisions between IZs are introduced by collision resolutions, and handle them if there are any",own_claim
the collisions in that IZ are categorized as cloth-cloth collisions,own_claim
we do not find any CCs from rigid bodies,data
we find CCs from rigid bodies in an IZ,data
we extract them temporarily from the IZ,own_claim
only cloth-cloth collisions remain in the IZ,own_claim
"After resolving these cloth-cloth collisions, we take care of cloth collisions against rigid bodies",own_claim
the resolutions against rigid bodies will be done on top of the result of self-collision resolutions,own_claim
This sequence of resolutions is chosen to avoid the case where self-collisions are ignored while collisions against rigid bodies are handled,own_claim
"For some cases, an IZ has only one CC",own_claim
we cannot handle the particles in that CC as a bundle as usual,own_claim
an IZ has only one CC,data
the particles in that CC will stick together after resolution,own_claim
the movements of cloth would not be natural and satisfactory,own_claim
we divide one CC into parts,own_claim
we can find proper collision responses within these parts,own_claim
Segmenting one CC into parts is performed by identifying border edges,own_claim
ing the particles in the border edges segments a CC into several sub-CCs,own_claim
Eliminat,own_claim
Fig. 2,data
an IZ has three or more CCs,data
we reduce the total number of CCs by merging closely located CCs,own_claim
This merger is performed to prevent undesirable collision resolution,own_claim
CCs are closely located,data
it means the cloth patches represented by these CCs are closely located,own_claim
We do not want to handle closely located CCs separately,own_claim
it might instantly introduce instabilities to the system by allowing closely located CCs to have different velocities,own_claim
there is an exception,own_claim
we find a significant bending between these closely located CCs,data
we have to resolve collisions between these CCs by handling them separately,own_claim
Bending between CCs is considered significant in the same way as in the case of bending between faces,own_claim
We do not want to handle closely located CCs separately except for the case where the bending is significant,own_claim
"the candidates of the CC merger are the CCs closely located, where we do not witness any significant bending between the CCs",own_claim
"After merging, we still possibly have more than two CCs",own_claim
we pre-processed a single CC IZ previously,own_claim
we assume an IZ always has two or more CCs,own_claim
The important part of the collision resolution of these multiple CCs is to find the proper directions of collisions,own_claim
the velocities of CCs after collision are computed based on this collision direction,own_claim
finding the correct collision direction is important to achieve proper visual effect of collisions,own_claim
the collision direction is computed by connecting the two ball centers of mass,own_claim
the two billiard ball collision,data
"in cloth-cloth collisions, connecting two centers of CC masses is not a proper way to decide the collision direction",own_claim
"To have the proper average direction, the CC face normals, N 1 and N 2 , have to be properly signed as N 1 N 2 0",own_claim
This approach serves us well empirically,own_claim
we have collisions of three or more CCs in an IZ,data
it is not straightforward to resolve the collisions,own_claim
we can think of two ways to solve this multiple cloth collision problem,own_claim
One way of resolving these multiple collisions is to handle them as staggered collisions,own_claim
11,data
10,data
the other way is to handle them as simultaneous collisions,own_claim
1,data
The staggered collision approach handles multiple collisions as a series of single collisions,background_claim
11,data
or desynchronized groups of collisions,background_claim
10,data
The simultaneous collision approach treats multiple collisions as simultaneous collisions within a time-step,background_claim
The staggered collision approach gives us a more physically correct solution than the other,background_claim
This whole process is,background_claim
"we have to consider the possibility that the resolution of a collision can create new multiple collisions, which we have to employ another strategy to resolve",background_claim
computationally expensive,background_claim
"In addition to the substantial computational expense and complexity, the visual advantage of those staggered methods is not considered significant compared to that of the simultaneous collision method",background_claim
"The simultaneous collision handling method, proposed by Baraff",background_claim
1,data
"resolves multiple rigid body collisions by solving a system of linear inequalities, where the system of linear inequalities is based on the colliding relationships between rigid objects",background_claim
we treat CCs as mass balls,own_claim
we adapt this approach for the cloth,own_claim
collision,own_claim
resolution,own_claim
CC bodies are considered as vertices,data
an edge exists between two vertices where the bodies represented by those two vertices collide,own_claim
N bodies are colliding without having any cyclic collision,data
"we can build a system of N , 1 linear equations based on the changes of relative velocities of each colliding pair",own_claim
"v i;j + = , C e v i;j",data
the law of N-body momentum conservation says,background_claim
"m 1 v 1 + + m 2 v 2 + + + m N v N + = m 1 v 1 , + m 2 v 2 , + + m N v N",background_claim
Using,own_claim
eq. 1,own_claim
and,own_claim
2,own_claim
we can deterministically find the solution of,own_claim
v,own_claim
i + for,own_claim
1 i,own_claim
N,own_claim
we use swept-volumes of faces to detect collisions,own_claim
we handle fast moving cloth and rigid body objects,own_claim
collision resolutions of an IZ create new collisions against objects around the IZ,data
a problem arises,own_claim
"This happens when objects do not move fast enough to penetrate objects outside an IZ, but just fast enough to make the result of collision resolutions penetrate the proximity region of objects outside the IZ",own_claim
this case appears to be very rare,own_claim
we can resolve this case by maintaining the barycentric relationship between cloth surfaces and the newly introduced colliding entities,own_claim
we may introduce other new collisions when we resolve the current collisions,own_claim
"in the worst case, this involves repetitious processe",own_claim
we observe cyclic collisions in an IZ,data
we build a system of linear inequalities based on the collision rela- tionships between grouped particle parts,own_claim
"We find the feasible solution of the linear inequality system, while trying to minimize the energy we introduce into the simulation artificially",own_claim
an IZ has cyclic colliding relationships between CCs,data
we have N or more linear inequalities,own_claim
"This inequality relationship between the relative velocities before and after collision is an artificial relationship set up heuristically, not based on physics",own_claim
"This inequality relationship, first used for rigid body multiple collisions",own_claim
1,data
appears to serve the graphical purpose well,own_claim
"we define an objective function, X",own_claim
"mize When the difference we solve this between system v i;j + of and inequalities, , C e v i;j , , which we want would to minirepresent the extra energy we introduce into the system",own_claim
to be minimized when we solve the system,own_claim
The system of inequalities with an objective function can be solved using a Linear Programming Method,own_claim
an IZ has CCs from rigid bodies,data
along with CCs from cloth,data
the collision resolutions against rigid bodies are performed after cloth-cloth collisions are resolved,own_claim
an IZ has rigid CCs,data
collision responses are different based on whether rigid CCs are moving or fixed or a mixture of both,own_claim
the rigid CCs in an IZ are all fixed,data
we handle particles in that IZ individually,own_claim
Particles are ignored,own_claim
they are not in the vicinity of a face in fixed rigid CCs,data
particles separating from the rigid bodies are also ignored,own_claim
"The new particle velocity V new is , C e V normal + C f V tangential",own_claim
the rigid CCs in an IZ are all moving,data
we handle particles as a bundle,own_claim
particles are in the vicinity of moving rigid CCs,data
an IZ has both moving and fixed rigid CCs along with cloth CCs,data
collision resolutions against rigid bodies are done based on the proximities of particles to the rigid CCs,own_claim
Collisions between rigid bodies,own_claim
have to be handled independently from cloth collisions,own_claim
"For numerical integration, we used the CG method proposed by Baraff",own_claim
3,data
This mainly comes from the fact that the fabric in Fig. 6 (below) is stiffer than the one in Fig. 6 (above),own_claim
Fig. 6 (above),data
Fig. 6 (below),data
The correct choice of the simulation method and its implementation is a very important issue in the design of an efficient cloth simulation system,background_claim
"Among the available methods, there are finite elements methods",background_claim
EIS 96,data
continuum mechanics,background_claim
TER 87,data
or particle systems,background_claim
BRE 94,data
"the latter, which has shown to bring the best compromise between accuracy and speed for highly deformable objects such as cloth",background_claim
VOL 95,data
VOL 97,data
A particle system represents the mechanical system as a set of punctual masses,background_claim
The cloth surface shape is represented by the geometry between neighboring particles,background_claim
"The mechanical behavior is represented as interaction forces between the particles, which depend on the relative position and speed of the particles, measuring deformation and deformation speed",background_claim
"Various models exist for this representation, which rank from the simple spring-mass representation",background_claim
to accurate surface or volume models,background_claim
The laws ruling these interactions also rank from linear to highly nonlinear involving discontinuities and hysteretic curves,background_claim
"The evolution of the system is computed numerically from these equations that form a large and sparse ordinary differential equation system, which, through adequate modeling, is also first-order",background_claim
"This numerical system has to be integrated numerically, for finally obtaining the evolution of the mechanical system along time, usually as a sequence of successive positions of the object along regular time intervals",background_claim
Various numerical methods related,background_claim
to integration of numerical ordinary first-order differential systems are available for this purpose,background_claim
PRE 92,data
"the implementation of these methods, which has already been carried out extensively",background_claim
EBE 96,data
VOL 97,data
BAR 98,data
VOL 00,data
and with some adaptations,background_claim
DES 99,data
EBE 00,data
KAN 00,data
It rather intends to evaluate quantitatively the performance of the main integration methods in terms of speed and accuracy,own_claim
"Using a “typical” cloth object made of a common fabric material, we compare the computation speed and accuracy of each integration methods depending several simulation contexts, giving the reader an overview of the performance he can expect from each method",own_claim
The choice of the adequate integration method has to be carried out using various considerations related to the kind of problem to be simulated,background_claim
"The size of the problem, mostly related to the number of particles used to describe the mechanical system",background_claim
"The desired accuracy, which reflects the allowable numerical tolerance between the computed solution and the theoretical evolution expected from the mechanical model",background_claim
"The simulation context, which can either be an extensive computation of the motion along time requiring accurate evaluation of all the dynamical factors, or a simple relaxation process where the simulation has to converge to the static rest state as quickly as possible",background_claim
"The stiffness of the problem, mainly related to the rigidity of the particle interactions and the size of the chosen time step, which translated into the “difficulty” the numerical method has to compute the evolution numerically, and which practically causes inaccuracy and instability problems",background_claim
the methods requires to compute one,background_claim
"The time an iteration takes to compute, and the number of mechanical derivations",background_claim
The literature is abundant about various integration methods which aim to solve linear systems of first-order ordinary differential equations,background_claim
PRE 92,data
"One can easily turn the second-order systems relating dynamical mechanical systems into first-order systems by constructing a state vector defined by the concatenation of position and speed states of the system, such as to fit the requirements of any of these algorithms",background_claim
"Among all the available methods, we can identify several main classes",background_claim
"Explicit methods, which compute the state of the next time step out of a direct extrapolation of the previous states using derivative evaluations",background_claim
"Implicit methods, which deduce the state of the next time step from an equation system expressing some “reversibility” from the extrapolated solution",background_claim
"Low-order methods, which use a reduced number of evaluations for computing simple low-order extrapolations, leading to quickly computed, but inaccurate iterations",background_claim
"High-order methods, which use several evaluations to compute high-order solutions that get much more accurate as the time step is reduced",background_claim
"We shall restrict our consideration to three different methods which explore the range of these classes, and which seem to fit the best the requirements set for cloth simulation problems, in terms of implementation simplicity and efficiency for particle systems using large numbers of particles that interact sparsely and with a constant topology",own_claim
It requires two mechanical derivations per iteration and returns a second-order accurate solution relative to the time step,background_claim
It also requires two storages of the state vector,background_claim
We preferred this method to the still simpler first-order Euler method,own_claim
"the obvious gains of accuracy and stability which, despite the additional mechanical evaluation, makes it largely more efficient",background_claim
We implemented this method for garment simulation,background_claim
VOL 95,data
"It requires five mechanical derivations per iteration, as well as five storages of the state vector",background_claim
"This method is supposed to provide high accuracy, which increases significantly as the time step is reduced",background_claim
This method was experimented in,background_claim
EBE 96,data
VOL 97,data
"The Backward Euler method, which is the implicit implementation of its simple forward counterpart",background_claim
"It requires one mechanical evaluation and the resolution of a sparse linear system per iteration, as well as one storage of the system state additionally to those required for the system resolution algorithm",background_claim
This method is supposed to provide approximate results that are not subject to numerical instability as the time step is increased,background_claim
We implemented this method combined with a Conjugate Gradient algorithm using linear system matrix products computed on the fly,own_claim
and thus able to take into account the anisotropy and nonlinearities of the mechanical model as the actual Hessian matric is used for each current state of the mechanical system,own_claim
"No initial matrix setup is required, suppressing also the need of separating linear and nonlinear components",own_claim
EBE 00,data
"We have also carried out some preliminary tests with the Rosenbrook method, which is an implicit implementation of a fourth-order Runge-Kutta method",own_claim
It is supposed to combine the stability of implicit methods with the accuracy of high-order methods,background_claim
preliminary experiments have shown very deceptive results,own_claim
the gain of accuracy did not compensate the large calculations required for each iteration,own_claim
increased instability problems did not allow time steps much larger than those used for good accuracy with backward Euler,own_claim
We implemented this method using the algorithm described in,own_claim
PRE 92,data
We did not consider in our tests the methods aimed toward simplifications which might highly approximate and degrade the dynamic behavior of deformable models,own_claim
DES 99,data
implicit integration with precomputed inverse matrices,background_claim
which involves high simplification and linrarization of the Hessian matrix and which also becomes very unpractical for large matrix sizes,background_claim
We simulated such algorithm using accurate resolution on an accordingly approximated constant matrix,own_claim
these approximations produced more simulation errors,own_claim
than producing a quick and rough linear system solution using a reduced number of Conjugate Gradient iterations with an accurate matrix,own_claim
Even more drastic simplifications,background_claim
reduce the matrices to their diagonal component,background_claim
KAN 00,data
A complete surface,background_claim
elasticity model which allows the simulation of anisotropic elasticity,background_claim
and associated viscosity,background_claim
This model is one of the simplest that a cloth simulation application would use,background_claim
The implementation also supports collision detection and response,own_claim
An object-oriented framework written in C++ integrate all these technologies into a single application allowing simulation of cloth objects of any shape with specified parameters,own_claim
Performance is a key issue in choosing the adequate integration method,own_claim
cloth simulation usually involves very large mechanical systems described by a huge number of variables,background_claim
the numerical resolution of the system is,background_claim
critical to the total computation time,background_claim
Performance actually depends on several factors,own_claim
The computation time taken for one iteration of the algorithm,own_claim
"This depends on the complexity of the method, and also related to the number of times the forces of the system have to de derived from the system state using the laws of mechanics",background_claim
"The time step for one iteration, which represents the time discretization required to reach a given accuracy or numerical stability for a given method",own_claim
"The desired accuracy of the resolution, which may be coarse if only static equilibrium is to be computed, or high if the whole dynamic evolution of the system is desired",own_claim
Accuracy increases along with time step reduction as better as the method is high-order,background_claim
"The numerical stability of the method, which also limits the time step for a given method and a given mechanical system",own_claim
The most important fact to note is that the application of the Backward Euler method with a reduced number of Conjugate Gradient iterations compares very well with the traditional explicit methods,own_claim
Method Accurate Simplified Midpoint 32 μs 8 μs Runge-Kutta 95 μs 25 μs Back. Euler (No CG iter.) 31 μs 5 μs Back. Euler (Per CG iter.) 16 μs 2.5 μs,data
"With one iteration only, it is barely worse than the very simple explicit Midpoint method",own_claim
"does not explicitly construct the matrix of the system to be resolved by the Conjugate Gradient, but computes “on the fly” the product of this matrix with vectors when needed by the Conjugate Gradient algorithm",own_claim
Our implementation,own_claim
VOL 00,data
This gives a very efficient implementation when using a low number of Conjugate Gradient iterations,own_claim
which is often sufficient for most applications,own_claim
These tests will help us to choose the method that gives the best compromise between accuracy and computation speed,own_claim
"For measuring accuracy and numerical stability of the algorithms, we need to set up a “standard” material on which the experiments are carried out, as well as the rules allowing to extrapolate the results to any material of different size and parameters",own_claim
"Thanks to the linearity of the equations describing linear elasticity, we reduce the number of parameters describing a problem using proportionality laws, and we compute a “condition coefficient” K which illustrates the acceleration of a mesh element with normalization to the problem mass, simulation time step and element size, as follows: K = E d 1 l 2 t 2",own_claim
This non-dimensional coefficient actually measures the “numerical difficulty” of computing an iteration of time step t with the given problem,own_claim
"A typical cloth simulation problem could involve a cotton fabric cloth surface, which typically have a density d = 0.1 kg.m -2 and a Young modulus E = 2 0 N . m",background_claim
the condition coefficient of the problem computed with (1) is K = 2 0 0,own_claim
a discretization into elements averaging one centimeter and a simulation time step of ten milliseconds,data
It is possible to define similar coefficients related to bending and viscosity modulus,own_claim
"In simulations that consider simultaneously all these forms of mechanical behaviors, the dominant K coefficient rules the “numerical difficulty” of the problem",background_claim
"In such kind of simulation, the interest is to reproduce exactly the motion of a cloth object along time, the accuracy of its evolution being the key of the realism of an animation involving simulated cloth",background_claim
we perform a preconditioning of the system state variables of the linear system to be resolved using the inverse square root of the mass of the corresponding particle,own_claim
using implicit methods,data
"This allows the iterations of the Conjugate Gradient algorithm to distribute the resolution numerical errors as evenly as possible between the particles, so that to obtain for instance a fall speed that does not depend on the mass of the particle",own_claim
Without any additional external forces considered,data
we expect this to happen in a constant time of 0.45 s,own_claim
Several interesting facts arise from this experiment,own_claim
"As a matter of numerical stability, the Midpoint method supports K values up to almost 3",own_claim
the RungeKutta method supports K values up to almost 100,own_claim
"with Runge-Kutta, it is possible to use simulation time steps which are almost six times larger than with Midpoint",own_claim
a Runge-Kutta iteration takes only three times more computation than a Midpoint iteration,own_claim
Fig.1,data
the Runge-Kutta method seems to be computationally two times more efficient than the Midpoint method,own_claim
"As a matter of simulation accuracy, both Midpoint and Runge-Kutta seem to preserve accuracy correctly within their range of numerical stability",own_claim
the implicit Euler method seems stable for any K value,own_claim
its accuracy is,own_claim
very degraded by high K values and reduced numbers of Conjugate Gradient iterations,own_claim
accuracy is well preserved with one Conjugate Gradient iteration up to a K value of 4,own_claim
increasing the iteration number n times also increases the K value n 2 times for the same accuracy,own_claim
the Inverse Euler method needs at least four Conjugate Gradient iterations to reach the accuracy of the Runge-Kutta method,own_claim
similar requirement of accuracy bring the two methods in parity in terms of computation time,own_claim
Fig.1,data
"the experiment was carried out using a uniformly discretized mesh, and uniform mechanical parameters",own_claim
"Real-world simulations do not have this regularity, and numerical instability with explicit methods occur in the stiffest regions of the mesh, which, even if they are marginal in the whole mechanical system, may totally “explode” and destroy the simulation and therefore will rule the size of the largest time step possible",own_claim
"With implicit methods, the resulting inaccuracies may be unnoticed when taking a time step adapted to the average stiffness",own_claim
it is not possible to increase the time step of implicit methods as much as desired,own_claim
accurate reproduction of dynamic motion is required,data
weak forces will be “neglected” relatively to stiff forces,own_claim
this cause very noticeable inaccuracy,own_claim
this is not an issue for draping problems where only the final state is desired,own_claim
accurate reproduction of the whole evolution is wanted,data
this aspect has to be taken into account,own_claim
implicit Euler is a good choice for robust simulation where accuracy is not really an issue,own_claim
the explicit Runge-Kutta offers good possibilities of ensuring high accuracy,own_claim
its high-order solution,own_claim
is provides good possibilities integration error evaluation for efficient time step control which,own_claim
is too context-sensitive for being pre-evaluated using only the knowledge of K,own_claim
The condition coefficient value is a good indicator of the time step and accuracy that can be expected for a given problem with a given iteration time step,own_claim
"Considering a simulation involving elements n times smaller, maintaining accuracy and stability",own_claim
"would require a time step n times smaller, and therefore n times as many iterations for simulating the mechanical system along a constant duration",own_claim
there are also n 2 times more elements to handle,own_claim
the total computation time is finally multiplied by a drastic n 3,own_claim
this factor is what cause explicit methods to become so inefficient with refined discretizations,own_claim
this scaling has to be strictly observed for preventing instability,own_claim
only “visual” accuracy matters,data
implicit methods are a bit more tolerant,own_claim
"Draping is another context of simulation, where only the final static equilibrium state of the mechanical system is to be computed",background_claim
"Here, the interest is to converge to the equilibrium state as quickly as possible, with minimum computation charge",background_claim
accuracy can be traded away for computation speed,background_claim
the full evolution of the cloth along time is not an interest,background_claim
implicit methods should be quite strong on this point,own_claim
"they do not suffer from numerical instability, and allow large time steps to be used at the expense of dynamic accuracy",background_claim
the explicit methods seem quite not adapted for draping,own_claim
"Runge-Kutta requires more than 500 iterations for performing the simulation without instability, with the maximum allowed time step t = 0 . 0 0 1 s , which in fact corresponds to the maximum value of K coefficient experimented in the previous section",own_claim
The backward Euler method is robust enough to handle the problem without instability for any time step,own_claim
larger time steps do not proportionally translate into fewer steps for performing the draping,own_claim
we quickly observe a “saturation” of the number of iterations to a constant which seems to be inversely proportional to the number of Conjugate Gradient iterations that were performed,own_claim
the time step becomes larger,data
the corresponding K coefficient exceeds the theoretical limit observed in the previous section,data
K exceeds the dynamic accuracy limit of a given implicit integration method,data
the time step does not really reflect a time interval anymore,own_claim
"the implicit method will only evaluate an approximation of the rest state of the mechanical system by linear extrapolation from the Hessian matrix, whose accuracy depends on the number of Conjugate Gradient iterations that were used to resolve the corresponding linear system",own_claim
there is no real way to “cheat” on the time step for speeding up draping,own_claim
"The total number of Conjugate Gradient iterations for performing all the simulation iterations of a draping problem cannot go below an incompressible number, related to a kind of “total computational difficulty” for solving a draping problem",own_claim
this experiment shows the drastic advantage of using implicit methods for draping problems,own_claim
"With our implementation using the accurate elasticity model and the computation times measured in section 3.1, the draping could be computed in 30 seconds with Backward Euler with any large time step, compared to 150 seconds with Runge-Kutta when using an “optimal” time step",own_claim
Most mechanical simulations work with numerical equations that are not linear,background_claim
There are two main reasons for such nonlinearity,background_claim
The equations describing the mechanical behavior laws are not linear,background_claim
"the strain-stress relation describing elasticity may actually be complex curves, which furthermore may take into account timedependent and hysteretic behaviors",background_claim
"During the simulation, the orientation of the mechanical elements change, and this modifies the expressions of the mechanical laws in the world coordinates",background_claim
"While rarely causing numeric “explosions” as with explicit methods, nonlinearity may disrupt the stability of simulations integrated with implicit models with large disturbing vibrations",background_claim
"the hypothetical equilibrium state is derived from the knowledge of the Hessian matrix, which relates the firstorder evolution of the forces as the deformations change",background_claim
particularly when using large time steps that cause iterations to converge to the equilibrium state of the mechanical objects rather than simulating accurately their mechanical behavior,background_claim
This can,background_claim
be observed when simulating stretched flat surfaces without curvature forces,background_claim
"Nonlinearity causes this matrix to change between the successive iterations, and this evaluation to be inaccurate",background_claim
despite high system resolution accuracy that can be reached with numerous Conjugate Gradient iterations,background_claim
The solution for this is to approximate the Hessian matrix for taking into account the changes that may be observed from the change of the system state between successive iterations,background_claim
"an underestimation of de derivatives may lead to an equilibrium state valuation too far from the current state, and by this cause instability",background_claim
an overestimation of the derivatives will place this evaluation nearer to the current state,background_claim
"stabilizing the simulation, at the expense of extra numerical damping and slow convergence",background_claim
This is particularly true for drastic linearisations as for example used in,background_claim
DES 99,data
Knowledge of the expected state changes between successive time steps are required to perform this approximation correctly,background_claim
one solution is to take the steepest parts of the curves as derivatives,background_claim
nonlinear mechanical behavior,data
the element orientation problem,data
isotropic derivatives considering force evolution equally in any directions may be considered,background_claim
"the more drastic these approximations are, the less accurate the simulation will be for dynamic simulations, and the slower the simulation will converge for draping problems",background_claim
"which makes sense when efficiency relies on the use of a constant Hessian matrix, is to perform the implicit resolution on a linear constant approximation, and to simulate the nonlinear and variable component, unlikely to cause stiffness problems, using an explicit method",background_claim
EBE 00,data
A nice solution described in,background_claim
the resulting condition coefficient K is roughly 8 with a simulation time step of 10 milliseconds,own_claim
The mesh elements are roughly five centimeters in size,own_claim
This is a draping problem involving to obtain a rest position of the garment as quickly as possible,own_claim
The dynamical motion of the cloth is important here,own_claim
The garment assembly and seaming operations could be performed almost four times faster with the Backward Euler,own_claim
2 minutes,data
than with Runge-Kutta,own_claim
8 minutes,data
"collision detection and response account for more than the half of the computation time, and actually limits the time step size when contact starts between the cloth and the body",own_claim
"For the dynamical animation, comparable accuracy could be obtained between Runge-Kutta and Backward Euler using eight iterations of the Conjugate Gradient, which gave similar computation times",own_claim
The backward Euler method,own_claim
"allowed the increase of the time step up to 0.1 seconds, where inaccuracies began to show up",own_claim
excessive “heaviness” of the fabric that failed to follow the motion of the body properly,own_claim
garments folds that would not disappear quickly,own_claim
additional artifacts caused by inaccurate collision response,own_claim
Recent literature has emphasized on the relevance of implicit methods for cloth simulation,background_claim
The implicit Euler method seems effectively a good candidate for most situations,own_claim
the robustness resulting from not being prone to numerical instability,background_claim
This is particularly true when simulating very heterogeneous mechanical systems,background_claim
"where, using explicit models, the most critical elements would rule the time step size for all the simulation",background_claim
the inverse Euler iteration often proves to be faster than the explicit Runge-Kutta method of higher order,own_claim
an adequate approximate linear system resolution is implemented,data
the perception of the implicit model iteration being slow,background_claim
the linear system resolution it involves,background_claim
A limited number of Conjugate Gradient iterations seems suitable for this,own_claim
increasing the time step seems not limited by instability with implicit methods,own_claim
this is still done at the expense of accuracy of the whole simulation,own_claim
"The number of iterations should also be set sensitively to the stiffness of the mechanical problem, for limiting the potential inaccuracies that become particularly visible when an accurate simulation of a dynamical system is wanted",own_claim
"There is an obvious advantage of using implicit methods, and particularly the inverse Euler method",own_claim
draping problems where quick convergence to a rest position is required quickly,data
Our test have shown that the inverse Euler method allow to perform a draping problem almost ten times as fast as with the Runge-Kutta method,own_claim
"While not exactly reproducing real mechanical behavior, the simulation with large time steps provides a quite efficient convergence to equilibrium",own_claim
"the numerical errors quite often act as extra damping, removing the need of adding them explicitly to the model",own_claim
dynamic problems where accurate evolution of the mechanical system along time is needed,data
the advantage of implicit methods is less obvious,own_claim
"Their stability gives a false sense of efficiency, allowing obtaining quickly a result by “cheating” on the time step size",own_claim
"playing back the generated animation, artifacts quickly show up",own_claim
Excessive damping,own_claim
wrinkles and folds that fail to disappear,own_claim
objects failing to fall correctly by their own weight,own_claim
"These artifacts are still augmented by the approximations made to the Hessian matrix, possibly in the purpose of reducing instability",own_claim
excessive reduction of the Conjugate Gradient iterations produce additional inaccuracy and slow convergence,own_claim
there is still some benefit in using the Backward Euler method than any other explicit method for dynamic simulations,own_claim
"the reduced time it takes to compute one iteration, which also only requires one derivation of the particle forces from the state of the system",own_claim
Our tests have shown a roughly doubled speed for the accuracy corresponding to the limit of stability of the Runge-Kutta method,own_claim
We got substantial improvements through the implementation of the implicit Midpoint method,own_claim
VOL 00,data
"had the drawback of increasing the numerical instability problem, forcing additional use of isotropic force gradients, at the expense of accuracy",own_claim
"The explicit methods have still their interest, and should be reserved for simulations requiring high accuracy and particularly those where involving low mechanical damping and where mechanical energy conservation is important",own_claim
"Instability concerns will force parameters and time step size to ensure good accuracy for the simulation of all particles of the discrete mechanical representation, and therefore for the entire mechanical object",own_claim
This may,own_claim
require prohibitive computation times for very stiff and discretized models,own_claim
The 5th-order Runge-Kutta method das proven to be a good solution,own_claim
EBE 96,data
VOL 97,data
its high accuracy,own_claim
it,own_claim
"provides integration error evaluation, which is a very good hint to the very sensitive problem of optimal time step size determination",own_claim
"The simpler Midpoint method may have some interest only in very particular cases involving very loose materials with rough discretization, or when numerous fast iterations with small time steps are required for other reasons",own_claim
All these considerations should be carefully taken into account when designing a mechanical simulation engine,own_claim
"they are the keys to efficient simulation, and therefore complex models that, for garment simulation, express fully visual experience of real fashion models",own_claim
"This still remains an important issue to dynamic realism of cloth simulation models, which has to take into account viscosity, the dissipative effect of hysteretic behavior, as well as collision damping and friction",own_claim
The integration methods have to be tuned to take precisely these effects into account,own_claim
" Today’s cloth simulators for animation, visual effects, games, and apparel design can mimic real cloth to a high degree of fidelity",background_claim
"to fully exploit their capabilities, the constitutive models for cloth deformation must be tuned with great care",background_claim
During this tuning process it is difficult to tell which models and which parameters are giving results more like the real material,background_claim
This paper aims to solve this problem by introducing new techniques to measure complete cloth behavior under controlled conditions and to estimate cloth deformation models from these measurements,own_claim
"Most methods for testing cloth move the sample into a state of near-uniform strain, exercising one or at most two components of strain at once",background_claim
pure stretching,data
pure shearing,data
pure bending,data
the resulting forcedisplacement curves are valuable in studying the differences between materials,background_claim
this approach has certain limitations,background_claim
The inevitable deviations from uniform strain create modeling error that cannot be quantified without knowing the actual strain variation,background_claim
"force-displacement curves can be used directly to tune a cloth model, but do not provide any way to validate the resulting fit",background_claim
"The contributions of this paper are, first, a new, general system for observing cloth properties that measures more complete data than previous work in cloth capture or textile testing",own_claim
"second, a new method for fitting parametric models to this type of data",own_claim
Having deformation and force information makes our data well suited to model validation,own_claim
the experiment measures the complete answer that should be predicted by a cloth simulator,own_claim
Our approach to model estimation is to numerically optimize nonlinear stress-strain curves to minimize errors in force and position compared to the measurement,own_claim
we do not need uniform strain,own_claim
"We have designed a general fitting method, suited for the vast majority of existing cloth models, that leverages equilibrium conditions to guide the iteration",own_claim
"By estimating model parameters under a sequence of deformations of increasing complexity, we alleviate problems with convergence in the presence of abundant local minima",own_claim
Cloth simulation has a comparatively long history in computer graphics,background_claim
Since the first physics-based approach by,background_claim
a multitude of different cloth models have emerged,background_claim
TPBF87,data
simple mass-spring systems,background_claim
general particle systems,background_claim
elaborate models derived from continuum mechanics,background_claim
the discrete yarn structure,background_claim
Pro95,data
CK02,data
BHW94,data
BW98,data
EWS96,data
EKS03,data
VMTF09,data
KJM08,data
"Considering the number of existing models, it is very hard to clearly identify or even quantify the advantages of individual approaches",background_claim
Our goal is to define a platform for comparing cloth models to the observed behavior of real cloth,own_claim
"As a central component of any cloth model, material models describe the relation between deformation and resulting forces",background_claim
"In the simplest case, this relationship is linear and thus completely described by a set of material constants, whose number depends on the cloth model",background_claim
Massspring systems typically have four parameters,background_claim
one per type of spring,data
Pro95,data
continuum-based methods can have two,background_claim
to six,background_claim
parameters for planar deformation,background_claim
plus another one to three for bending,background_claim
isotropic,data
completely anisotropic,data
EKS03,data
GGWZ07,data
Continuum-based approaches can accurately describe the directional variation of material properties,background_claim
"regardless of the cloth model, a single set of material coefficients for the entire deformation range is not sufficient to faithfully capture the nonlinear response of typical fabrics",background_claim
"Bi-phasic models, typically implemented as strain limiting methods",background_claim
"improve on this by splitting the material behavior into an initial, weakly elastic range and a stiff, quasi-inextensible limit",background_claim
Pro95,data
BFA02,data
Mül08,data
TPS09,data
WOR10,data
"At the extreme, the elastic range can be replaced altogether by inextensibil∗ ity constraints",background_claim
GHF 07,data
EB08,data
"A better approximation to the true material response can be obtained by making the material parameters functions of the deformation, rather than constants, and by fitting these functions to measured data",background_claim
previous work,background_claim
has mainly relied on the Kawabata Evaluation System,background_claim
Kaw80,data
BHW94,data
EWS96,data
VMTF09,data
and corresponding machinery,background_claim
the KES covers a comprehensive set of experiments,background_claim
for measuring shear properties,data
other devices have been used in more specific context,background_claim
the Picture Frame test,data
Cul79,data
the Cantilever test,data
for measuring bending properties,data
CPGE90,data
PKST08,data
These measurement-based approaches establish a valuable link between simulation and real-world behavior,background_claim
they rely on experiments that isolate individual deforma∗ tion modes,background_claim
As an alternative,background_claim
aim at avoiding the need for controlled conditions and try to extract parameters from casually captured videos of cloth,background_claim
BTH 03,data
KNM10,data
This approach appeals through a simple and inexpensive acquisition process,background_claim
it is not possible to accurately separate internal,background_claim
and external,background_claim
parameters,background_claim
material-specific,data
friction,data
air drag,data
capture technology can be used to record time-varying geometry of complex cloth mo∗ ∗ tions,background_claim
WCF07,data
BPS 08,data
SGdA 10,data
capturing can provide accurate deformation data,background_claim
"parameter fitting remains very difficult without explicit control over boundary conditions, in particular loading forces",background_claim
Closer to our work is the recent approach of,own_claim
who propose a data-driven piecewise linear elastic cloth model comprising 39 material parameters,background_claim
WRO11,data
These parameters are fitted to experimentally acquired data obtained from planar and bending deformations,background_claim
Their capture setup is appealingly simple,background_claim
ours is more general and powerful,own_claim
"it produces a 3D surface, rather than a 2D deformation",own_claim
it measures all forces applied to the cloth as they change during a range of different deformations,own_claim
The design goals of our measurement system are to create deformations in a sample of cloth that explore a substantial range of the material’s strain space,own_claim
to record complete information about the forces applied to the cloth and the deformation that it undergoes,own_claim
we focus primarily on tensile forces,own_claim
it is hard to repeatably produce and measure compression forces in a sheet that is inclined to buckle,data
Our actuators and load cells are capable of applying and measuring tensions up to 45 N,own_claim
in our experiments the maximum force is typically on the order of 10 N,own_claim
the actuator positions themselves are not part of the output,own_claim
they are superseded by the displacements measured at the clips,data
"This prevents stretching of the cord, or other factors affecting the distance between the clip and the actuator, from affecting displacement accuracy",own_claim
"Our vision system recovers the space-time geometry of the deforming cloth and attached rigid clips, as well as the directions of the forces applied to the clips",own_claim
"The raw data for a single deformation consists of 20 to 200 individual measurement frames, with a set of camera images and simultaneous force sensor readings for each frame",own_claim
We compute the per-frame geometry using a state-ofthe-art stereo reconstruction technique,own_claim
which was specifically tailored for reconstructing cloth geome∗ try,background_claim
BBH08,data
BPS 08,data
it is printed with a wavelet noise pat∗ tern,background_claim
the inherent texture of the cloth is not sufficiently random,data
to provide texture that can be used for stereo reconstruction and tracking,background_claim
AIH 08,data
The pattern is printed with a flatbed inkjet printer and does not have a noticeable effect on the material behavior,own_claim
"To represent inter-frame correspondence, we use optical flow to obtain a single triangle mesh that deforms over time, akin to the human face tracking method of",own_claim
BHPS10,data
Back-projecting onto the reconstructed geometry for the next frame gives new position estimates for the cloth vertices,own_claim
very small errors can accumulate over time and cause temporal drift in the reconstruction,own_claim
"To avoid drift, we subsequently match each frame independently back to the rest pose frame using the approach described in",own_claim
BHPS10,data
"we need to determine the interaction between the rigid clips, the cloth, and the cords",own_claim
to measure the complete answer that a simulator should predict,data
"The clips are produced, using rapid prototyping, with embedded codes",background_claim
"that allow us to determine their identity, position, and orientation automatically",background_claim
Fia05,data
The area of cloth occluded by the clips is used to automatically determine which cloth vertices are clamped by each clip,own_claim
will therefore be constrained to it in the simulator,own_claim
The vision system also finds the cords in the images and triangulates a 3D line for each cord,own_claim
A few user scribbles on an input image indicate which cords are affecting each clip,own_claim
The set of deformations to measure is motivated by the goals of the parameter fitting stage,own_claim
Section 5,data
"to fit model parameters for stretch, shear and bending that best describe the cloth",data
to validate the parameter fits by comparing against other measurements,data
"To reduce the risk of falling into local minima during parameter fits, we have designed deformation sequences that produce near-isolated strains, and allow estimating stretch, shear and bending properties in a separate and incremental manner",own_claim
we relax the requirement of uniform strains,own_claim
our full 3D deformation capture solution,data
"To isolate stretching we perform a uni-axial tension experiment, with forces applied to two long bar clips attached to either side of the cloth",own_claim
"Figure 4 , 2nd column",data
our acquisition system is able to recover the 3D cloth geometry including temporal tracking,own_claim
"tracked 3D clip locations, and individual 3D force directions",own_claim
our method presents the first system able to record such extensive information about the behavior of a cloth sample,own_claim
Figures 4,data
5,data
illustrated with an overlaid checkerboard,data
shown as green lines,data
The multi-view stereo algorithm of,background_claim
is among the most accurate available according to the Middlebury evaluation benchmark,background_claim
BBH08,data
It is difficult to quantify the accuracy of the temporal flow computation,own_claim
it can be visualized by compositing the reconstructed deformation on top of the input images,own_claim
accompanying video,data
The largest source of error in measuring the force indirectly through the cord is the internal friction in the cord as it bends around the pulleys,own_claim
introduces an artificial hysteresis of about 0.1 N,own_claim
The raw repeatability of our force sensors is about 3 millinewtons,own_claim
Most elastic cloth models separate membrane,background_claim
and bending deformation energies,background_claim
stretch,data
shear,data
We have evaluated three models for membrane deformation that fit this description,own_claim
spring systems,data
the soft constraint model,data
and the diagonalized St.Venant-Kirchhoff,data
model,data
BW98,data
VMTF09,data
and two bending models,own_claim
spring systems,data
the edge-based bending model in Discrete Shells,data
GHDS03,data
not all force models define the quantities below explicitly as strains,own_claim
they often rely on the resolution of the discretization,data
they differ simply by scale factors that can be embedded in the stiffness k i,data
approximate the standard StVK model zeroing out off-diagonal terms in the matrix that relates strain and stress,background_claim
VMTF09,data
"in the diagonalized StVK, each membrane stress component depends only on its corresponding strain component",background_claim
σ = Eε,data
"σ s,i (ε s,i )",data
discovered concurrently the appropriate weighting of the angle change in order to model homogeneous bending on irregular triangle meshes with a homogeneous stiffness,background_claim
BMF03,data
GHDS03,data
"With our separation of weft-, warpand diagonal-bending to capture anisotropy, the bending models in Discrete Shells and by",own_claim
are equivalent up to a stiffness scale factor,own_claim
BW98,data
propose a general nonlinear stress-strain relationship,background_claim
the same construction can easily be built on any of our selected models,own_claim
VMTF09,data
The key question of how well a given model describes a particular piece of cloth is answered by fitting the model to the measurement data,own_claim
"adjusting its parameters to minimize the difference between the model’s predictions and the measured behavior, both in position and force",data
In principle all parameters of a cloth model can be fit to a sufficiently rich single deformation sequence,own_claim
this can result in a problem fraught with local minima,own_claim
we have designed an incremental optimization procedure that fits model parameters a few at a time using the isolated deformations described,own_claim
Section 3.2,data
achieve stable fits,data
we wish to know the,own_claim
"stress-strain curves for the deformation components of a cloth model, such that a simulated cloth matches known positions and forces as well as possible",own_claim
Given a set of captured static deformation frames,data
"the net force on the clips, produced by cord forces, gravity, and forces from fixed cloth nodes, must be zero",own_claim
equilibrium,data
the clip-parallel forces are dominated by shear,own_claim
clip-orthogonal forces are dominated by stretch,own_claim
situations of near-homogeneous shear,data
"during inter∂x n mediate iterations, the stiffness matrix may not always be well conditioned",own_claim
we also use this ∂x n modified stiffness matrix in the outer loop,own_claim
improved conditioning,data
"The nonlinearity of cloth deformation, together with the complex interplay of various deformation components in the resulting forces and positions, make the optimization problem above extremely complex in the general case, prone to falling in local minima and sensitive to initialization values",own_claim
we largely alleviate these issues with the design of the five isolated deformation measurements,own_claim
which allow us to separately fit stiffness curves for the six deformation components described,own_claim
following an incremental parameter fitting procedure,own_claim
Section 3.2,data
Section 4.1,data
The measurement shows the typical behavior of a woven fabric,own_claim
"a nonlinear curve with increasing stiffness for higher strain, and large hysteresis",data
The results are too numerous to include in the paper,own_claim
"we refer the reader to the supplementary material, which illustrates the behavior of the nonlinear orthotropic variant of all three models for all four fabrics, and the behavior of the variants of the Soft Constraints model for denim",own_claim
The four selected fabrics span a large range of possible cloth behaviors,own_claim
#12 is isotropic and very compliant in stretch and bending,own_claim
"#4 is also isotropic, very stiff in stretch but compliant in bending",own_claim
"#14 is stiff and quite isotropic in stretch, but extremely anisotropic in bending",own_claim
#18 is anisotropic both in stretch,own_claim
and in bending,own_claim
33/1 stiffness ratio in weft and warp,data
10/1 stiffness ratio,data
13/1 stiffness ratio,data
"All four fabrics show similar hysteresis behavior, with loading-to-unloading stretch stiffness ratios ranging from 1.4/1 to 1.8/1",own_claim
The maximum stretch stiffness for #4 is 250 times higher than for #12,own_claim
#14 is 10 times stiffer in shear than any other fabric,own_claim
Sample #12 is nearly linear in the test deformation range,own_claim
all other three fabrics exhibit nonlinearity,own_claim
"nonlinearity may arise in some deformation modes but not in others, with no clear pattern",own_claim
"all three cloth models fit nicely to the average of the hysteresis bands, even in highly nonlinear cases",own_claim
stretching,data
The fitting residual is larger for stiffer fabrics,own_claim
the nonlinear orthotropic model variants fit anisotropic fabrics best,own_claim
linear and/or isotropic variants reach a reasonable compromise but are not always able to remain inside the hysteresis band,own_claim
"the fitting force residual is larger for #14, the stiffest fabric",own_claim
shearing,data
the Springs model deviates at times,own_claim
"Across models, the Soft Constraints and St",own_claim
VK models fit to the average of the shearing hysteresis band,own_claim
no forces are available,own_claim
bending,data
"The fitting residual is similar for all fabrics, but distinctly higher for the Springs model",own_claim
"Often, the residual is dominated by a difference in curl near the edge of the sample, while the overall shape is well fit",own_claim
"The behavior of sample #12, the most linear fabric, is predicted well in all cases",own_claim
seen in the force-displacement plots,data
the buckling behavior in corner pulling,data
the,data
effective shear stiffness of the sheet when allowed to buckle in the complex shear test,data
the stiffness is underestimated for the Soft Constraints and,own_claim
St.,own_claim
"VK models, and overestimated for the Springs model",own_claim
In the three other samples,own_claim
the force-displacement plot of the corner pulling test,data
"Visually, the mismatch is more apparent in the complex shear test, where models with underestimated stiffness exhibit wider folds than the real fabrics",own_claim
The force-displacement plots of the real cloth samples,own_claim
"indicate very similar behavior between fitting and test samples for #12 and #14, and a larger disparity for #4 and #18",own_claim
the supplementary document,data
The evaluation plots for the simulation models behave similar for the test and fitting cases,own_claim
the matching quality depends on the actual disparity across cloth samples,own_claim
the actual folding shapes of simulated cloth may deviate largely from the captured cloth,own_claim
overall force-displacement behavior is nicely matched,own_claim
even a small change in material properties may lead to distant stable configurations in the L 2 sense,data
the traditional L 2 metric is not appropriate for evaluating error in this case,own_claim
The discontinuity of stable configurations is also the cause of flickering and twitches in some of our examples,own_claim
"The Springs model exhibits the worst fitting quality in shearing force-displacement curves, and the highest fitting residual for bending",own_claim
the inherent coupling of stretch and bending deformation components in this model,data
the overall deformations in complex shearing fit reasonably well,own_claim
"In contrast to continuum models, complex parameter tuning has often been regarded as a caveat of mass-spring models",background_claim
our results indicate that satisfactory parameter estimation is possible by incorporating anisotropy and nonlinearity into the model,own_claim
"VK models produce results with very similar quality, which is expected as the models present only subtle differences",own_claim
Section 4.1,data
At least three effects are missed by the tested models,own_claim
hysteresis,own_claim
Poisson effect,own_claim
cross-modal stiffening,own_claim
the diagonalization of the standard StVK model,data
shear stiffening due to stretching,data
we chose clip-parallel forces as objective function to minimize the effect of stretch errors on shear optimization,own_claim
We indeed identified stretch stiffening in the shearing deformations,own_claim
"missing cross-modal stiffening may also be, to a large extent, the reason for stiffness underestimation in the corner pulling test for the Soft Constraints and St",own_claim
VK models,own_claim
An extension to the nonlinear model of,own_claim
could help alleviate these problems,own_claim
WRO11,data
"This paper has demonstrated a novel system for observing cloth behavior, including complete information about deformation and forces, and a new method for fitting and evaluating cloth models using the measurements",own_claim
Our system is different from standard textile testing systems,own_claim
it captures detailed geometry information,data
it is different from previous cloth capture systems,own_claim
it captures complete force information,data
measures deformations of a 3D surface,data
The combination of very complete position and force information provides an unprecedented view into the complex behavior of cloth,own_claim
Our measurement setup offers very accurate control over membrane deformations,own_claim
the bending tests require manual intervention and are thus less precise,own_claim
some cloth materials,own_claim
tend to curl up at free boundaries,own_claim
the bending tests are most accurate for samples with straight edges,own_claim
"In order to eliminate these problems, we would like to investigate alternative ways of controlling bending deformations in the future",own_claim
The data from our experiments shows some of the limitations of current models,own_claim
The most obvious of these is hysteresis,own_claim
resulting in quite large errors for any given point in the experiment,own_claim
cloth is clearly far from elastic,own_claim
all widely used cloth models are elastic,background_claim
There are many paths for future work in measurement,own_claim
more complete exploration of strain space,own_claim
capture of dynamic properties,own_claim
and in fitting,own_claim
new ways of evaluating fitting error are needed that can work when the cloth’s equilibrium state is unstable or non-deterministic,own_claim
"Our eyes are very sensitive to the behavior of fabrics, to the extent that we can identify the kind of fabric simply from its shape and motion",background_claim
Griffiths and Kulke 2002,data
One important fact is that most fabrics do not stretch under their own weight,background_claim
"Unfortunately, for many popular cloth solvers, a reduction of permissible stretching is synonymous with degradation in performance",background_claim
for tractable simulation times one may settle for an unrealistic 10% or more strain,background_claim
compare 1% and 10%,data
Figure 1,data
Our work alleviates this problem by introducing a numerical solver that excels at timestepping quasi-inextensible surfaces,own_claim
stretching below 1%,data
The solver builds on a framework of Constrained Lagrangian Mechanics,background_claim
Marsden 1999,data
"Warp and weft, the perpendicular sets of strands that make up a textile, are prohibited from stretching by enforcing constraint equations, not by integrating spring forces",background_claim
a constraint-based method is inherently well-suited to operate in the quasi-inextensible regime,own_claim
numerical evidence,data
for this regime spring-based methods are known to experience a range of difficulties,background_claim
leading to the adoption of various strain limiting,background_claim
and strain rate limiting algorithms,background_claim
Provot 1995,data
viewed strain limiting as one of multiple velocity filtering passes,background_claim
2002,data
Bridson et al,data
The velocity filter paradigm enables the design of modular systems with mix-and-match flexibility,background_claim
We propose a novel CLM formulation that is implicit on the constraint gradient,own_claim
We prove that the implicit method’s nonlinear equations correspond to a minimization problem,own_claim
this result motivates a fast projection method for enforcing inextensibility,own_claim
§4.1,data
§4.2,data
§4.3,data
"the fast projection method easily incorporates with a code’s existing bending, damping, and collision models, to yield accelerated performance",own_claim
§5,data
for broad surveys on cloth simulation see,background_claim
House and Breen 2000,data
Choi and Ko 2005,data
The most general approach is to treat cloth as an elastic material,background_claim
Terzopoulos et al. 1987,data
Breen et al. 1994,data
Eberhardt et al. 1996,data
Baraff and Witkin 1998,data
Choi and Ko 2002,data
"To reduce visible stretching, elastic models typically adopt large elastic moduli or stiff springs, degrading numerical stability",background_claim
Hauth et al. 2003,data
To address the stiffness of the resulting differential equations,background_claim
"proposed implicit integration, allowing for large, stable timesteps",background_claim
Baraff and Witkin,data
1998,data
adaptive timestepping was required to prevent over-stretching,background_claim
adopted implicit-explicit,background_claim
"formulations, which treat only a subset of forces implicitly",background_claim
2000,data
2003,data
Eberhardt,data
Boxerman et al.,data
Our method is closely related to the IMEX approach,own_claim
stretching forces are singled out for special treatment,data
"These works, and many of their sequels, improved performance by allowing some perceptible stretch of the fabric",background_claim
In the quasiinextensible regime,background_claim
implicit methods encounter numerical limitations,background_claim
"the condition number of the implicit system grows with the elastic material stiffness, forcing iterative solvers to perform many iterations",background_claim
timestepping algorithms,background_claim
Volino and Magnenat-Thalmann 2001,data
Boxerman 2003,data
Hauth et al. 2003,data
Boxerman 2003,data
introduce undesirable numerical damping when the system is stiff,background_claim
Backward Euler,data
BDF2,data
an alternative to implicit integration is to reduce the stiff component and reformulate it as a constraint,background_claim
a stiff differential equation,data
Hairer et al. 2002,data
"In the smooth setting, the penalty-force and constraint-based approaches are equivalent in the limit of an infinitely stiff penalty term",background_claim
Bercovier and Pat 1984,data
"In the discrete setting, the constraint-based approach may be implemented with various iterative or global algorithms",background_claim
corrected edge lengths by iteratively displacing the incident vertices on stretched springs,background_claim
1995,data
Provot,data
simple to implement,background_claim
this approach suffers from poor convergence,background_claim
each displacement may stretch other incident springs,data
Provot’s method is used in cases where tight tolerances are not required,background_claim
Desbrun et al. 1999,data
Meyer et al. 2001,data
Fuhrmann et al. 2003,data
"used Provot’s approach in conjunction with strain rate limiting, bounding the rate of change of spring length per timestep to 10% of the current length",background_claim
Bridson et al.,data
2003,data
2002,data
used a non-linear Gauss-Seidel approach to enforce inextensibility on each constraint separately,background_claim
2006,data
Müller et al,data
iterative strain limiting algorithms behave essentially as Jacobi or Gauss-Seidel solvers,background_claim
Bridson et al.,data
iterative constraint enforcement requires a prohibitive number of iterations,background_claim
finely-discretized quasi-inextensible fabrics,data
§5,data
used Lagrange multipliers with CLM to treat stretching,background_claim
presented a hierarchical treatment of the constraint forces,background_claim
House et al,data
1996,data
The Lagrange multiplier approach alleviates the difficulties associated with poor numerical conditioning and artificial damping,background_claim
later encountered difficulties in handling collision response within the proposed framework,background_claim
House et al.,data
2000,data
"By building on the velocity-filter paradigm, our method handles both inextensibility and complex collisions",own_claim
which is subject to numerical drift that may be exacerbated by the discontinuities introduced during collision response,background_claim
formulated constraints as in,background_claim
Witkin et al. 1990,data
House et al,data
Drift may be attenuated using constraint-restoring springs,background_claim
the authors reported difficulty in adjusting the spring coefficients,background_claim
"one reason for their difficulties with drift was consequent to the linearization of the constraint equation, which permitted higher order errors to accumulate over time",own_claim
Our method does not linearize the constraint equations,own_claim
it is not subject to drift,own_claim
proposed triangle-based strain limiting together with a global stitching step for stable constraint enforcement,background_claim
Tsiknis,data
2006,data
used a linearized implicit formulation in order to improve stability of constrained dynamics,background_claim
Hong et al,data
2005,data
This allowed for larger timesteps and reduced the need for springs to maintain the cloth on the constraint manifold,background_claim
Both of these approaches enforce inextensibility only for strain exceeding 10%,background_claim
the tolerance for stretching is very small,data
modeling stretch response with spring-based or strain-limiting approaches is costly and even intractable,background_claim
constraint-based methods present a promising alternative,own_claim
Woven fabrics are not a continuous material,background_claim
they are a complex mechanical network of interleaving yarn,background_claim
Breen et al. 1994,data
the material’s warp and weft directions do not stretch perceptibly,background_claim
the constituent yarn is often quasi-inextensible,data
"In imposing inextensibility on all edges of a triangle mesh, one quickly runs into parasitic stiffness in the bending modes, or locking",background_claim
Zienkiewicz and Taylor 1989,data
locally-convex regions of a triangle mesh are rigid under isometry,data
we consider warpweft aligned quadrilateral meshes with a sparse number of triangles,own_claim
quad-dominant meshes,data
constraining all edges of a quad mesh may circumvent the rigidification that occurs with triangle meshes,own_claim
"under general mesh positions, the constraints are linearly independent, with a full-rank Jacobian treatable by a direct solver",own_claim
§4,data
fabric does indeed shear perceptibly,own_claim
"shearing modes excite only a mechanical interaction of warp and weft, and not a stretching of yarn",data
The complete model of in-plane deformation is compatible with an existing code’s quador triangle-based treatment of bending and collisions,own_claim
"With this simple formulation of inextensibility constraints in place, what is needed is an efficient method for enforcing constraints",own_claim
the numerical integration algorithm for constrained dynamics can be developed directly from the augmented Lagrange equation,background_claim
a quadrilateral mesh with n vertices and m edges,data
Marsden 1999,data
"we must discretize (3) and (4) in time using one of various schemes, each with benefits and drawbacks",own_claim
simulation,data
One may choose differing explicit or implicit schemes for the potential and the constraint forces,own_claim
Ascher et al. 1997,data
"One widely-used family of discretizations includes SHAKE and RATTLE, which extend the",background_claim
Verlet scheme,background_claim
"by considering a constraint force direction, −∇C(x) T , evaluated at the beginning of the timestep",background_claim
Hairer et al. 2002,data
enforcing length-preserving constraints with SHAKE fails for four common geometric configurations,background_claim
Figure 2,data
discusses these drawbacks in SHAKE but does not offer a solution,background_claim
Barth et al. 1994,data
These four cases correspond to rapid change in edge length or orientation,background_claim
"in practice, they occur often",background_claim
"resolves (Q1), (Q2) and (Q4)",own_claim
"evaluating the constraint direction, −∇C(x) T , at the end of the timestep",own_claim
Appendix A,data
"(Q3) remains, but is automatically remedied by decreasing the timestep",own_claim
the correction of the unconstrained step is due to the constraint forces,own_claim
Solving for an ICD step is costly,own_claim
there are many unknowns,data
"each Newton step requires the solution of an indefinite linear system, whose matrix is costly to assemble",data
we develop an approximation to ICD that addresses these drawbacks without sacrificing constraint accuracy or robustness,own_claim
§4.3,data
Methods of this form are known as manifold-projection methods,background_claim
Hairer et al. 2002,data
"Fast projection also uses a sequence of iterations, but it relaxes the requirement of SAP",own_claim
Projection onto the constraint manifold occurs at a fixed instant in time,own_claim
the assembly of this system is most efficient for diagonal,own_claim
mass matrices,own_claim
lumped,data
the linear system matrix involves M −1,data
"As with ICD/SAP, a fast projection step requires a linear solve",own_claim
fast projection’s system,own_claim
is smaller,own_claim
positive definite,own_claim
and sparser,own_claim
7,data
≈ 2n × 2n compared to ≈ 5n × 5n,data
"it is considerably cheaper to evaluate, assemble, and solve than its ICD/SAP counterpart",own_claim
fast projection exactly solves C = 0 while it approximates F = 0,own_claim
One important question is whether the fast projection’s error in F is acceptable,own_claim
F ∈ O(h 2 ) is considered acceptable in many contexts,background_claim
halt the Newton process after a single iteration,background_claim
Baraff and Witkin 1998,data
Choi and Ko 2002,data
the first iteration of the fast projection method eliminates first-order error,own_claim
Figure 3,data
The remaining iterations perturb F only to higher-order,own_claim
"We implement fast projection as a velocity filter, enabling easy integration into our existing cloth simulation system",own_claim
Algorithm 1,data
"The simple 1D chain resists stretching, but not bending",own_claim
Our method shows asymptotically better performance as permissible strain vanishes,own_claim
Figure 4a,data
our algorithm exhibits favorable performance as mesh resolution increases,own_claim
Figure 4b,data
there exists considerable difficulty in setting spring coefficients a priori to satisfy a given strain limit,own_claim
we are unable,own_claim
to set spring coefficients that achieve a prescribed small strain,own_claim
settings more pragmatic than a simple chain,data
the following draping experiment,data
This explains why spring methods are often treated with strain-limiting procedures,own_claim
the algorithm requires extremely small timesteps to converge,own_claim
each timestep is relatively inexpensive,own_claim
matrix re-assembly and re-factoring is infrequent,data
ICD is able to use larger timesteps than SHAKE and still converge,own_claim
the overall time is higher,own_claim
each timestep is substantially more expensive than a SHAKE step,data
"All CLM methods scale equally well, asymptotically better than the strain limiting approach, with the fast projection being the fastest",own_claim
the fast projection method outperforms the other methods,own_claim
allow strain of 1%,data
we refine the resolution,data
Figure 5b,data
"fast projection is capable of producing complex, realistic simulations of cloth",own_claim
8,data
Figures 7,data
"In addition to the direct benefit of fast projection on computation times, further benefits can be reaped from the resulting inextensibility",own_claim
the work of,background_claim
assumes inextensibility in order to accelerate bending computation,background_claim
Bergou et al.,data
2006,data
"In adopting the velocity-filtering viewpoint, we gain speed, simplicity, and software modularity—all key to a practical and maintainable implementation",own_claim
this comes at a theoretical cost,own_claim
there is no longer an efficient way to perfectly enforce both ideal inextensibility and ideal collision handling,own_claim
one filter must execute before the other,data
both ideals correspond to sharp constraints,data
To enforce both perfectly would require combining them in a single pass,own_claim
an elegant and exciting prospect from the standpoint of theory,own_claim
one which is likely to introduce considerable complexity and convergence challenges,own_claim
"Practically, we observe that this drawback does not cause artifacts in our simulation, for several reasons",own_claim
we assert that empirically our strain remains negligible,own_claim
the inextensibility filter does not assume that the constraint is maintained at the beginning of the timestep and errors are not accumulated during the simulation,own_claim
"we execute collision-handling last, to avoid glaring collision artifacts",own_claim
unlike constraint-enforcement approaches,background_claim
Witkin et al. 1990,data
"Despite the fact that the most common fabrics do not visibly stretch when draped over the body, the trend in our community is to favor stretching formulations based on penalty-springs",own_claim
The consequent numerical difficulties are then addressed by a combination of,own_claim
relaxing realism by allowing 10% strain,own_claim
adopting simple iterative strain and strain-rate algorithms that have poor convergence behavior,own_claim
and,own_claim
We provide one immediate and pragmatic approach to fast and realistic fabric simulation using CLM,own_claim
we hope that it will spur a renaissance of activity along this direction,own_claim
"With Constrained Lagrangian Mechanics as our alternative point of departure, we demonstrate a straightforward filter, with good convergence behavior, for enforcing inextensibility",own_claim
Several recent major movie releases have demonstrated that the motion of clothing adds greatly to the appearance of a virtual character,background_claim
This effect is particularly compelling for scenes that include both real and synthetic actors,background_claim
those with Yoda and Anakin Skywalker in Episode II: Attack of the Clones,data
the virtual clothing must move and be rendered so that it blends in seamlessly with the motion and appearance of the real clothing in the scene,background_claim
Realistic virtual clothing is possible now,background_claim
recent advances in cloth simulation techniques,background_claim
4,data
9,data
5,data
37,data
6,data
"The motion of fabric is determined by resistance to bending, stretching, shearing, external forces, aerodynamic effects, friction, and collisions",background_claim
with the right set of parameters good simulators produce very realistic looking motion,background_claim
choosing parameters that will provide a particular appearance remains a time consuming task,background_claim
Some parameters can be chosen based on the animator’s intuition about the fabric,background_claim
a knit fabric is more stretchy than a woven fabric,background_claim
linen,data
not all the parameters of a cloth simulator are intuitive or map directly to measurements that can made by a system,background_claim
Kawabata system,data
22,data
we address this problem by using optimization to automatically determine these parameters from a sequence of video frames of the fabrics under consideration,own_claim
"Cloth modeling has a long history, dating back to work in the textile community from the mid-1930s by Peirce",background_claim
27,data
Work on cloth modeling in computer graphics has focused on developing dynamic simulation techniques that are both realistic and fas,background_claim
Baraff and Witkin describe a cloth model that uses stiff springs with implicit time integration,background_claim
4,data
This model was subsequently adapted to reduce the over-damping due to implicit integration,background_claim
9,data
Explicit time integration approaches,background_claim
"use weaker springs for stretching and shearing, often explicitly limiting the amount of stretching",background_claim
18,data
29,data
6,data
Choi and Ko introduced a bending energy model that more accurately captures the fine creases and bends of cloth,background_claim
9,data
Lahey provides a comprehensive overview of cloth hysteresis models from the perspective of computational fabric mechanics,background_claim
23,data
Extensive work has also been done on modeling collisions and friction,background_claim
Cloth self-collision is handled either by untangling the cloth,background_claim
or by preemptively avoiding collisions,background_claim
37,data
39,data
3,data
30,data
20,data
6,data
Various potential field methods have been used for general collision detection and response,background_claim
33,data
32,data
little work has appeared in the computer graphics literature on estimating the parameters of these models so that they match the behavior of real fabrics,background_claim
Cloth parameter estimation has been studied in the textile community,background_claim
17,data
such methods have not yet enjoyed wide-spread use in the computer graphics community,background_claim
An important exception is the work by Breen,background_claim
who used the Kawabata system,background_claim
"to measure bending, shearing, and tensile parameters by subjecting a swatch of fabric to a series of mechanical tests and measuring the force needed to deform it into a standard set of shapes",background_claim
5,data
22,data
these measurements are problematic for computer graphics cloth simulation problems for two reasons,background_claim
the Kawabata system can provide accurate measurements,background_claim
there might not be a direct and simple mapping between the parameters for a particular cloth model and the Kawabata parameters,background_claim
the Kawabata system does not measure dynamic cloth parameters,background_claim
air drag,data
damping,data
which are of key importance for moving cloth,background_claim
"One promising approach for modeling cloth parameters is to automatically search for parameters that match real, observed cloth",background_claim
"Jojic and Huang fit parameters of a particlebased cloth model to fit a range scan of real cloth in a static rest configuration, draped over a sphere",background_claim
21,data
they attacked the problem of measuring the 3D geometry of an object from the resting shape of a piece of cloth draped over it,background_claim
a problem that we do not consider in this paper,own_claim
Jojic and Huang did not treat the problem of measuring dynamic parameters,background_claim
demonstrate accurate results across a range of fabric types,background_claim
More distantly related are techniques for computing the geometry of cloth from images,background_claim
Coarse estimates of the time-varying geometry of cloth can be computed using traditional stereo matching techniques by using two or more cameras and treating each time instant independently,background_claim
31,data
More accurate results may be obtained by projecting structured light patterns on the cloth,background_claim
40,data
"Rather than computing shape at every time instant independent from the next, it can be advantageous to integrate images over time to improve accuracy",background_claim
8,data
34,data
Two examples of promising work along these lines are Carceroni and Kutulakos,background_claim
and Torresani et al.,background_claim
both studies demonstrated reconstructions of moving cloth,background_claim
we can,own_claim
select a specific model that meets a set of criteria such as accuracy or simulation speed,own_claim
our framework for estimating cloth simulation parameters is independent of the cloth model,own_claim
"Our choice of a cloth model was guided by two principles, realism and practicality",own_claim
Because our intention was to apply the learned cloth model parameters to arbitrary garments with varying triangle resolution,own_claim
it was also important that the cloth parameters correctly scale to varying resolutions of cloth,own_claim
We wanted to use a model that was sophisticated enough to capture the detailed dynamic behavior found in real fabrics but still straightforward to implement,own_claim
We used the model described by Baraff and Witkin as the basis for our cloth simulator,own_claim
This model has sufficient richness to produce a wide variety of cloth behaviors,background_claim
making clothing modelling easier,background_claim
The underlying meshing is triangular,data
4,data
parameters recovered on one mesh,background_claim
can safely be transferred to another,background_claim
its input parameters are independent of meshing,data
nonlinear models,background_claim
potentially capture more realistic details of cloth,background_claim
there is no straightforward way to scale the parameters of these models to meshes of varying resolutions,background_claim
9,data
future application of our parameterestimation framework to other scale-invariant cloth models will provide even more realistic results,background_claim
energy should scale linearly with triangle area to ensure scale independence,own_claim
footnote 5,data
4,data
we need to be careful when substituting C(x) for stretch and shear into eq. 1 that the resulting formula is linear in a rather than quadratic,own_claim
a linear drag model such as that used in previous cloth work,own_claim
was not able to capture dynamic aspects of cloth,own_claim
our experiments,data
4,data
9,data
we developed a simple nonlinear alternative,own_claim
In order to add additional air-drag degrees of freedom to our cloth model without resorting to fully modeling aerodynamics,own_claim
25,data
The linear term         is merely Stokes’s law 1,own_claim
the quadratic term matches better the experimental behavior of macroscopic bodies in low Reynold’s number flow,own_claim
14,data
The addition of the |v N | 2 term in the denominator which makes the force asymptotic as v N → ∞ was partially motivated by the observed phenomenon of drag crisis,own_claim
14,data
implicit integration introduced damping which could not be eliminated by optimizing cloth parameters,own_claim
We had more success in matching realistic cloth motions by using higher-order explicit methods,own_claim
we used a first-order implicit Euler time integration scheme similar to the one described by Baraff and Witkin,own_claim
4,data
The results in this paper all use an adaptive 4thorder accurate Runge-Kutta methods with embedded error estimation,own_claim
2,data
this method offers the advantages of familiarity and automatic bounding of error,background_claim
it is rather slow,background_claim
recent work suggests that using 2nd-order backward differences,background_claim
Newmark schemes,background_claim
may be a better choice,background_claim
9,data
7,data
separating repulsion forces from the cloth internal dynamics and applying them outside the Runge-Kutta solver affected stability and resulted in visible artifacts,own_claim
"we apply repulsion forces inside the solver loop, so that the solver’s own internal error estimation can remove these artifacts",own_claim
The drawback of this technique is speed,own_claim
the system must check for collisions every time it evaluates the state derivatives,data
We use a perceptually motivated metric to compare the motion of cloth in simulation with a video sequence of real fabric motion,own_claim
Real fabrics exhibit a wide variety of motion ranging from soft and flowing,background_claim
to stiff,background_claim
satin,data
linen,data
Our metric captures the complex dynamics of cloth motion,own_claim
helps to distinguish between different fabrics,own_claim
Researchers in computational neurobiology hypothesize that the human perceptual system is sensitive to moving edges in video,background_claim
"Studies have shown that the receptive fields of simple cells in the macaque cortex act as edge or line detectors, responding to oriented edges or lines in natural scenes",background_claim
11,data
12,data
36,data
19,data
35,data
10,data
"In cloth, these edges correspond to folds, which are regions of high variation in shape",own_claim
"our perceptually motivated metric for cloth compares two video sequences, one from simulation and one from the real world, and returns a number that measures the differences in their folds",own_claim
Their technique can handle lighting effects caused by diffuse inter-reflections in cloth,background_claim
most fabrics have very complicated reflectance properties,background_claim
Haddon and Forsyth,background_claim
describe a learning approach for detecting and grouping folds (and grooves) in images of fabrics,background_claim
15,data
16,data
we normalize the effects of lighting and material reflectance by projecting a structured light pattern of horizontal stripes onto the fabric,own_claim
We define the resulting orientation image as an angle map,own_claim
Fig. 1,data
We threshold the gradient of the angle map to get a gradient mask M k for each frame of video,own_claim
Fig. 1,data
"The gradient mask is non-zero at regions of high gradients, corresponding to folds, and zero at planar regions",own_claim
Our metric computes the frame by frame sum of squared differences (SSD) between masked angle maps in simulation with video,own_claim
"We pre-multiply this difference with the gradient mask, which helps to emphasize the differences in fold regions over planar regions",own_claim
Fig. 2,data
we penalize the silhouette mismatch between the simulation and the video of real cloth,own_claim
This penalty is proportional to the difference between the two silhouettes,own_claim
The error across the entire sequence of length N frames is given by N E = ∑ E k ( 9 ) k=1,own_claim
We use optimization to estimate the parameters of the cloth simulator from video,own_claim
"we look at the error space of the angle map metric, which gives us useful insight about the parameters of the system",own_claim
"it is evident that the error space is fairly noisy, with many local minima, motivating the need for a global optimization technique",own_claim
the figure,data
Fig. 3,data
it relates a small change in parameter value to a change in the error value,own_claim
The importance or sensitivity of a parameter p depends on its local gradient ∂E ∂p,own_claim
we estimate the relative importance of each parameter for a given experiment by performing a perturbation analysis at the solution point,own_claim
"we robustly compute the variability of the param∂p eters, defined as ∂E",own_claim
"To compute the variability, we perturb each parameter of the simulator individually up to ±0.20% of its value, compute the error and fit a quadratic to the data",own_claim
Fig. 4,data
the variability is computed as the change in parameter values that results in a 1% change in the error,own_claim
Parameters with low variability have high sensitivity and are estimated reliably for a given experiment,own_claim
The likelihood that it will take a step in a direction that is not locally optimal is a function of the temperature,own_claim
Fig. 5,data
We found it useful to reset the simplex with the current best solution,own_claim
the temperature reduces by a factor of 3,data
We use simulated annealing to find the parameters that minimize the error function given in eq. 9,own_claim
We chose to use the continuous simulated annealing method presented in Press et a,own_claim
28,data
combines the Metropolis algorithm with the downhill simplex method for continuous n-variable optimization,background_claim
This corresponds to a very coarse sampling of the parameter space,own_claim
this strategy allows the optimizer to locate a good minimum of the space,own_claim
"The experiments are easy to perform, capture, and repeat",own_claim
they demonstrate the complex dynamics of cloth motion,own_claim
our experiments were designed to be a calibration setup for estimating the static and dynamic parameters of a cloth simulator,own_claim
These fabrics exhibit a wide range of static and dynamic behavior and span a large range of real fabrics,own_claim
different fabrics attain different static shapes,own_claim
a fixed separation between the top corners,data
Fig. 6,data
The static test give a good estimate for the static stiffness and bend parameters,own_claim
real fabrics exhibit a wide range of interesting motions,own_claim
accompanying videos,data
Different fabrics also exhibit different types of motion for the same input excitation,own_claim
This gives reasonable estimates for cloth parameters while avoiding the need to optimize directly on complex fabric geometries,own_claim
involving many collisions,own_claim
skirts,data
We designed the waving motion to roughly match the types of motion occurring in real garments,own_claim
skirts,data
Each trial took approximately 50 hours to converge on a 2.8GHz Intel Xeon processor,own_claim
we started the optimizations on the two trials,own_claim
with the same initial guess and chose parameters,own_claim
that minimized the total error on the two trials,own_claim
a very good visual match between the simulations with their counterpart real fabrics,own_claim
Figs. 8,data
9,data
there is a significant disparity in the final optimized values from the two trials,own_claim
we see that the final error values are very close,own_claim
Table 2,data
the table,data
We get consistent estimates for parameters that have lower variability,own_claim
bend,data
stretch,data
Parameters with high variability are estimated poorly,own_claim
their values do not contribute sufficiently to the error,own_claim
"static tests cannot be used to estimate dynamic parameters like stretch and shear damping or air drag and motivates the waving test, which excites both the static and waving parameters",own_claim
The final values of the parameters from the two trials differ in part,own_claim
the variability of the parameters is still fairly high,own_claim
Fig. 11,data
Different motions or larger sequence might further reduce the variability of the parameters,own_claim
the six cloth stiffness and damping parameters and three air drag parameters,own_claim
We optimize for nine parameters in the waving test,own_claim
Fig. 10,data
This approach seems to produce plausible results with skirts and other validation experiments,own_claim
a more general solution for parameter identification using our framework is to simultaneously optimize across multiple trials of different experiment,own_claim
the minimum corresponds to a visually compelling match,own_claim
Fig. 12,data
Fig. 13,data
each fabric in simulation has a minimum error when compared to its counterpart in reality,own_claim
Fig. 14,data
our approach could be potentially useful for recognizing different types of fabrics in video,own_claim
Fig. 14,data
a good visual match between corresponding frames in simulation and video,own_claim
Fig. 10,data
accompanying videos,data
the parameters obtained from optimization generalize well on new sequences,own_claim
The videos,data
the parameters obtained from our optimization approach approximately capture the static shape and dynamic properties of skirts of different materials,own_claim
The results,data
Fig. 15,data
Fig. 16,data
the optimizer could identify appropriate simulation parameters from those tests,own_claim
These parameters produced four distinct and recognizable fabrics when applied to a more complex simulation of a skirt as it was driven by motion capture data from a human figure,own_claim
The cloth model was not the main focus of this research,own_claim
in early versions of the system it was often the bottleneck in achieving appealing results,own_claim
"To match a video sequence accurately, the cloth physics model as well as the collision algorithms must be chosen carefully",own_claim
Instabilities in the collision handling will cause perceptible quivering in the motion of cloth,own_claim
extra damping introduced by the integration method makes crisp folds impossible to match,own_claim
The parameters must also be independent of the resolution of the mesh so that they can be identified on low resolution swatches and applied to higher resolution garments,own_claim
Progress is being made in these areas,background_claim
and cloth models are continually improving,background_claim
Bridson et al.,background_claim
introduces a scale-independent bend model with encouraging results,background_claim
7,data
Our cloth model does not diverge significantly from previous models discussed in the literature,own_claim
Our only major addition was a simple nonlinearity we introduced into the drag model,own_claim
our approach should generalize to any parametrized cloth model that produces a sufficiently rich set of physically realistic motions,own_claim
the skirt is far more complex than the swatches that were used to determine the parameters,own_claim
it is not as complex as many garments,own_claim
a form-fitting pair of pants,data
a tailored blazer,data
"choosing the parameters via optimization on small, flat swatches may not be sufficient",own_claim
more complex garments,data
"the shape of the garment is determined by darts, pleats and by the interplay of different fabrics",data
More complex garments may require the hand design of additional tests that mimic particular behaviors or elements of the garment in isolation,own_claim
"the model might need extra parameters to handle anisotropic effects, hysteresis and coupling effects",own_claim
all of which would need specialized tests,own_claim
we tried a number of other metrics,own_claim
stretching along one direction causing shrinking in the other direction,data
comparing the overlap of the silhouettes,data
the distance function between silhouette edges,data
using information from internal edges marked on the fabric,data
"The metric that measures folds and silhouettes, in concert with the projector for the light stripes, proved to be a simple and effective metric that far outperformed our earlier attempts",own_claim
The space of possible metrics is vast,background_claim
tight control of the initial conditions is unlikely,own_claim
a statistical metric might be preferable,own_claim
we were to optimize on more complicated garments,data
Such a metric might,own_claim
compute the average number of folds across a time sequence rather than looking for a fold to appear at a particular location on the swatch,own_claim
Physically-based cloth animation has been a problem of interest to the graphics community for more than a decade,background_claim
Early work by Terzopoulos et al,background_claim
and Terzopoulos and Fleischer,background_claim
on deformable models correctly characterized cloth simulation as a problem in deformable surfaces,background_claim
applied techniques from the mechanical engineering and finite element communities to the problem,background_claim
17,data
15,data
16,data
other research groups,background_claim
have taken up the challenge of cloth,background_claim
4,data
20,data
21,data
3,data
5,data
specific details vary,background_claim
collision detection and constraint methods,data
numerical solution methods,data
underlying representations,data
there is a deep commonality amongst all the approaches,background_claim
"physically-based cloth simulation is formulated as a time-varying partial differential equation which, after discretization, is numerically solved as an ordinary differential equation",background_claim
ẍ = M −1 − ∂E + F . ∂x,data
we describe a cloth simulation system that is much faster than previously reported simulation systems,own_claim
Our system’s faster performance begins with the choice of an implicit numerical integration method to solve equation (1),own_claim
the use of implicit integration methods in cloth simulation is far from novel,background_claim
applied such methods to the problem,background_claim
initial work by Terzopoulos et al.,background_claim
research on cloth simulation has generally relied on explicit numerical integration,background_claim
15,data
16,data
17,data
Euler’s method,data
Runge-Kutta methods,data
to advance the simulation,background_claim
analogous methods,background_claim
energy minimization,data
steepest-descent,data
3,data
10,data
This is unfortunate,own_claim
This results in a “stiff” underlying differential equation of motion,background_claim
12,data
Cloth strongly resists stretching motions,background_claim
being comparatively permissive in allowing bending or shearing motions,background_claim
Explicit methods are ill-suited to solving stiff equations,background_claim
they require many small steps to stably advance the simulation forward in time,data
the computational cost of an explicit method greatly limits the realizable resolution of the cloth,background_claim
"For some applications, the required spatial resolution",background_claim
can be quite low,background_claim
a resolution of only a few hundred particles,background_claim
can be sufficient when it comes to modeling flags or tablecloths,background_claim
To animate clothing,background_claim
requires much higher spatial resolution to adequately represent realistic,background_claim
wrinkling and folding configurations,background_claim
implicit methods for cloth overcome the performance limits inherent in explicit simulation methods,own_claim
a subject which has been largely ignored thus far,background_claim
"We also introduce a simple, unified treatment of damping forces",own_claim
our implementation differs greatly from the implementation by Terzopoulos et al.,own_claim
15,data
17,data
A key step in our simulation process is the solution of an O(n) × O(n) sparse linear system,data
"the number of time steps per frame tends to increase along with the problem size, for an explicit method",background_claim
the cost of an explicit step is also O(n),data
explicit methods for cloth require time O(n 2 )—or worse,own_claim
which for large simulations,background_claim
used an “alternating-direction” implicit (ADI) method,background_claim
12,data
The price,background_claim
is that some of the forces in the system,background_claim
"are treated explicitly, not implicitly",background_claim
The speed,own_claim
with which our sparse linear systems can be robustly solved,own_claim
has convinced us that there is no benefit to be gained from using an ADI method instead,own_claim
An ADI method generates a series of tightly banded,background_claim
linear systems rather than one large sparse system,background_claim
quickly solved,background_claim
we treat all forces as part of the implicit formulation,own_claim
numerical stability has not been an issue for our simulato,own_claim
Our formulation for directly imposing and maintaining constraints is harmonious with the use of an extremely fast iterative solution algorithm,own_claim
Iterative methods do not in general solve linear systems exactly,background_claim
A property of our approach,own_claim
is that the constraints are maintained exactly,own_claim
our simulator enforces constraints without introducing additional penalty terms in the energy function E or adding Lagrange-multiplier forces into the force F,own_claim
This sort of direct constraint treatment is trivial,own_claim
equation (1) is integrated using explicit techniques,data
is problematic,own_claim
implicit methods,data
The combination of implicit integration and direct constraint satisfaction is very powerful,own_claim
this approach almost always allows us to take large steps forward,own_claim
most of our simulations require on average from two to three time steps per frame of 30 Hz animation,own_claim
"in simulating a 6, 000 node system, the solver takes only 50–100 iterations to solve the 18, 000 × 18, 000 linear system formed at each step",data
The large step sizes complement the fact that the CG solver requires relatively few iterations to converge,own_claim
the running time of our simulator is remarkably insensitive to the cloth’s material properties,own_claim
All of the above advantages translate directly into a fast running time,own_claim
we demonstrate results similar to those in Breen et al,data
with a running time just over 2 seconds per frame on an SGI Octane R10000 195 Mhz processor,data
and Eberhardt et al,data
exhibiting complex wrinkling and folding behavior on both key-framed and motion-captured characters,own_claim
we show garments,own_claim
shirts,data
pants,data
skirts,data
on a dancing character at a cost of 10 seconds per frame,data
"a long skirt with 4,530 nodes",data
with a cost varying between 8 to 14 seconds per frame,data
"a shirt with 6,450 nodes",data
This work recognized the need for damping forces,background_claim
only a simple viscous drag force −k x was used,background_claim
discretized cloth as a rectangular mesh,background_claim
Terzopoulos et al.,background_claim
15,data
17,data
work by Carignan et al.,background_claim
described a cloth simulation system using rectangular discretization and the same formulation as Terzopoulos et al.,background_claim
4,data
Carignan et al. recognized the need for damping functions which do not penalize rigidbody motions of the cloth,background_claim
they added a force which damps cloth stretch and shear,background_claim
no mention is made of damping forces,background_claim
which focuses mainly on collision detection/response and uses a triangular mesh,background_claim
Later work by the same group includes Volino et al.,background_claim
20,data
gives the only published results we know of for simulated garments on moving characters,background_claim
the accumulated work by this group,background_claim
depart completely from continuum formulations of the energy function,background_claim
Breen et al.,background_claim
3,data
describe what they call a “particlebased” approach to the problem,background_claim
By making use of real-world cloth material properties,background_claim
they produced highly realistic static images of draped rectangular cloth meshes with reported resolutions of up to 51 × 51 nodes,background_claim
The focus of this work is on static poses for cloth,background_claim
"their simulation process is best described as energy minimization, although methods analogous to explicit methods are used",background_claim
Speed was of secondary concern in this work,background_claim
obtain similarly realistic results,background_claim
dropping the computational cost to approximately 20–30 minutes per frame on an SGI R8000 processor,background_claim
Refinements by Eberhardt et al.,background_claim
5,data
focuses on improving the performance of explicit methods by a post-step modification of nodal positions,background_claim
Provot,background_claim
13,data
the convergence properties of this method are unclear,background_claim
He iteratively adjusts nodal positions to eliminate unwanted stretch,background_claim
A more comprehensive discussion on cloth research can be found in the survey paper by Ng and Grimsdale,background_claim
9,data
this simple test may miss some collisions,own_claim
relative velocities are extremely high,data
analytically checking for intersection between previous and current positions can guarantee that no collisions are missed,own_claim
The most critical forces in the system are the internal cloth forces which impart much of the cloth’s characteristic behavior,own_claim
describes the use of the Kawabata system of measurement for realistic determination of the in-plane shearing and out-of-plane bending forces in cloth,background_claim
Breen et al.,background_claim
3,data
cloth does not stretch appreciably under its own weight,background_claim
normal conditions,data
This requires the stretch force to have a high coefficient of stiffness,own_claim
it is the stretch force that is most responsible for the stiffness of equation (1),own_claim
A common practice in explicitly integrated cloth systems is to improve running time by decreasing the strength of the stretch force,background_claim
this leads to “rubbery” or “bouncy” cloth,own_claim
"Our system uses a very stiff stretch force to combat this problem, without any detrimental effects on the run-time performance",own_claim
the shear and bend force stiffness coefficients depend on the material being simulated,own_claim
the stretch coefficient is essentially the same (large) value for all simulations,own_claim
Complementing the above three internal forces are three damping forces,own_claim
we formulate damping forces that subdue any oscillations having to do with,own_claim
section 5,data
The damping forces do not dissipate energy due to other modes of motion,own_claim
"Additional forces include air-drag, gravity, and user-generated generated mouse-forces",own_claim
Cloth/cloth contacts generate strong repulsive linear-spring forces between cloth particles,own_claim
"the acceleration ẍ i of the ith particle is simply ẍ i = f i /m i , where m i is the ith particle’s mass",own_claim
Combining all forces into a net force vector f,data
"to accommodate pieces of cloth that have been topologically seamed together (such as a sleeve), particles lying on the seam must have multiple (u, v) coordinates",own_claim
"each particle has a unique (u, v) coordinate",own_claim
"The (u, v) coordinates are useful for texturing",own_claim
"Defining the diagonal mass matrix M ∈ IR 3n×3n by diag(M) = (m 1 , m 1 , m 1 , m 2 , m 2 , m 2 , . . . , m n , m n , m n )",data
"ẍ = M −1 f(x, x)",own_claim
generates large unbanded sparse linear systems,own_claim
The use of an implicit integration method,own_claim
next section,data
We solve these systems through a modified conjugate gradient (CG) iterative method,own_claim
section 5,data
CG methods exploit sparsity quite easily,background_claim
they are based solely on matrix-vector multiplies,data
require only rudimentary sparse storage techniques,background_claim
The sparsity of the matrix generated by the implicit integrator is best represented in block-fashion,own_claim
"for a system with n particles, we deal with an n × n matrix, whose non-zero entries are represented as dense 3 × 3 matrices of scalars",data
The overall implementation of sparsity is completely straightforward,own_claim
"An individual particle’s position and velocity can be completely controlled in either one, two, or three dimensions",own_claim
Particles can thus be attached to a fixed or moving point in space,own_claim
constrained to a fixed or moving surface or curve,own_claim
The constraint techniques we use on individual particles work just as well for collections of particles,own_claim
we could handle cloth/cloth intersections using the technique described,own_claim
section 5,data
the cost is potentially large,own_claim
we have chosen to deal with cloth/cloth contacts using penalty forces,own_claim
The implicit solver easily tolerates these stiff forces,own_claim
our goal is to determine a new position x(t 0 + h) and velocity x(t 0 + h) at time t 0 + h,own_claim
the known position x(t 0 ) and velocity x(t 0 ) of the system at time t 0,data
we must first transform equation (2) into a first-order differential equation,own_claim
"This is accomplished simply by defining the system’s velocity v as v = x and then writing                    3           dt d x x = dt d v x = M −1 f(x, v v)",own_claim
the step size h must be quite small to ensure stability when using this method,own_claim
previously discussed,data
The difference in the two methods is that the forward method’s step is based solely on conditions at time t 0 while the backward method’s step is written in terms of conditions at the terminus of the step itself,own_claim
The implicit backward Euler method appears similar at first,own_claim
"The explicit forward Euler method applied to equation (3) approximates x and v as x v = h M v −1 0 f 0         where the force f 0 is defined by f 0 = f(x 0 , v 0 )",data
"x and v are approximated by                    4           v x = h M −1 f(x 0 v + 0 + x, v v 0 + v)",data
The forward method requires only an evaluation of the function f,data
the backward method requires that we solve for values of x and v that satisfy equation (4),data
"rather than solve this equation exactly (which would require iteration) we apply a Taylor series expansion to f and make the firstorder approximation ∂f ∂f f(x 0 + x, v 0 + v) = f 0 + ∂x x + ∂v v",own_claim
Equation (4) is a nonlinear equation,data
"the backward Euler step consists of evaluating f 0 , ∂f/∂x and ∂f/∂v; forming the system in equation (6); solving the system for v; and then updating x and v",own_claim
"the derivative ∂f/∂x is evaluated for the state (x 0 , v 0 ) and similarly for ∂f/∂v",data
v x = h M −1 (f 0 + v 0 ∂x ∂f + x v + ∂v ∂f v),data
Substituting this approximation into equation (4) yields the linear system,data
Taking the bottom row of equation (5) and substituting x = h(v 0 + v) yields v = hM −1 f 0 + ∂x ∂f h(v 0 + v) + ∂v ∂f v,data
I − hM −1 ∂v ∂f − h 2 M −1 ∂x ∂f v = hM −1 f 0 + h ∂x ∂f v 0,data
"Letting I denote the identity matrix, and regrouping, we obtain",data
which we then solve for v,data
"Given v, we trivially compute x = h(v 0 + v)",data
The method is called “backward” Euler,own_claim
"starting from the output state (x 0 + x, v 0 + v) and using a forward Euler step to run the system backward in time",data
Forward Euler takes no notice of wildly changing derivatives,own_claim
proceeds forward quite blindly,own_claim
forces one to find an output state whose derivative at least points back to where you came from,own_claim
Backward Euler,own_claim
and then taking derivatives is impractical,own_claim
Expressing the energy E as a single monolithic function,own_claim
A better approach is decompose E into a sum of sparse energy functions,own_claim
even decomposing E into sparse energy functions is not enough,own_claim
Energy functions are an undesirable starting point,own_claim
sensible damping functions cannot be derived from energy functions,data
"we define internal behavior by formulating a vector condition C(x) which we want to be zero, and then defining the associated energy as k C(x) T C(x) where k is a stiffness constant",own_claim
"An added bonus is that starting from this vector-based energy description tends to result in a simpler, more compact, and more easily coded formulation for ∂f/∂x than proceeding from an energy function in which the structure of C has been lost",own_claim
"We can now easily describe the internal forces acting on the cloth, by just writing condition functions",own_claim
Forces and their derivatives are easily derived,own_claim
equations (7),data
(8),data
"it will be convenient to pretend momentarily that we have a single continuous function w(u, v) that maps from plane coordinates to world space",own_claim
Some previous continuum formulations have modeled stretch energy along an axis as essentially (w u T w u − 1) 2,background_claim
15,data
16,data
17,data
4,data
We find this to be needlessly stiff,own_claim
"near the rest state, the force gradient",own_claim
"is quite small, which partially negates the advantage implicit integration has in exploiting knowledge of the force gradient",own_claim
"A quadratic model for energy is, numerically, a better choice",own_claim
We have found the ability to control shrink/stretch anisotropically to be an indispensable modeling tool,own_claim
"we might decrease b v near the end of a sleeve, inducing a tight cuff",own_claim
on a sweatshirt,data
We can measure the extent to which cloth has sheared in a triangle by considering the inner product w u T w v,own_claim
this product is zero,own_claim
rest state,data
we need not normalize,own_claim
the stretch term prevents the magnitudes of w u and w v from changing overly much,data
the product w u T w v is a reasonable approximation to the shear angle,own_claim
the small angle approximation,data
the condition C should not be scaled by the triangles’ areas,own_claim
increases at the same rate that the triangle’s area decreases,own_claim
the square of the curvature,own_claim
Rectangular meshes make it simple to treat bending anisotropically,own_claim
The uv coordinates associated with particles make this possible for triangular meshes as well,own_claim
The stiffness weighting for this edge should simply be k u ( u) 2 + k v ( v) 2,own_claim
u = u i − u j and v = v i − v j,data
the edge between the triangles be between particles i and j,data
material for which bending in the u and v directions are weighted by stiffnesses k u and k v,data
These forces and their gradients are easily derived,own_claim
The energies we have just described are functions of position only,own_claim
is critically dependent on well-chosen damping forces that are a function of both position and velocity,background_claim
Robust dynamic cloth simulation,background_claim
the strong stretch force must be accompanied by a suitably strong damping force,own_claim
we are to prevent anomalous in-plane oscillations from arising between connected particles,data
this strong damping force must confine itself solely to damping in-plane stretching/compressing motions,own_claim
stretch damping should not arise due to motions that are not causing stretch or compression,own_claim
"treatment of cloth used a simple viscous damping function which dissipated kinetic energy, independent of the type of motion",background_claim
Terzopoulos et al.’s,background_claim
16,data
17,data
"improved upon this somewhat, borrowing a formulation due to Platt and Barr",background_claim
Carignan et al.,background_claim
4,data
11,data
does not match the quartic energy functions of their continuum formulation,background_claim
their damping function,background_claim
we describe a general treatment for damping that is independent of the specific energy function being damped,own_claim
this section,data
This is an easy trap to fall into,own_claim
It is tempting to formulate a damping function for an energy function E(x) by measuring the velocity of the energy,own_claim
it gives nonsensical results,own_claim
"E  ̇ is zero when E is at its minimum, regardless of the system’s velocity x = v",own_claim
E  ̇ = (∂E/∂x) T x,data
"At an equilibrium point of E, the gradient ∂E/∂x vanishes",own_claim
E  ̇ is always too small near the system’s rest state,own_claim
basing the damping force on E  ̇ is not what we want to do,own_claim
"the damping function should be defined not in terms of the energy E, but in terms of the condition C(x) we have been using to define energies",own_claim
"The force f arising from the energy acts only in the direction ∂C(x)/∂x, and so should the damping force",own_claim
the damping force should depend on the component of the system’s velocity in the ∂C(x)/∂x direction,own_claim
d = −k d ∂C(x) ∂x C(x),own_claim
the damping force d associated with a condition C have the form,own_claim
the damping strength should depend on (∂C(x)/∂x) T x = C(x),own_claim
This neatly parallels the fact that f = −k s ∂x C(x),own_claim
we can now add accompanying damping forces by applying equation (11),own_claim
"the condition functions C we have defined in this section for stretch, bend and shear forces",data
"we find it expedient simply to leave this term out, thereby restoring symmetry",own_claim
section 5.2,data
∂x ∂d i j = −k d ∂C(x) ∂x i ∂ C(x) ∂x  ̇ j T + ∂ ∂x C(x) i ∂x j C(x),own_claim
we obtain,own_claim
Differentiating equation (11),data
we cannot expect ∂d/∂x to be symmetrica,own_claim
∂d/∂x is not a second derivative of some function,data
This simplification is clearly not physically justifiable,own_claim
we have not observed any ill effects from this omission,own_claim
the result is symmetrical without dropping any terms,own_claim
C(x)  ̇ = (∂C(x)/∂x) T v,data
∂ C(x)  ̇ ∂ ∂C(x) T ∂C(x) = v =,own_claim
∂v ∂v ∂x ∂x,own_claim
∂v ∂d i j = −k d ∂C(x) ∂x i ∂ C(x) ∂v  ̇ j T = −k d ∂C(x) ∂x i ∂C(x) ∂x j T,own_claim
The techniques we describe in this section could be used for multi-particle constraints,own_claim
constraints that share particle would need to be merged,own_claim
a set of four-particle constraints,own_claim
"might merge to form a single constraint on arbitrarily many particles, which would be expensive to maintain",own_claim
vertex/triangle or edge/edge contacts in the cloth,data
we handle cloth/cloth contacts with strong springs,own_claim
"and “position alteration,”",own_claim
section 6,data
"it is the particle’s acceleration, or equivalently, the change in the particle’s velocity, that is constrained",own_claim
the differential nature of our formulation,data
we are explicitly setting the particle’s velocity,own_claim
we are constraining the particle’s velocity along either two or one mutually orthogonal axes,own_claim
the particle is constrained in all three dimensions,data
the constraint is in two or one dimensions,data
An obvious and quite exact method for constraining a particle is to reduce the number of coordinates describing the particle’s position and velocity,own_claim
A completely constrained particle would have no coordinates,own_claim
a particle with one dimension of constraint would have two coordinates,own_claim
This is possible,own_claim
it complicates the system immensely,own_claim
we change the number of coordinates per particle,data
"we alter the size of the derivative matrices in equation (6), as well as the sparsity pattern",own_claim
this is most unappealing,own_claim
the transient nature of contact constraints between cloth and solids,data
The computation of the derivative matrices’ entries is also greatly complicated,own_claim
we must now introduce extra Jacobian matrices that relate a particle’s reduced coordinates to its motion in world-space,own_claim
correct constraint-release behavior between cloth and solid objects is difficult to achieve using a reduced coordinate formulation,own_claim
we immediately rejected this method of constraints,own_claim
We could constrain particles through the use of strong energy functions,own_claim
do not carry as much weight,own_claim
the usual objections to enforcing constraints with springs,own_claim
found it to be a not unreasonable constraint enforcement mechanism,own_claim
our entire formulation is geared to handle stiffness,data
We tried this for a time,data
penalty methods do not enforce constraints exactly,background_claim
they do add some additional stiffness to the system,background_claim
we turned away from penalty methods except in the case of cloth/cloth interactions,own_claim
the mechanism we describe enforces constraints exactly,data
adds no extra stiffness,data
We could introduce additional constraint forces,own_claim
into our system to satisfy the constraints,own_claim
and extra equations,own_claim
This involves augmenting the linear system of equation (6) with extra variables,own_claim
this turns a positive definite system into an indefinite system,own_claim
iterative methods such as CG will need to square the system first,own_claim
doubling the running time,own_claim
degrading the numerical conditionining of the linear system,own_claim
an iterative method will generally not enforce the constraints exactly without a large number of iterations,background_claim
the constraint method we describe steps past these difficulties,own_claim
we turned away from using Lagrange multipliers,own_claim
A direct method for solving the augmented system would,own_claim
avoid this problem,own_claim
The idea behind our constraint enforcement mechanism is described quite simply,own_claim
"the actual implementation is somewhat more complicated, to maximize performance",own_claim
A dynamic simulation usually requires knowledge of the inverse mass of objects,own_claim
"the appearance of M −1 , and not M in equation (6)",data
it becomes trivial to enforce constraints by altering the mass,own_claim
inverse mass is used,data
we give the particle an infinite mass,own_claim
making it ignore all forces exerted on it,own_claim
we take 1/m i to be zero,data
Complete control over a particle’s acceleration is thus taken care of by storing a value of zero for the particle’s inverse mass,own_claim
we need not always do so,own_claim
we normally think of a particle’s mass as a scalar,own_claim
a particle is prevented from accelerating along p by using an inverse mass matrix 1 (I − m i pp T ),own_claim
(I − pp T )p = 0,data
a unit vector p ∈ IR 3,data
we prevent a particle from accelerating in either the p or q direction by using the inverse mass matrix 1 (I − pp T − qq T ),own_claim
two mutually orthogonal unit vectors p and q,data
"By allowing constrained particles to have these sorts of inverse masses, we can build constraints directly into equation (6)",own_claim
We are not limited to constraining particles to have zero accelerations in certain directions,own_claim
we control exactly what the change in velocity is along the constrained directions,own_claim
we can choose any value of z i for a completely constrained particle,own_claim
all directions are constrained,data
it has no constrained directions,data
unconstrained particle must have z i = 0,own_claim
we rewrite equation (6) to directly enforce constraints,own_claim
"every particle i, let z i be the change in velocity we wish to enforce in the particle’s constrained direction(s)",data
we will obtain a v which is consistent with our constraints,own_claim
I − hW ∂v ∂f − h 2 W ∂x ∂f v = hW f 0 + h ∂x ∂f v 0 + z,data
we solve,data
for v,data
partially constrained particles will have a v i whose component in the constrained direction(s) is equal to z i,own_claim
Completely constrained particles will have v i = z i,own_claim
it worked exactly as advertised,own_claim
We initially implemented constraints using equation (14),data
we solved equation (14) using a direct method (Gaussian elimination) without any problems,own_claim
very small test systems,data
"we planned to use the iterative, sparsity-exploiting CG method, which immediately presents us with a problem",own_claim
larger systems,data
equation (14) is not a symmetric linear system,data
neither is equation (6) unless all particles have the same mass,data
require symmetric matrices,background_claim
CG methods,background_claim
We could apply a CG method to the unsymmetric matrix of equation (14) by use of the “normal equations”,own_claim
this involves multiplying the matrix of equation (14) with its transpose which doubles the cost of each iteration while squaring the condition number of the system,own_claim
14,data
We decided that using a CG method to solve the unsymmetric problem was not acceptable,own_claim
applying a CG method to equation (6) is not difficult,own_claim
we can transform this equation to 6,data
without constraints,data
they work best on positive definite symmetric matrices,own_claim
we cannot apply the same transformation to equation (14),own_claim
W is singular,data
we cannot multiply through by W −1,own_claim
"The solution to the problem of asymmetry is to modify the CG method so that it can operate on equation (15), while procedurally applying the constraints inherent in the matrix W at each iteration",own_claim
these two conditions imply that unconstrained particles have r i close to zero,own_claim
completely constrained particles have v i = z i,own_claim
our modified CG method should produce the same result as the regular CG method,own_claim
no particles are constrained,data
our modified CG method will try to find v that satisfies two conditions,own_claim
the component of r i in the particle’s unconstrained direction(s) will be made equal to zero,own_claim
the component of v i in the particle’s constrained direction(s) will be exactly z i,own_claim
each particle i,data
each particle i,data
The variance in the running times was under 5%,own_claim
We doubt that simulators based on explicit integration methods could make a similar claim,own_claim
"Using the stiffness parameters in figure 1 as a reference, we ran the simulation with those bend stiffnesses multiplied by 0.1, 1.0, 10, 100 and 1,000",data
"This is slightly better than O(n 1.5 ) performance, which is in line with the convergence rates of the conjugate gradient method",own_claim
for systems such as equation (18),own_claim
14,data
"The running times were, respectively, 0.23 seconds/frame, 0.46 seconds/frame, 2.23 seconds/frame, and 10.3 seconds/frame",data
"We ran the simulation in figure 1 with cloth resolutions of 500, 899, 2,602 (shown in figure 1 ) and 7,359 particles",data
"The methods introduced in all of the previous sections usually allow us to take sizeable steps forward, without loss of stability",own_claim
there are still times when the step size must be reduced to avoid divergence,own_claim
"these methods tend to concentrate on the accuracy of the simulation, and not the stability",background_claim
There are a large number of methods for altering the size of a time step,background_claim
"Our goal is animation, not engineering",data
"visually pleasing results, meaning a numerically stable solution, rather than overall accuracy, is the deciding voice",own_claim
The trick is to recognize instability before you see it on your screen,own_claim
"Stiffness, and thus any potential instability, arises almost completely from the strong stretch forces in the cloth",background_claim
Subtlety is not required,own_claim
an unstable step invariably results in stretch changes that are quite large,own_claim
easily detected,own_claim
are,own_claim
the simulator settles down to wasting only one out of every 40 steps in attempting too large a step,own_claim
"This method, though simple, has served us well",own_claim
the user chooses too large a step,data
the simulator will try increasing the step size every 40 steps,data
We wholeheartedly refer the reader to Shewchuk,background_claim
for information on the CG method,background_claim
14,data
the effect of the matrix W in equation (14) is to filter out velocity changes in the constrained directions,own_claim
our stopping criterion should as well,own_claim
our constrained formulation ignores certain components of b,data
we add filtering to line 3,own_claim
should not include error due to the constraints,own_claim
we add filtering at lines 4 and 8,own_claim
products involving P −1 are trivially computed,own_claim
We use a simple preconditioner P by making P be a diagonal matrix with P ii = 1/A ii,data
we doubt there is a large speedup to be gained,own_claim
More elaborate preconditioners could be used,own_claim
obvious questions are “does it work?” followed by “how does it compare with the unmodified CG method?”,own_claim
modified-pcg,data
"our method always converges, which answers the first question",own_claim
in practice,data
Proofs about CG methods are difficult in general,background_claim
we did not notice any substantial change in the number of iterations required by the method,own_claim
the two methods have similar convergence behavior,own_claim
Empirically,data
we began using procedure modified-pcg,data
we used a penalty method and applied the standard CG method to equation (15),data
"the running time is close to O(n 1.5 ), which is what unmodified CG would be expected to deliver on this sort of problem",own_claim
14,data
Result in section 8,data
"we need to know what the actual force of constraint is, in order to determine when to terminate a constraint",own_claim
contact constraints,own_claim
we need to know the constraint force actually exerted in order to model frictional forces properly,own_claim
it is easy to add one more step to modified-pcg to determine the constraint force,own_claim
we can compute constraint forces at the end of modified-pcg by performing one last matrixvector product to compute A v − b,own_claim
e i is exactly the extra constraint force that must have been supplied to enforce the constraint,own_claim
"When modified-pcg terminates, the residual error e = A v − b has the property that e i need not be close to zero if particle i is constrained",data
The particles’ accelerations are inherently dependent on one another through the matrix A,own_claim
equation (16),data
the extra matrix-vector product to compute e really is necessary,own_claim
The vector r in modified-pcg is equal to filter(A v − b),data
"the correct approach to determing constraint release is combinatoric, as in Baraff",own_claim
2,data
We reject this approach as impractical,own_claim
the dimension of A,data
we allow contacts to release when the constraint force between a particle and a solid switches from a repulsive force to an attractive one,own_claim
this has proven to work well,own_claim
In practice,data
Friction presents a similar problem,own_claim
Much has been written about collision detection for cloth,background_claim
we have nothing substantial to add to the subject of collision detection per se,own_claim
a frictional force,own_claim
The force is not,own_claim
it reasonably emulates dynamic friction,own_claim
it is in actuality a damping force,own_claim
it is proportional to the slip velocity,own_claim
Applying static friction forces to cloth contacts is far more difficult,own_claim
is a problem we have not solved yet,own_claim
"The forces, and their derivatives with respect to position and velocity, are of course included",own_claim
equation (15),data
Both cloth/cloth and cloth/solid collisions give rise to the same problem,own_claim
two contacts form,data
collisions resulting in a reasonably substantial interpenetration depth can occur between one step and the next,own_claim
our simulator proceeds in discrete steps,data
this situation needs to be remedied,own_claim
"For both types of collisions, our detection algorithm reports an intersection, and then takes action to remedy the situation: either by enforcing a constraint (cloth/solid collisions) or by adding a penalty force (cloth/cloth) collisions.",data
the situation is more complicated,own_claim
cloth/solid collisions,data
this would not appear to be a problem,own_claim
the spring forces that are added work to counter the colliding velocities and then push the cloth apart,data
cloth/cloth collisions,data
This is unacceptable,own_claim
the cloth particle will continue to remain embedded somewhere below the solid object’s surface,own_claim
"we simply enforce a constraint which causes the colliding cloth particle to have a velocity consistent with the solid object’s velocity, and continue to enforce that constraint",data
One solution is to use Baumgarte stabilization,own_claim
18,data
which schedules the particle’s acceleration so that the position and velocity error of the particle with respect to the surface decay asymptotically to zero,background_claim
found it lacking,own_claim
We experimented with this technique,data
a fast rise to the surface was prone to noise and “jumpiness”,own_claim
"this could be eliminated, but at the cost of decreasing the step size",own_claim
A slower rise to the surface caused visual artifacts,own_claim
simply changing particle positions produced disastrous results,own_claim
it should not interfere with a one-step solver,own_claim
this would be problematic when using a multi-step differential equation solver which expects continuity,own_claim
a RungeKutta method,data
the backward Euler method,data
We tried a simpler solution,own_claim
"when intersections occurred, rather than wait for a scheduled constraint or a penalty force to eliminate the intersection, we simply altered the positions of the cloth particles, effecting an instantaneous (and discontinuous) change in position",data
This resulted in visibly “jumpy” behavior of the cloth in localized regions,own_claim
altering particle positions arbitrarily introduced excessively large deformation energies in an altered particle’s neighborhood,data
The stretch energy term in a cloth system is extremely strong,background_claim
the ability to make arbitrary small changes in a particle’s position continued to attract our attention,own_claim
The entire process of implicit integration can be considered to be a filtering process,own_claim
7,data
a mechanism for filtering energy changes caused by displacing particles might make position alteration a viable technique,own_claim
some sort of extra implicit step could be used as a filter,own_claim
forming and solving an additional linear system at each step seemed too expensive,own_claim
we can make use of the filtering effect of implicit integration without any extra work,own_claim
we simply modify the top row of equation (4) to,own_claim
x i = h(v 0i + v i ) + y i,own_claim
This presents an obvious solution,own_claim
the particle’s neighbors receive no advance notification of the change in position,own_claim
they are confronted with the alteration at the beginning of the next step,data
changing positions after a step has been taken doesn’t work,own_claim
we must follow this change through,own_claim
modified the top row of equation (4),data
M − h ∂v ∂f − h 2 ∂x ∂f v = h f 0 + h ∂x ∂f v 0 + ∂x ∂f y,own_claim
equation (17),data
derivation of section 3,data
symmetric transform from section 5,data
"This modification gives us complete control over both the position and velocity of a constrained particle in just one step, without any extra computational cost",own_claim
We can also add correction terms to particles involved in cloth/cloth collisions,own_claim
Without a constraint on those particles’ velocities there is no guarantee that they will go exactly where we want in one step,own_claim
the ability to induce sizeable jumps in position without excessively stiff spring forces adds greatly to the stability of the simulation,own_claim
"the simulation of wind is an area of vast interest in aerodynamic engineering, computational fluid dynamics",background_claim
and animation/visualisation of fluids in computer graphics,background_claim
it has been a rather abandoned subject in simulation of deformable objects such as cloth simulation,background_claim
conventional CFD applications require enormous computational power,background_claim
aerodynamic effects are,background_claim
capable of enhancing the realism of an animated scene,background_claim
are an important part of a cloth simulation system,background_claim
air resistance is a vital component which cannot be neglected,background_claim
realistic animation is desired,data
BTH + 03,data
we discuss two different approaches to       model force fields describing air motion,own_claim
these forces can be applied to generate aerodynamic effects on textiles,own_claim
The first method is based on modelling air flows with the Navier-Stokes equations,own_claim
"With this model, the effect of wind fields on smoke has already been investigated",background_claim
FSJ01,data
we extend this approach to wind effects on textiles,own_claim
the solution of the sophisticated NavierStokes equations is not desired and not necessary in all situations where wind effects shall be integrated into cloth simulations,own_claim
we present a much simpler model based on tracing wind particles that move along a global force field,own_claim
"By detecting collisions between the wind particles and objects in the scene, we are able to simulate the important effect of lee even with this straightforward method",own_claim
both approaches have different characteristics and aim at different applications for wind simulation,own_claim
Models for fluid dynamics can be essentially subdivided into two categories,background_claim
Simple models which are commonly used in most computer graphics applications describe the wind flow by predefined flow functions,background_claim
Either special flow primitives can be combined,background_claim
WH91,data
LDG96,data
Li00,data
or visually pleasing functions introducing random turbulence,background_claim
SF92,data
SF93,data
Sta97,data
are taken into account to model even complex wind scenes,background_claim
Many models use this method to move objects in the wind field through the scene,background_claim
Ree83,data
Sim90,data
WH91,data
BLM95,data
physically based fluid dynamics solving equations of motions with particle methods were presented recently,background_claim
IK03,data
fixed flow functions lack interaction with the user or objects in the scene,background_claim
"with increasing computer power, computer graphics concentrates on physically more accurate simulations",background_claim
In many fields the Navier-Stokes equations are the standard mathematical formulation to model fluid dynamics,background_claim
A vast literature exists on how to solve these equations numerically,background_claim
CFD are applied in this field for engineering tasks with a high degree of quality requirements,background_claim
it is quite difficult to apply these algorithms in computer graphics,background_claim
enormous calculation times,background_claim
faster fluid solvers were investigated for computer graphics applications,background_claim
Kajiya et al,background_claim
KvH84,data
Yaeger et al,background_claim
YU86,data
and Gamito et al,background_claim
GLG95,data
worked on fluid dynamics solvers in two dimensions,background_claim
many improvements and variants followed,background_claim
CdVLHM97,data
KM90,data
Foster and Metaxas,background_claim
FM96,data
FM97,data
and Griebel et al,background_claim
GDN98,data
presented a solver for the fully three dimensional Navier-Stokes equations,background_claim
very small step sizes had to be used,background_claim
explicit integration methods,data
"To enable faster simulations, a solution with an unconditionally stable solver was introduced by Stam",background_claim
Sta99,data
and further extended,background_claim
FSJ01,data
Sta01,data
Sta03,data
Modelling interaction of fluids with solid objects has been investigated by Takahashi et al,background_claim
TFK + 03,data
and Génevaux et al,background_claim
GHD03,data
Wei et al,background_claim
WZF + 03,data
presented an interesting approach to simulate lightweight objects like soap bubbles and feathers in a wind flow using a Lattice Boltzmann Model extended with a subgrid model,background_claim
For interaction of highly deformable objects and especially cloth-like objects only few models have been investigated,background_claim
Simple models consist in the calculation of lift and drag forces from the surrounding velocity field,background_claim
SF92,data
Pro95,data
KCC + 00,data
KCCL01,data
More complex interaction models calculate the wind force by a panel method,background_claim
LDG96,data
Li00,data
introducing local vortices,background_claim
we show how recent results in fluid dynamics for computer graphics can be exploited to simulate interaction of wind flows with textiles,own_claim
we extend the more straightforward approach of global wind field functions by the effect of lee,own_claim
To incorporate wind effects in a physically based animation we have to apply additional external forces in the dynamical model of the deformable objects,own_claim
given a wind flow represented by a velocity field in the scene we calculate the forces which are exerted on the simulated objects,own_claim
"we briefly describe the model we use to compute the effective aerodynamic forces such as wind force and air resistance, mainly following",own_claim
SF92,data
The wind force acting on objects in an air stream is decomposed into two components,own_claim
the lift force F L,data
the drag force F D,data
figure 1,data
The direction of the drag force F D is diametral to the relative velocity v rel = v object − u,own_claim
we still have air resistance for moving objects,own_claim
a windless situation,data
the unit normal n i of the i-th face of the object mesh,own_claim
is replaced by,own_claim
n i = n − i n i if n i,own_claim
two-dimensional objects do not exhibit an inside and outside,data
"· v i,rel &gt; 0",own_claim
figure 1,data
The drag force per face is,own_claim
"given by F i,D = 2 1 C D ρ|v i,rel | 2 A · ( n i · v i,rel ) · (− v i,rel )",own_claim
"The direction of the lift force, which is perpendicular to v i,rel and lies in the plane spanned by v i,rel and n i , is given by u i = ( n i × v i,rel ) × v i,rel",own_claim
"the lift force is calculated as F i,L = 1 2 C L ρ|v i,rel | 2 A cos θ · u i",own_claim
we describe two different wind field models and show how they can be used to model wind effects on textiles,own_claim
The first model is based on the work of Stam,own_claim
Sta97,data
and calculates the numerical solution of the Navier-Stokes equation with a semi-Lagrangian approach,own_claim
This model is extended to interaction of the wind flow with textiles,own_claim
The second model employs precomputed wind flows and particle tracing methods,own_claim
This approach is much easier to implement and can be added to existing simulation modules without additional computational cost,own_claim
The numerical algorithms used in CFD to solve these equations are designed for physical accuracy for engineering applications and are expensive in computation,background_claim
simplifications can be made which greatly reduce the computation costs as described by Stam,background_claim
Sta03,data
this precision is not necessary,data
the arising wind velocities are clearly below the speed of sound,background_claim
compressibility effects are negligible,background_claim
the wind is modelled as an incompressible constant density fluid,background_claim
This notably simplifies the numerical approximation,background_claim
the incompressible Navier-Stokes equations can be written in a compact vector notation as,background_claim
∇ · u = 0,background_claim
∂u = −(u · ∇)u − 1 ∇p + ν∇ 2 u + f,background_claim
∂t ρ,background_claim
The first equation states that the velocity field should be incompressible,background_claim
the second one describes the evolution of a velocity field over time,background_claim
To solve these equations numerically they first have to be discretised,background_claim
Foster and Metaxas,background_claim
FM96,data
use a finite difference approximation for the discretisation of the operators in equation (4.2),background_claim
"Then they update the cell’s velocities according to the divergence value computed in each direction, respectively, using an explicit integration scheme",background_claim
time steps in explicit computations usually need to be very small,background_claim
"who proposes an implicit integration scheme, which allows stable simulations with large time steps",background_claim
we follow Stam,background_claim
Sta99,data
the linear terms in equation (4.2) are straightforward to solve implicitly,background_claim
the term −(u · ∇)u is nonlinear and deserves special attention,background_claim
Equation (4.2) does not provide a divergent-free velocity field,background_claim
the divergence of each cell in the grid has to be projected to zero using the Helmholtz-Hodge decomposition,background_claim
Sta03,data
The major advantage of Navier-Stokes based approaches consists in the fact that the evolution of the wind flow over time is calculated,background_claim
It enables us to model global effects like convection and diffusion on a physical basis,background_claim
We present a model to exploit these wind models for calculating the interaction of deformable objects with the air flow by a boundary condition method,own_claim
a velocity field of its own isn’t really visually interesting until it starts moving objects,background_claim
Sta03,data
all objects in the scene interact with the fluid present in it,background_claim
To describe the above situation by a physical model we require the Neumann boundary condition ∂u =0 ∂n to be satisfied for the wind flow u at any boundary point of an object with normal n,own_claim
Rigid objects like walls will influence the fluid field but will not be affected by fluid forces themselves,background_claim
Deformable objects like cloth are supposed to both experience fluid forces and itself influence the fluid flow,background_claim
This,background_claim
is a major difficulty,background_claim
Without further remedial action setting the boundary according to the Neumann condition would mean that the fluid will not exert forces on the objects,background_claim
we want the Neumann boundary condition u(p b ) · n = 0 to be satisfied,background_claim
the wind velocity orthogonal to the object’s surface is just what causes the aerodynamic forces,background_claim
we propose a method which meets both requirements,own_claim
the boundary conditions are met and yet aerodynamic forces are obtained,own_claim
for every marked cell in the scene the previously stored normals are averaged in one space cell which are used to update the velocity at the cell to satisfy the Neumann boundary condition,own_claim
A different issue is how to deal with the inside of (rigid) objects,own_claim
The method to set boundary conditions as described above does not account for the interior of objects,own_claim
a nonzero velocity could be mistakenly assigned to cells lying inside an object,own_claim
"To avoid this situation, the path of the wind flow is checked for object intersection, whereby the collision detection of the cloth simulation system provides a simple method to deal with this issue",own_claim
MKE03,data
we combine the idea of creating wind fields by predefined flow primitives with particle tracing in given flow fields,own_claim
This method is very easy to implement and yields very plausible and nicely looking results,own_claim
A simple approach to generate complex air flows is to define a wind field by mathematical functions which assign to each point in space a unique velocity value,background_claim
this already enables an animator to design even complex wind fields,background_claim
WH91,data
"an irrotational (∇ × u = 0), inviscid, and incompressible (∇ · u = 0) fluid",data
the NavierStokes equations which describe the mechanics of any fluid,background_claim
section 4.1,data
can be simplified to give the Laplace equation,background_claim
∇ · u = ∇∇φ = ∇ 2 φ = 0,background_claim
The linearity of equation (4.3) enables an animator to combine basic flows which satisfy equation (4.3) as he likes,background_claim
to obtain complex fluid flows,background_claim
One drawback of this model is that it cannot handle objects exhibiting complex boundaries,background_claim
The approach to model solid objects in the scene taken by Wejchert et al. consists in placing a wind source using a mirror principle in order to extinguish the air flow at the boundary of the object,background_claim
this works for simple objects,background_claim
this approach is not feasible at all with deformable objects like textiles,background_claim
Another more serious drawback of this model for our application consists in the lack of interaction with objects,background_claim
The wind flow defined by the primitives will not react on objects in the scene,background_claim
tissues in the lee of other objects will be affected by the wind flow as well,background_claim
this method can be combined with the aerodynamic model described in section 3 to give nice and fast results,own_claim
section 5,data
To solve the described problems we propose a model which combines the simple global wind flow techniques with a particle tracing method,own_claim
There are two common approaches to discretising the continuous velocity field defined in space,background_claim
one can either choose the midpoint of a cell,background_claim
Sta99,data
or its six faces,background_claim
FM96,data
to define the field,background_claim
The basic idea of the particle tracing method is to trace wind particles through a field w = i w i defined by linear superposition of wind sources corresponding to flow primitives with respective velocity fields w i,background_claim
The field w does not account for lee effects caused by objects in the flow,background_claim
we compute the wind field u containing these effects as follows,own_claim
In our model every wind source is also a particle source,own_claim
The specific emission intervals and amounts depend on the properties of the flow sources,own_claim
In every time step each particle in a wind gust moves along its velocity field w i defined by the corresponding wind source,own_claim
the movement of the particles in a wind gust is only affected by the wind source they belong to,own_claim
The global superposition of all wind sources has no effect on these particles,own_claim
"this results in a path s(p t , p t+∆t )",own_claim
To calculate the wind particles’ positions we used the explicit Euler integration scheme,own_claim
a wind particle at position p t and time t,data
all grid cells colliding with the path are updated with the velocity of the associated wind source with respect to the position of the particle,own_claim
a particle moves along its path in space,data
The particle might cross several grid cells on its way during a single time step,own_claim
the path of the particle has to be subdivided into parts not exceeding the size of a grid cell,own_claim
a collision is detected at position p col,data
the normal of the colliding object n obj (p col ) is determined,own_claim
"the velocity of the particle is set to w i (p col , t+∆t) = w i (p col , t)−(n obj ·w i (p col , t))·n obj",own_claim
This assures that the velocity component of the resulting field u is orthogonal to the collision object’s surface at p col is zero,own_claim
no flow propagates through the object,own_claim
u is determined using the wind particles,own_claim
every point p that could not be reached by any wind particle will hold zero velocity,own_claim
this method solves the problems described in section 4.2.1,own_claim
the somewhat tempting simplification of tagging each cell to either have wind in it or not is not valid,own_claim
we now place a solid object in between these two sources,data
a rather undesired effect would occur using this simplification,own_claim
on both sides of the solid object all cells would be tagged as having wind,own_claim
evaluating the wind field at every cell we would obtain a zero velocity,own_claim
the extinguishing effect of the superposition of the two wind sources,own_claim
it is crucial for the particles to have the associated velocity of their wind source and not just the velocity resulting from the global superposition of all wind sources,own_claim
For physically accurate simulations based on the common method in fluid dynamics the model introduced by Stam produces realistic effects which global wind field models can never achieve,background_claim
It produces nice swirls and vortices derived from dynamical characteristics of the fluid,background_claim
implementing the fluid solver is quite complex,background_claim
using a high grid resolution is computationally expensive,background_claim
the global wind field model is better suited for an easy to implement tool which is easy to adapt to specific situations,own_claim
Particle systems are very common in the simulation engines,background_claim
most functionality can be adapted to integrate the proposed wind model,own_claim
"with this straightforward approach, nice, realistic looking results can be achieved",own_claim
next section,data
We implemented the wind models described in sections 4.1 and 4.2 in a cloth animation system that employs a fast finite element method to simulate the drape of textiles with measured material properties,own_claim
EKS03,data
For collision detection,own_claim
we use k-DOP hierarchies as described in,own_claim
MKE03,data
both methods produce realistic looking results which are capable of enhancing the realism of computer animations,own_claim
previous section,data
the first model has a wider range of applications,own_claim
the second one provides an easy method which still delivers realistic effects such as air resistance and lee,own_claim
All methods described in this work should be easy to extend to three-dimensional deformable objects,own_claim
All the methods apply the same except for simple changes,own_claim
three-dimensional objects define an inner and outer part,data
the adaption of the face normals in equation (3.1) is not necessary,own_claim
in the wind field computation care has to be taken that no wind field is present in the object,own_claim
the same method as described for rigid objects,own_claim
can be applied,own_claim
section 4.2.2,data
